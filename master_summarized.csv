videoId,start,title,description,speaker,text
kADcqtPlXdk,00:00:00,Fun with IoT &amp; Raspberry Pi 3,,Paul Usher,"Paul Usher, a Technical Evangelist for DevExpress, gave a talk at a conference about Raspberry Pi and Internet of Things. He thanked the sponsors and attendees, and introduced himself as a developer with over 26 years of experience. He discussed the agenda, which included defining IoT, practical projects, and useful resources. His goal was to leave the audience with a renewed interest in IoT and Raspberry Pi, and to encourage them to start experimenting with the technology.The speaker discusses the Internet of Things (IoT) and the Raspberry Pi. They clarify that IoT is not a protocol, communication technology, or embedded device, but rather a global network infrastructure linking physical and virtual objects using cloud computing, data capture, and network communications. The speaker mentions that cloud computing, specifically Microsoft Azure, is a useful tool for setting up an IoT hub. They also discuss the Raspberry Pi, clarifying that it is not an Arduino board. The speaker provides resources for setting up an IoT hub and using the Raspberry Pi.The video discusses two microprocessors, the Arduino and the Raspberry Pi. The Arduino is an open-source prototyping platform that is easy to use and based on a simple board with input and output pins. It is capable of controlling motors, servos, lights, and other devices. The Raspberry Pi, on the other hand, is a general-purpose computer that can run multiple programs and is usually equipped with a Linux operating system. It is a credit card-sized machine that can be used for a variety of tasks and is capable of running some quite amazing things. The video also features a robot named Fred, which is built on an Arduino board and is used to control a security system and home automation.The Raspberry Pi is a self-contained computer designed by a British company called Pi-Top. It was created to provide a more user-friendly way of working with a Raspberry Pi, which typically requires additional components such as a power supply and HDMI cable. The Pi-Top includes a battery, keyboard, and mouse, and runs on the Raspberry Pi's default operating system, Raspbian. It also includes an expansion board for experimenting with electronics, similar to the Arduino. The Raspberry Pi was originally designed to encourage children all over the world to learn programming on an affordable device. The current model, the Pi 3 B, runs on a quad-core CPU and includes onboard Bluetooth and Wi-Fi. It can be used as a desktop computer, media center, or for educational purposes. The Raspberry Pi Foundation aims to address the shortage of programmers by teaching children the joys of software development.The Raspberry Pi 3 is a small computer with onboard Bluetooth, Wi-Fi, and a micro SD card slot. It has a 7-inch touchscreen display and can be used for in-car audio or mounted on a wall. It also has a camera port and can be used for security purposes. The Raspberry Pi 3 runs on various operating systems, including Raspbian and Windows 10 IOT core. There are over 28 versions of Linux available for the Raspberry Pi. Google is planning to release a version of Android dedicated to the Raspberry Pi. Real-world projects include building a smart mirror, a camera rig, and a sprinkler control system. The Raspberry Pi is a low-cost solution for various computing needs.The Raspberry Pi is a versatile device that can be used for a variety of projects, from controlling sprinkler systems to home automation. There are many different ways to use the Raspberry Pi, including building a camera rig that uses delayed capture shots. To get started with developing for the Raspberry Pi, you need to think about what operating system you want to use and what you want to achieve with it. Windows 10 IOT Core is one option, but it is not the same as running Linux. To build a Windows 10 IOT Core device, you can use the IOT dashboard application to administer your devices. Once you have your device set up, you can use Visual Studio and the Windows 10 SDKs to deploy your project straight to your device. There is a great sample tutorial on the Microsoft website that can help you get started with coding for your project. The IOT dashboard also gives you access to the device itself, allowing you to see what apps are installed, traverse the file explorer, and more. You can also access the device with an IEP. Whether you prefer C# and Visual Studio or Linux, the Raspberry Pi offers endless possibilities for development.The speaker discusses the ease of working with Safari on IEP devices and asks the audience about their preferred development platforms. They mention the versatility of the $50 computer and the various programming languages available. The speaker then introduces Node-RED, a graphical interface for controlling IoT devices, which is built on top of a node.js server. They demonstrate how to set up a Twitter input feed and use it to trigger actions, such as storing tweets or closing windows. The speaker also mentions the ease of setting up new devices using the Windows IOT dashboard.The speaker discusses setting up an IoT dashboard using the NifC platform, which supports the Raspberry Pi 2 & 3 and the Dragon Board. The latest version includes Wi-Fi support. Setting up a new device involves selecting the desired IMT board and downloading the appropriate software. The speaker demonstrates how to set up a Raspberry Pi using the NifC platform and shows examples of projects available on the Microsoft site, such as controlling a 3D printer or turning a Pi into an internet radio. The speaker also mentions using Linux and the News software to set up a Pi. The speaker shares personal projects, such as using IoT to control door locks, monitor water levels and temperature, and set up a media center. The speaker encourages thinking outside the box and automating everyday tasks.The speaker discusses the potential for automation in everyday life, giving examples such as sensors on fans or air conditioning units, and a GPS sensor on a bike that automatically opens a garage door. They suggest thinking big picture and considering what tasks could be automated. The speaker acknowledges security concerns but believes that being sensible with technology is key. They mention the affordability of automation technology and recommend the Raspberry Pi as a useful tool. The speaker also briefly discusses their preference for IoT and provides useful links for further information."
gowvZ_EgZ3c,00:00:00,You&#39;re doing TypeScript wrong,"TypeScript is a great language with a ton of features to support application development in JavaScript. By allowing optional type annotations, TypeScript can tell you at write-time or compile-time when something could break at run-time, reducing the number of bugs in your code. What could be wrong with that?\n\nWe will look at a few examples where you may have inadvertently prevented TypeScript from being able to help you, how you can avoid them in the future, and (maybe) how we all got in this mess in the first place.\n\nBonus Q\u0026A Included at the end!",Ben Lowry,"Ben Lowry discusses common mistakes made when using TypeScript and how to avoid them. TypeScript is a language that supports application development in JavaScript by allowing optional type annotations. These annotations can help reduce bugs in code by identifying potential issues at write-time or compile-time. However, some developers inadvertently prevent TypeScript from being able to help them. One common mistake is using the ""any"" type, which is the most flexible type in JavaScript and can lead to mistakes that the compiler cannot catch. Lowry provides examples of how this can cause problems and suggests using more specific types instead. Overall, the talk emphasizes the importance of using TypeScript correctly to maximize its benefits in application development.The transcript discusses common mistakes made in TypeScript. One mistake is not properly narrowing down the type of a variable, which can lead to errors. Another mistake is duplicating related types, which can cause confusion and errors when making changes. The speaker suggests using techniques like extending interfaces or using the pick function to avoid these issues. The transcript also briefly mentions the new ""unknown"" type in TypeScript 3.The speaker discusses common mistakes made in TypeScript and offers tips for avoiding them. They mention the use of the ""thick"" operator for selecting properties, the importance of using the pipe instead of a comma to separate property names, and the usefulness of the read-only keyword for immutability. They also emphasize the importance of taking advantage of TypeScript compiler options, particularly strict mode, which provides extra features for catching bugs and unused locals. The speaker also discusses the dangers of using the ""any"" type, which can lead to implicit returns and null reference exceptions. They stress the importance of annotating types and checking for null values to avoid these issues. Finally, the speaker reminds listeners that TypeScript is not a language that the browser understands, and that there is no runtime type checking, so it is important to be vigilant when working with third-party code.The speaker discusses the importance of type checking in JavaScript, particularly when working with third parties. They caution against using risky practices such as ""any"" and suggest using alternatives such as ""unknown"" or union types. They also recommend using mapped types instead of duplicating interfaces and utilizing TypeScript's strict mode to catch errors. The speaker invites feedback and questions from the audience."
JmWLYpofw3g,00:00:00,MicroServices UI Composition,Ever wondered how websites like Amazon were created? They rely on Microservices architecture to be loosely-coupled but what about the UI? How do we avoid a monolithic UI? Join me on this talk to learn about techniques for developing a UI for a Microservices backend.,Hadi Eskandari,"Hadi Eskandari discusses Microservices UI Composition in this talk. He explains how websites like Amazon rely on Microservices architecture to be loosely-coupled, but the challenge lies in developing a UI for a Microservices backend. He identifies key areas of a web page, such as sales, inventory, availability, shipping, marketing, and ratings, and explains how these can be designed as microservices. He also explains the characteristics of microservices, such as autonomy, which means that a service should be able to operate on its own without shared state or database. Overall, the talk provides insights into techniques for developing a UI for a Microservices backend.Microservices are a type of architectural style that emphasizes autonomy, meaning that each service should be able to operate on its own without shared state or databases. These services are logical rather than physical components and encompass everything from the front end to the back end. They should be structured around business capabilities and have cross-functional teams managing them. The size of a microservice is not important, but it is recommended that teams managing them be around one or two pizza size teams. Pulling data from microservices is a common approach, and there are various patterns for doing so, such as the pool approach.The speaker discusses two approaches to managing multiple services in a web application. The first approach, called the ""pool approach,"" involves dividing services into separate markers and issuing multiple requests to the backend to fetch information. This approach has limitations due to the HTTP 1.1 protocol's limit of 48 concurrent requests and the difficulty of rendering lists or tables with information from multiple services. To work around these limitations, some people use an intermediary server to fetch and normalize the information, but this approach takes away autonomy and can lead to stale or inaccurate data.

The second approach, called the ""push approach,"" involves using message queues to push information from services into a centralized cache. This approach avoids the limitations of the pool approach and does not rely on batch jobs, but still requires careful management of the cache to ensure data accuracy and validity.In this video, the speaker discusses the challenges of creating a centralized cache for microservices. They propose using a message queue to push information into the cache, but note that this approach still suffers from caching validation issues and compromises the autonomy of the microservices. Instead, they suggest using a model composition approach, where a composition gateway acts as an intermediary between the client and the microservices. This gateway issues multiple concurrent requests to the microservices and combines the information into a dynamic object, which is then returned to the client. This approach allows for autonomy of the microservices and alignment with the business capabilities. The speaker notes that this approach only addresses the read side of the data and does not involve changing the data on the database.The speaker discusses the importance of choosing the appropriate database for a service based on business capabilities and alignment. They also emphasize the need for unique identifiers for services to communicate with each other. The speaker suggests using web components as a standard for building UI widgets, which allows for encapsulation and composability. The speaker also mentions Conway's Law, which states that organizational structure shapes software creation. A demo is shown using an ASP.NET Core project that incorporates these concepts. The code repo is available for further exploration.This video discusses a sample project that uses ASP.NET Core and demonstrates some of the concepts discussed in the presentation. The project consists of two microservices, one for managing sales information and orders, and the other for shipping. Each microservice is self-sufficient and has its own components, such as the database and view model composition. The main website is hosted on a simplified web application, and there is communication between the microservices through a composition gateway. The video demonstrates how the application works and shows how the response from the backend services is composed into a single response for the client. The video also briefly discusses the code, including the UI bits and view model composition.The video discusses a scenario where a client requests information from a Web API, which is then put into a dynamic object and returned to the client. The same process is used for rendering shipping information. The UI is developed by the same team as the backend component, so they know what to look for in the dynamic object. The video also discusses the concept of publisher-subscriber for loading information after certain events, such as orders being loaded. The composition gateway is used to listen on a specific route and fire off requests to multiple backend services. The code is available on Github and there are resources available for further learning, including a blog post and a workshop at NDC Sydney.The speaker mentions their advanced distributed system design course, specifically discussing the topic of services and composition. They also mention a workshop on the same subject at NDC Sydney."
3GAsQoe5Mvs,00:00:00,Reverse Engineering is good and also for everyone,"In the tech press, you have probably seen a story or two showcasing some kind of ridiculous hacking or technical feat. Maybe it's modifying a video game to have new features or characters, maybe it's rigging an ATM to play a jingle and spit out money like a jackpotting slot machine, maybe it's revealing every workstation/server CPU on Earth as hopelessly insecure in the space of an afternoon. For many, the reaction these stories evoke is roughly \",Scott Percival,"Scott Percival discusses the benefits of reverse engineering and how it can be accessible to everyone. He mentions various examples of impressive technical feats, such as modifying video games or hacking ATMs. Percival emphasizes the importance of having a goal when reverse engineering and mentions common goals such as extracting information or improving on a design. He also highlights the importance of practicing and learning from quality materials, such as videos and tutorials. Overall, Percival provides a brief introduction to reverse engineering and encourages individuals to give it a try.The speaker discusses reverse engineering and its importance in improving or replacing existing systems. They dispel myths about reverse engineering being exclusive or impossible, and emphasize that much of the information can be learned as you go. They also discuss three categories of reverse engineering techniques: blackbox analysis, dynamic analysis, and disassembly. The speaker then asks the audience how many have done blackbox engineering, and proceeds to explain more technical techniques from each category.The video discusses techniques for analyzing mystery data, which can come from various sources such as files, memory dumps, and CAPTCHAs. The speaker emphasizes the importance of understanding how data is encoded and suggests using a hex editor to analyze it. They also introduce a library called ""Cool Snakes"" that can help with binary file analysis and visualization. The video provides examples of how standard file formats can be identified using magic numbers. Overall, the video is geared towards experts in the field of data analysis.The speaker discusses how companies often hide messages in standard formats, which can be identified by a magic number. They provide examples of standard walls and explain how they can be used to hide game data. The speaker also discusses the use of histograms to analyze files and identify their contents without actually seeing them. They provide examples of symmetrical distributions and discuss how they can be used to identify ASCII text and x86 code. The speaker also briefly mentions compressed files.The video discusses reverse engineering in the software space, specifically focusing on troubleshooting and inspecting code as it runs. The video also touches on file compression and encryption, and the importance of learning how to use different platforms and tools for reverse engineering. The speaker provides a step-by-step process for investigating a problem or feature in a system, but notes that this process is not prescriptive and can be adapted to individual needs.This video discusses a process for debugging software, which involves tracking reduced behavior in a testing run, establishing boundaries of the system, observing points of interest, defining an entry point, and tracing through to the exact moment of the bug. The speaker encourages practicing this process on open source projects and discusses the importance of understanding assembly language and the underlying memory and operating system structures. The video also briefly touches on differences in CPU architecture.The speaker discusses the use of Shin Barbies in a program and the address space elevator. They explain that CPUs work similarly but have different registers, including general purpose and special registers. They also discuss shared libraries and the use of instruction set references to understand CPU instructions. The speaker encourages trying to read programs and gaining experience in the process.The speaker discusses the possibility of getting started in reverse engineering without much prior knowledge or experience. They encourage trying it out and persevering through failures to gain confidence and skill. The speaker also mentions their personal interest in reverse engineering Macromedia Director and preserving educational games. They address a question about legal implications of sharing reverse engineering results and remind the audience to provide feedback to be eligible for prizes."
O6EmODTMCRg,00:00:00,Is VR going to be a “Thing” for UX Design?,,Andrew Hutchison,"Andrew Hutchison discusses the hype surrounding virtual reality (VR) and its potential impact on user experience (UX) design. He emphasizes the importance of considering the long-term changes that will occur during a UX designer's career. Hutchison provides a brief history of VR and AR, highlighting their origins in science fiction and their evolution into modern technology. He notes that the iconic image of a person wearing a head-mounted display reaching into a futuristic grid has been around for decades and may be limiting our understanding of what VR can be. Overall, Hutchison encourages UX designers to approach VR with a critical eye and consider its potential impact on user experience.VR. The alleged reasons for VR's lack of success, such as low resolution, latency, and lack of compelling content, do not hold up under a first principles UX analysis. The world has changed dramatically since the early days of VR, with technology like smartphones and social media becoming ubiquitous. Immersion, a key characteristic of VR, can be achieved through other means such as music, books, and imagination. Augmented reality (AR) also overlays layers, which is already done in digital media. The fundamental problem with VR is that it does not add value to the user experience.AR hardware overlays layers, similar to digital media, but the fundamental problem with VR is that it doesn't add value to the experience. Sony's VR extension for the PlayStation 4 has only been taken up by 4% of users, indicating that VR is not a real thing. However, Facebook's acquisition of a small startup for $3 billion shows that organizations are in a titanic war to own the future market. Corporations, not individuals, will be the ones to pay for high-tech headsets, and the real value add of hands-free technology is critical in industries where safety and mobility are important. Hands-free technology will dramatically change the way we interact with AR and VR.The value of VR is not just in higher resolution, but in its hands-free capabilities, which are important for safety and mobility in various industries. However, the challenge lies in creating interfaces that are cognitively demanding and suitable for noisy environments. This can be achieved through voice, gesture, face movements, eye tracking, and even brain-computer interfaces. AI will play a crucial role in filtering out noise and making VR more powerful. In the entertainment world, traditional clients may not use head-mounted displays, but in industries like healthcare, VR can assist in real-world situations like ambulance crews responding to accidents. The challenges facing the industry include the early stages of hardware development, but the amount of investment in VR means it will happen. The question for businesses is how they will adapt to this new technology.The hardware for emerging technologies is still in its early stages, but the amount of money being invested means it will become a reality. Professionals in this field should consider how they will respond when clients ask if they can implement these technologies."
jALETmi-mQY,00:00:00,The Computer Science Behind Colour,"We all use colours. Maybe you are a seasoned front end developer or designer, your custom terminal colour scheme is something to behold, or perhaps your small child (or you) is currently going through a finger painting stage. Regardless of what part of tech you work in, you have encountered a situation when you've had to select some colours. The question is, when you pick a colour on a colour wheel or type in a hex or RGB code, how does that colour actually appear on the screen?\n\nCome and learn about the Computer Science of colour with me. In this talk, we're going to dig deeper into hex codes. What do they mean, how and why do they get converted to RGB codes, and how does a computer use that to generate a colour we can see? We'll unpack it all by learning binary, enjoying a #throwback to mixing paint in kindergarten, and taking a much closer look at the human eye.\n\nYou will leave this talk with a whole new appreciation and understanding for the science behind something as simple as colour, something you have likely never thought twice about. This talk is not just for designers and front end developers, there is something interesting for everyone to learn here.\n\n--\nI am a developer and educator, and have been teaching others to code for as long as I have been coding myself. I am a firm believer that anyone can learn to code, and prove it by dedicating a lot of my working and personal life to helping to improve the diversity in the tech industry.\n\nI have extensive experience in writing resources and teaching workshops about Computer Science and Programming for all ages and experience levels. My ability to describe technical details in a simple manner certainly sets me apart from others in my field and makes me an asset to any team.\n\nIn my spare time I can be found teaching my dog tricks, watching Netflix and yelling at \",Hayley van Waas,"Hayley van Waas is a developer and educator who has been teaching others to code for as long as she has been coding herself. In her talk, she delves into the computer science behind color, explaining how hex codes are converted to RGB codes and how computers use this information to generate colors we can see. She uses binary and a throwback to mixing paint in kindergarten to help explain the process. Hayley is the tech lead for She Codes, a social enterprise that aims to increase the number of women in tech. She leads a small army of mentors who are trained to teach others how to get into tech, and she also writes educational content about computer science and programming.The speaker leads a team of mentors who train others to get into tech and writes educational content about computer science and programming. She is passionate about education and technology and has spent a considerable portion of her career working with people who are new to tech. She believes that there are misconceptions about computers and that they are not magical all-knowing beings, but rather super dumb boxes of metal that exist to solve human problems. In her talk, she discusses the clever and smart way in which color works on a computer and how it benefits humans. The talk includes a lot of emoji and is 45 minutes long.The speaker discusses the science behind color mixing, including the physics of light and the biology of how our eyes perceive color. They also touch on computer science and how color codes work in CSS. The talk includes interactive elements, such as mixing paint to create new colors. The speaker emphasizes that the talk will cover a range of topics, from kindergarten-level color mixing to university-level computer science.personally preferred shade, then my gamut of colors would change as well. Understanding color models and how to mix colors is essential for artists and designers to create the exact shades they need for their work. The RYB color model, which uses red, yellow, and blue as primary colors, is just one of many color models used in the industry. By mixing primary colors, secondary and tertiary colors can be created, expanding the range of colors available for use. The gamut of colors refers to all the possible colors that can be created within a specific color model.colors together, I can create new colors that reflect different wavelengths of light. This is because the pigments in the paint absorb certain wavelengths and reflect others. The more pigments I mix together, the more wavelengths of light are absorbed and reflected, creating a wider range of colors. However, if I change one of the paints I'm using, it will affect the gamut of colors I can create. 

To understand why we can see colors in the first place, we need to understand visible electromagnetic radiation, which is the range of frequencies covered by electromagnetic radiation. This radiation travels in waves, and the frequency of the wave determines the color we see. Visible light is a small range of wavelengths within the electromagnetic spectrum, and the different wavelengths influence our perception of color. 

When we see an object, it's because the object is reflecting certain wavelengths of light and absorbing others. A white canvas reflects all wavelengths of light equally, which is why we see it as white. Adding paint to the canvas changes which wavelengths are reflected and absorbed, creating new colors. 

Overall, understanding the physics behind color can help us create and manipulate colors in art and design.The video discusses the concepts of color mixing and how we see colors. The process of subtractive color mixing is explained, where colors are added to a white canvas and slowly removed to create different shades. The video also delves into the biology of the eye, explaining the different parts such as the iris, pupil, cornea, lens, and retina. The cornea and lens work together to focus on objects at different distances, while the retina receives light and converts it into electrical neural impulses that are sent to the brain.The retina is a squishy tissue that covers the back of the eye and receives light from the cornea and lens, converting it to electrical neural impulses that are sent to the brain via the optic nerve. The retina contains millions of photoreceptor cells, including cones and rods. There are three types of cones, which correspond to short, medium, and long wavelengths and are sensitive to blue, green, and red colors. However, not all individuals have the same number of cones, and some may have color vision deficiencies. Rod cells are more sensitive to light and help us see in the dark.The human eye has two types of cells, cone cells and rod cells. Cone cells are responsible for color vision and are less sensitive to light, while rod cells help us see in low light conditions and are more sensitive to blue wavelengths. At night, our cone cells are not as effective, so we see a blue tint. Mixing colors using light is called additive mixing, and it works differently than mixing colors using paint, which is called subtractive mixing. When mixing primary colors using light, we can create secondary colors and even white, while mixing primary colors using paint results in black. This is because light is additive, while paint is subtractive.light. When we mix different amounts of red, green, and blue light, we can create any color within this circle. This is how computer screens display colors. Each pixel is made up of red, green, and blue lights that can be turned on or off to create different colors. 

In contrast, when we mix pigments or paints, we use the subtractive color model. This means that when we mix different colors, we are actually subtracting certain wavelengths of light and the result appears as a different color. 

There is an ongoing debate among experts about whether white and black are technically colors. In the additive color model, white is the combination of all colors and black is the absence of color. In the subtractive color model, black is the combination of all colors and white is the absence of color. 

Understanding how colors work is important in the field of computer science, as it is essential for creating accurate and vibrant displays on computer screens.Computer screens use the RGB color model, which represents a specific subset of all visible colors of light. RGB is a device-dependent model, meaning manufacturers use slightly different color spaces based on RGB, resulting in slight variations in the gamut of colors that can be produced on a screen. RGB is the preferred color model for computers because it matches human biology, specifically the way our cones perceive color. The RGB function is commonly used in web development to define background colors by changing the intensity of red, green, and blue for each pixel used to display the web page on the screen.The speaker explains how the RGB function works by changing the intensity of red, green, and blue in each pixel used to display a webpage. They demonstrate how changing the values of the RGB function can create different colors, including primary colors and combinations. The speaker then delves into the decimal number system and how it relates to the 0-255 range used in the RGB function. They explain that computers use binary instead of decimal, which is why they can only handle certain numbers.This video explains how computers use binary digits, or bits, to represent numbers. Unlike the decimal system, where each digit is worth 10 times as much as the one to its right, in binary, each digit is worth only two times as much. This means that representing numbers in binary is a bit trickier. The video provides examples of how to convert decimal numbers to binary and vice versa. It also explains that computers prefer to work with eight bits, or one byte, and that 24-bit color refers to the use of eight bits for each of the red, green, and blue components.In this video, the speaker explains the concept of color in digital displays. They mention that color is made up of three components: red, green, and blue, each with 8 bits or 1 byte, resulting in 24-bit color. This allows for 16.7 million colors to be represented, which is more than what humans can see. The speaker also discusses the history of color in CSS, starting with 16 basic colors defined in the HTML 3.0 spec in 1995. These colors were considered standard and were supported by the Windows VGA palette. By 2005, all modern browsers supported the full list of 140 colors. The speaker also explains the origin of color names, which came from a file called rgb.txt in the X Windows System software released in 1984. The file contained a list of 69 colors, which eventually became a commonly used list of colors in design.CSS color naming was initially a mess, with no real standard and different colors meaning different things on different computers. In the 1990s, a standardized list of 216 web safe colors was introduced, but it became irrelevant with the introduction of true color or 24-bit color. Hex codes are another way to define color in CSS, and they work similarly to RGB. Hex codes are broken down into three components: red, green, and blue.The video discusses the use of hexadecimal codes in web development to represent colors. Hex codes are broken down into three components: red, green, and blue. Each component uses eight bits, resulting in a 24-bit color. Hexadecimal uses a base 16 numbering system, with letters representing numbers beyond 10. The use of hexadecimal is a shorthand for binary, and it is commonly used in web development. Other color models, such as HSL and CMYK, are also available. However, RGB and hex codes are commonly used due to their ease of use and convenience.The speaker discusses various color models, including RYB, RGB, HSL, CMY, CMYK, and HEX. They explain how these models are used in different industries, such as printing. The speaker also shares their motivation for giving this talk, which is to demystify computers and make them more accessible to everyone. They believe that understanding how computers work can help us appreciate the technology that surrounds us and make our lives easier.The speaker believes that coding and understanding computer technology is not as complicated as it may seem. They encourage individuals to research and learn about hex codes and RGB codes, as they are not inaccessible. The speaker hopes that individuals will find the topic interesting and not view computers as a mystery. They conclude by thanking the audience and inviting them to follow them on Twitter or check out their blog for a summary of the talk."
2BMkRDrvK58,00:00:00,Dependency Injection is only ⅕ of the problem,"Dependency Injection is only ⅕ of the Inversion of Control problem\n\nWhat is The OO Matrix?  I can not tell you.  I must show you what it is.  Some may be aware of it's existence, while others have grown up in it knowing no difference.  This talk offers you the red pill to show you whatis The OO Matrix.\n\nPlus, if you think Spring is great, then this talk shows you how it can be better.  If you think Spring has issues, then this talk gives you the missing pieces.\n\nDependency Injection is a great concept, but it's actually only 1/5 of the Inversion of Control (IoC) problem.   By introducing further injection techniques (such as Thread Injection and Continuation Injection), we can create a more complete Inversion of Control.\n\nAlso, Functional Programming is on the rise.  Functional programming claims dependency injection is not necessary, as this is achieved through higher order function composition. Therefore, is there still a place for Dependency Injection in the future of programming?   Yes, we actually need to apply IoC to Functional programming.\n\nThe result is better cohesion and lower coupling in your code.\n\nThis talk will take you through the remaining IoC concepts, so that these enable you to build and maintain your systems easier.\n\n\nAuthor of OfficeFloor: using office patterns to improve software design and founder of OfficeFloor (http://officefloor.net).   My focus has been on improving Software via taking patterns from the Business (rather than the typical forcing \",Daniel Sagenschneider,"Daniel Sagenschneider discusses the Inversion of Control problem and how Dependency Injection is only one aspect of it. He introduces further injection techniques such as Thread Injection and Continuation Injection to create a more complete Inversion of Control. He also discusses the rise of Functional Programming and how it claims dependency injection is not necessary, but IoC still needs to be applied to it. The result is better cohesion and lower coupling in code. Sagenschneider takes the audience through the remaining IoC concepts to enable them to build and maintain their systems easier. He also mentions his focus on improving software design by taking patterns from the business. The talk offers insights on how Spring can be improved and gives missing pieces for those who think it has issues.Dependency injection is a technique that removes the need for parameters to be provided by the caller, resulting in looser coupling. However, there are still five aspects of coupling to a method, including the return type, method name, exceptions, executing method, and executing thread. This can make it difficult to change a method in a library or API without affecting all client calls. Mainstream object orientation uses methods to get objects to talk, resulting in rigid coupling that is difficult to refactor. To address this, one can use unnamed functions and inject handlers for exceptions and executors to reduce coupling.The speaker discusses a problem with traditional exception handling in which exceptions are escalated to a manager, and proposes a solution involving inversion of control and dependency injection. By using an executor and passing state down through a context, the implementation can be changed without affecting the caller. The speaker also mentions the benefits of using a control container and discusses how this approach can be applied to functional programming.The speaker discusses the concept of inverting problems in functional programming, inspired by mathematician Carl Jacobi's work on elliptic functions. They explain that functional programming can be perceived as difficult due to the expansion of parameter coupling in function composition. However, by inverting the problem and treating functions as actors/models, they can be controlled more efficiently and with less overhead than traditional microservices. The speaker suggests that this approach can be used to create lightweight and scalable systems.The speaker discusses a more lightweight and organic approach to building systems using ISC, which allows for calls to be made at the function level rather than the method level. This approach is based on messaging and allows for easy refactoring and visualization of dependencies. The speaker argues that this approach is superior to traditional dependency injection and offers a more comprehensive solution to coupling control. The speaker also provides an example of a production-ready framework that uses this approach and allows for easy configuration and visualization of the application.The speaker discusses dependency injection and its relationship to coupling control. They mention that there are four other aspects, including thread injection and functional injection. The speaker is the founder of a framework and is looking for early adopters to try it out. They mention that the hosting model for these applications is just like a normal app and can be hosted in anything. The app can even be put into servlet containers and can inherit the threading model from the container. The speaker takes questions and then the session ends."
b2AuaG_cYZA,00:00:00,Data Lakes! and other bodies of water that killed &#39;Big Data&#39;,"Big Data was the big, exciting buzzword of the 2010 era. Everywhere we looked, companies were scrambling to utilize this illustrious beast, telling us that it represented the future of not only computing, but profitability and innovation. Look at Facebook or Google, leveraging vast quantities of information to better push ads targeting our insecurities and desires, or the multi-billion dollar companies that spawned out of it like Palantir or Visallo.\n\n\nFast forward ten years, and we barely ever hear the term Big Data uttered, let alone used in our day to day life. Instead, we’re getting inundated with terms like ‘Data Lake’, ‘Data Pond’, and ‘Data Lake House’. \n\n\nIs this terminology built just to confuse us? Is the ominous man up there in the Cloud making up irrational terms just to peddle us new technologies we don’t need, or is he just thirsty?\n\n\nThis blast-from-the-present talk from a cloud-native data engineer will demystify and un-complicate the current state of ‘Big Data’, and help you impress your friends and coworkers with a knowledge of made-up sounding tech buzzwords.\n\nMostly intermediate\n20 mins\nData \u0026 Analytics\nStarting out my career in test automation and SaaS development, I quickly found a passion for making sense of data- the bigger and more complicated the better. While I love my career and the tech industry, I take issue with the vast amounts of complicated jargon that are used to confuse people and raise the barrier to entry.\nA lot of the things we do aren't actually that complicated, and this gets in the way of people understanding the solutions that are there to help them.\nFighting jargon, one acronym at a time.",Aiden Sobey,"Big Data, where companies were scrambling to utilize vast quantities of information for profitability and innovation. However, fast forward ten years and the term Big Data is rarely used, instead, we hear terms like Data Lake, Data Pond, and Data Lake House. In this talk, Aiden Sobey, a cloud-native data engineer, demystifies and un-complicates the current state of Big Data and explains the technology that has pushed it out of the spotlight, which is Data Lakes. He explains what Data Lakes actually do and provides other water analogies in the data engineering area. Aiden works for kzn, a cloud consultancy that specializes in serverless technology and data engineering, and they build Data Lakes for a range of clients.moved from a simpler time in the mid-1980s where data was stored in data warehouses and SQL was used for reporting, to the age of Big Data in roughly 2011. Big Data refers to data sets that are too large or complex to deal with using traditional methods like data warehouses. The rise of Big Data was caused by social media companies realizing how much money they can make from pushing personalized ads, and other areas of technology like IoT. Data Lakes provide a cheap and readily available means of storing and ingesting almost unlimited quantities of data. However, data warehouses store data in databases and only accept structured data, while data can be structured or unstructured. This is where data lakes come in, as they can store both structured and unstructured data, making them more suitable for accommodating fast quantities of data.This transcript discusses the importance of structure and metadata in understanding data lakes and their role in storing large quantities of data. The transcript explains that unstructured data, such as a CSV file, cannot be loaded into a data warehouse without knowing its structure. Metadata provides information about the data, such as data types and constraints, and allows us to treat the data as structured. A data lake is a centralized store for structured and unstructured data at any scale, and accepts any kind of data, unlike a data warehouse which only accepts structured data. The transcript includes an AWS architecture diagram to illustrate the process of adding structure to unstructured data in a data lake.This video discusses the architecture of a data lake on AWS. The data lake accepts a range of data sources, both structured and unstructured, and has two zones: an unstructured zone and a structured zone. A glue job is used to extract, transform, and load unstructured data and apply metadata to add structure to it. The structured data is then stored in a data warehouse or S3 bucket. The data lake allows for the integration of external services, such as Sagemaker for artificial intelligence and Power BI for visualization. Real-time data can also be streamed into the data lake using Kinesis streams. The cost efficiency and scalability of the modern cloud allows for the storage of enormous volumes of data without specialist input, but common side effects include data governance issues, performance complaints, and massive scope creep.The transcript discusses the evolution of data infrastructure and how the rise of data lakes in the cloud has revolutionized the way businesses store and use data. The speaker explains that data lakes are large, collaborative repositories of data that enable machine learning, predictive analysis, and automated decision-making. The transcript also introduces other bodies of water, such as data swamps, data puddles, and data ponds, which are smaller, more specialized versions of data lakes. The speaker emphasizes the importance of good data governance and quality to avoid creating data swamps. The transcript concludes that cloud technology has made it easier for businesses to scale their data infrastructure and that unstructured data is a key part of data lakes.The speaker discusses the evolution of data storage and the emergence of data lakes as a way to store and access large amounts of data, including unstructured data. They also mention the concept of a ""lake house"" as an expansion of a data lake that includes machine learning and data governance capabilities. The speaker notes that data lakes are often used for consolidating data silos and generating dashboards and reports. They also address security concerns and recommend using SSO to authenticate access to data. The concept of data mesh is briefly mentioned as a potential solution to some of the challenges of data lakes and data warehouses.The speaker recommends using SSO to authenticate access to unstructured stores or S3 buckets to ensure that only authorized individuals within the active directory domain can access the data. However, the approach may vary depending on the company."
KSxoHpQ1SlI,00:00:00,Architecture for all,"A look into how we can create Architecture diagrams that are useful across multiple levels of the business, from Engineers to Product Owners, Stakeholders and everyone in between. Creating a shared understanding of the product being built helps everyone involved to collaborate and build a better product.\n\nNo experience necessary\n20 mins\nCore/Non Technical Skills\nTrent has been designing, building and testing software for over 10 years, across a wide variety of industries. He has a passion for DevOps and inclusive software, along with a lifelong love of learning and sharing.",Trent Jones,"Trent Jones discusses how to create architecture diagrams that are useful across multiple levels of a business, from engineers to product owners and stakeholders. He emphasizes the importance of creating a shared understanding of the product being built to facilitate collaboration and build a better product. Jones has been designing, building, and testing software for over 10 years and has a passion for DevOps and inclusive software. He starts his talk with a quote that highlights the significance of design decisions in shaping a system. Jones then discusses different examples of architecture diagrams, pointing out their limitations and lack of clarity.with a discussion on architecture diagrams and how they can be improved. The speaker presents several examples of diagrams, but notes that they are all just boxes and arrows, lacking detail on the actual components and technologies involved. The speaker then presents a scenario involving a cannery to illustrate how a better architecture diagram can be created. The initial diagram is simplistic and lacks detail, but the speaker iterates on it to include more information on the production line, the random sample sensor, and the actions taken by the manager. Overall, the speaker emphasizes the importance of creating detailed and informative architecture diagrams.The transcript discusses the importance of creating clear and detailed diagrams to convey information about complex systems. The speaker uses a real-world example of a production line system, breaking down the components and processes involved. They emphasize the need for clear labels and descriptive symbols to convey meaning to stakeholders and team members. The example includes a step function with decision points and parallel states, illustrating the complexity of the system. The goal is to facilitate discussion and understanding among team members and stakeholders.The speaker discusses the importance of building architecture that includes everyone, rather than creating black boxes that only technical experts can understand. They use an example of a fully automated system with Lambdas and queues to demonstrate how breaking down components into single responsibilities can make the system more understandable and accessible to all team members, including product owners and new developers. The key takeaways are to encourage involvement from all team members, build diagrams that are easy to understand, and prioritize readability and discoverability.The speaker discusses the benefits of creating an architecture diagram that is easily understandable by all members of a team, from executives to junior developers. The diagram should be clear and concise, with boxes representing different components of the system and arrows indicating the flow of data between them. This approach allows for better communication and collaboration within the team, as well as quicker onboarding of new team members. It also provides an opportunity to enhance the workflow and identify areas for improvement. The speaker suggests that when reviewing someone else's architecture diagram, it may be helpful to build one yourself to ensure all aspects of the system are captured. There are also tools available that can generate diagrams automatically, such as those that work well with Azure.The speaker discusses the use of tools for creating architecture diagrams, mentioning a recent tool that works well with Azure and ARM templates. They also mention using Visio for a real-world diagram, but suggest that Draw.io is a useful free and open-source alternative. The speaker is not familiar with Lucid, but acknowledges its existence. No further questions are asked."
rvsNGUEe4n4,00:00:00,Choose Your Own Pen-Test Adventure!,"In this interactive talk, we'll perform a live pen-test on a vulnerable website, with the audience deciding what to try next.\n\nAt each stage, vote on what approach to take, witness the results, and learn what the website's developers did right/wrong in securing their website.\n\nEmbark together on an adventure taking us from website user to server admin, and learn some security and pen testing tips along the way!\n\nMostly intermediate\n45 mins\nSecurity\nJames Hercock\nJames is a software engineer at VGW whose career in technology started with developing train simulators. He went on to join Bankwest's graduate program in 2018, where a passion for cyber security was ignited in him while spending time in the incident response \u0026 security operations centre.\n\nWhen not working on tech, he enjoys tinkering with home automation, hacking, gymnastics, board games and copious amounts of video games.\n\nJames Trotter\nJames is a software developer at Versent. He will log back in later and bolster his profile.",James Hercock &amp; James Trotter,"James Hercock and James Trotter presented an interactive talk called ""Choose Your Own Pen-Test Adventure!"" where they performed a live pen-test on a vulnerable website, with the audience deciding what to try next. The audience voted on what approach to take at each stage, witnessed the results, and learned what the website's developers did right/wrong in securing their website. The talk aimed to take the audience on an adventure from website user to server admin, and teach some security and pen testing tips along the way. James Hercock is a software engineer at VGW, and James Trotter is a software developer at Versent. The talk had four main goals: to give the audience a peek at what breaking into a website or service looks like, to share practical tips for securing websites, to teach some pen testing techniques, and to have fun.will be exploring the website of an online pen store. The presenters will be demonstrating how to break into a website and sharing practical tips for engineers. The audience will be participating in a Choose Your Own Adventure style demo, where they will be making decisions that will drive the live demo. The presenters will be using a straw poll to gather audience input. The website has a search feature, a gallery, and a login page. The presenters will be registering an account for the purposes of the test. The website is hosted in S3, indicating that it is a static website. The presenters will be exploring the JavaScript code in the dev tools to find anything interesting.The speaker discusses how to perform a security assessment on a static website hosted on S3 using JavaScript code. They identify the website as a React application and enumerate the available routes to find interesting pages. They discover an ""add product"" page that requires admin access and use various methods to try to gain admin privileges, including SQL injection, mass assignment, and brute forcing. The audience is asked to vote on which method to use, and the speaker will proceed with the chosen option.the user and reject any additional fields that are not allowed. This is known as ""whitelisting"" and is a common security practice. Additionally, they should have implemented proper validation and authorization checks to ensure that only authorized users can access certain pages and perform certain actions. Overall, the developer made a critical mistake by not properly validating and sanitizing user input, which led to a serious vulnerability in the application.The speaker discusses a vulnerability in a web application where an extra field was added without proper validation, allowing an attacker to become an admin. They suggest implementing explicit input validation or using a third-party service for user account management. The speaker then resumes a live demo and explores the permissions gained as an admin. They discuss options for further exploitation, including information disclosure through manipulating the server logs feature.The video discusses website security and potential vulnerabilities, specifically server logs and remote code execution. The presenter demonstrates how to manipulate the server logs feature to gain access to information that should not be disclosed. They also show how remote code execution can be exploited through deserialization, using the add product feature as an example. The audience is asked to vote on which vulnerability to explore further, and remote code execution is chosen. The presenter then demonstrates how to use Burp and repeater to manipulate the payload and test for remote code execution. They successfully identify a vulnerability and receive a 200 response with the additional information being true, indicating remote code execution. The presenter then attempts to identify what they are working with using eval.The transcript discusses identifying and exploiting a remote code execution vulnerability in JavaScript. The speaker uses the Yum package manager to install netcat, a tool used to set up a remote shell. They set up a bind shell on the target and connect to it from their laptop, gaining root access to the target machine. The speaker also discusses the difference between bind shells and reverse shells, with reverse shells being more commonly used in practice. The transcript concludes by mentioning the importance of reflecting on the process and learning from it.The video demonstrates a security vulnerability in a web application where the developer used the ""eval"" function in JavaScript, which can execute arbitrary code and potentially allow an attacker to take control of the application. The video also shows how the attacker can use this vulnerability to gain access to an AWS EC2 instance and query the Secrets Manager for secrets. The attacker is able to determine their permissions and escalate their privileges by querying the metadata endpoint and examining the attached policies. The video emphasizes the importance of avoiding the use of ""eval"" and properly securing web applications to prevent such attacks.The speaker discusses three goals related to accessing a secret in AWS Secrets Manager. The first goal is to obtain permissions to run EC2 instances, which can be achieved by using the ""create policy version"" permission. The second goal is to pass a role from one resource to another, which can be done using the ""pass role"" permission. The third goal is to access the secret itself, which can be accomplished by updating the policy attached to the role using the ""create policy version"" permission. The speaker then presents a command to update the policy, which includes a JSON document with the necessary permissions to access the secret. The audience votes on which permission to use, and ""create policy version"" wins by a narrow margin. The speaker then updates the policy and sets it as the default version.The video demonstrates a penetration test on an API host, where the tester was able to exploit two vulnerabilities to gain admin access. The first vulnerability was a mass assignment issue, which allowed the tester to create a new user with admin privileges. The second vulnerability was an insecure IAM policy, which allowed the tester to read any secret in the account. The tester recommends sanitizing and controlling user inputs, applying the principle of least privilege, and implementing defense in depth to minimize blast radius. The developer should have segregated duties and scoped IAM policies as granular as possible. The tester also recommends using tools like Weird Al Pacu and Red Bodo to test permissions.The speaker discusses the importance of having multiple layers of security to prevent attackers from exploiting vulnerabilities and gaining further access. They recommend resources such as Try Hack Me and Hack the Box for practicing and improving skills, as well as certifications such as OSCP and CEH for those interested in pursuing a career in pen testing. They also suggest participating in CTFs as a way to learn and engage with the community. The speaker acknowledges that they are not professional pen testers and suggests that entry-level analyst roles may be a suitable starting point for those interested in the field. The talk concludes with a thank you to the sponsors and a Q&A session.The speakers discuss the scope of an enterprise pen test and how it is agreed upon between the pen tester and the client. They also mention the importance of defense in depth and minimizing risk in case of a breach. The observation is made that there is always a vulnerability to be found in any code base. The session ends with a reminder of the upcoming session on web APIs and two-factor authentication."
rDzlITb-Ro8,00:00:00,AI for Earth,"AI for Earth: Using machine learning to monitor, model, and manage natural resources\n\nThe AI for Earth program applies machine learning and data science to hard challenges in agriculture, water, climate, and biodiversity.  In this talk, we will discuss how the AI for Earth team, Microsoft Research, and AI for Earth grant recipients are using machine learning to enable precision agriculture, to predict outbreaks of disease, to detect poachers in real time, and to classify animals for conservation.  Finally, we will briefly provide details on the AI for Earth grant program to obtain resources for everyone to work on these challenges.  \n\nJennifer Marsman is the Principal Software Engineer of Microsoft’s “AI for Earth” group, where she uses data science, machine learning, and artificial intelligence to aid with clean water, agriculture, biodiversity, and climate change.  Jennifer is a frequent speaker at software development conferences around the world.  Since 2016, Jennifer was recognized as one of the “top 100 most influential individuals in artificial intelligence and machine learning” by Onalytica, reaching the #2 slot in 2018.  She has been featured in Bloomberg for her work using EEG and machine learning to perform lie detection.  In 2009, Jennifer was chosen as \",Jennifer Marsman,"Jennifer Marsman, Principal Software Engineer of Microsoft's ""AI for Earth"" group, discusses the AI for Earth program, which applies machine learning and data science to challenges in agriculture, water, climate, and biodiversity. She highlights how the program is being used to enable precision agriculture, predict disease outbreaks, detect poachers in real-time, and classify animals for conservation. Marsman also briefly discusses the AI for Earth grant program, which provides resources for individuals and organizations to work on these challenges. She encourages those working in the space to apply for a grant.The speaker discusses the importance of applying for grants in the field and highlights some grant recipients who have done impressive work using machine learning. One project, called Project Premonition, aims to stop outbreaks of disease before they happen by leveraging data collectors that are already in the environment, such as mosquitoes. By capturing a mosquito that has consumed a blood meal, researchers can use genomics to determine what host animal the mosquito fed on and what diseases it may carry. The project uses an intelligent trap, which is a cylinder with a lure in the center and 64 individual cells with trapdoors. The trap can classify and capture only the insects that researchers are interested in studying.The video discusses a smart insect trap that can differentiate between different species of insects based on their behavior and trap them for further study. The trap uses a lure and individual trapdoors to catch insects without harming them. The captured insects can then be used to study their blood feeding enzymes and diseases they may carry. The video also highlights the challenge of managing biodiversity and tracking the vast number of species on Earth, including bacteria and viruses. The trap is demonstrated in the video using a small LED beam to capture an insect.The video discusses a machine learning device that uses a small LED beam to gather time series data on mosquitoes. The device is able to trap mosquitoes in pristine condition, making it a valuable tool for entomologists. The machine learning happens on the device itself, allowing it to be used in remote areas without internet connectivity. The device has a three percent accuracy at separating West Nile mosquitoes from other species, and has been used to collect data on various mosquito species, including those that carry African sleeping sickness and those that are agricultural pests.The transcript discusses the use of sensors to collect data on insect behavior, specifically mosquitoes and their potential to carry diseases like West Nile and Zika. The data collected includes time series data and frequency domain data, as well as information on weather conditions and insect population. This data can be used to determine the most active times for mosquitoes and inform public health officials on the best times to spray for mosquito control. The use of sensors provides a more precise understanding of insect behavior and can aid in disease prevention efforts.The speaker discusses the use of genomics to understand diseases in mosquitoes. Mosquitoes are caught in traps and their DNA is extracted and sequenced using an algorithm developed by Microsoft Research and UC Berkeley. The algorithm allows for faster analysis of complex genomes, which is a big data problem. The use of cloud computing and machine learning has reduced the time it takes to sequence a genome from 30 days to a matter of hours. The speaker emphasizes the importance of understanding the genomic makeup of mosquitoes to better understand and control diseases they may carry.Microsoft Research is using Bayesian mixture models to boost the signal of correct information and dampen the signal of incorrect information. They have achieved 90% accuracy in a complete synthetic test and 97% accuracy in a test that incorporated unnamed viruses. Microsoft Research is also working on precision agriculture to help farmers and feed the growing population. Precision agriculture involves using technology to provide farmers with more data, such as precision irrigation and precision pesticides, to conserve resources and increase efficiency.The speaker discusses precision agriculture and how it can help conserve water and reduce the use of pesticides. They mention the use of sensors to monitor things like pH levels and water levels in the ground, but note that the cost of connectivity is the main issue in implementing this technology. They show a setup with a solar panel and camera to monitor the farm in real-time. The speaker suggests that the cost of implementing precision agriculture can be reduced by addressing the issue of connectivity.The challenge in agriculture is getting data from sensors in rural areas into the cloud where it can be analyzed and used. Custom cellular solutions are expensive and Wi-Fi has limited range. One solution is to use fewer sensors and couple them with aerial imagery from drones or balloons. Machine learning models based on Gaussian processes can then predict information about the entire field, even if sensors are not present throughout. This enables precision irrigation, fertilizer applications, and yield prediction. Another solution is to reduce the number of sensors needed by using machine learning to extrapolate data.Microsoft Research has developed solutions for precision agriculture, including using data from sensors to enable precision irrigation and fertilizer applications. They have also pioneered the use of television white spaces to address connectivity challenges in rural areas. This involves using unused television stations to create an internet connection, which can be accessed from up to 16 kilometers away. Microsoft Research is also working on a solution for poaching, which is a significant problem in wildlife sanctuaries. The solution involves using systemic motion detection to predict where poachers may be and prevent them from harming animals.The economy in sub-Saharan Africa has a per capita income of around $762, which is equivalent to the value of a single apartment. The poaching of animals, such as elephants and rhinos, for their ivory and other valuable parts, is a major issue in the region. Currently, drones are being used to monitor poaching activity, but this requires human operators to watch the footage in real-time, which is not scalable and can lead to fatigue. To address this, researchers at the University of Southern California are using computer vision to automate the monitoring process. However, this is a challenging task due to the nature of the footage, which is often in thermal infrared and can be difficult to interpret. The researchers are using Azure to process the data in real-time and are conducting field tests to refine their approach.This transcript discusses two initiatives related to conservation and naturalism. The first initiative involves using machine learning to detect poachers in wildlife reserves. The system uses cameras and laptops to accurately recognize people and alert authorities in real-time. The second initiative is a crowdsourced app that allows users to take pictures of flora and fauna and label them with location and time data. The app then uploads the data to a public index that researchers and conservation biologists can use. The app also uses machine learning to suggest labels for images that users are unsure about. However, the app currently has a North American bias due to the data available, which affects its accuracy in identifying non-North American species.This YouTube video discusses various applications of computer vision technology, including identifying species of animals and tracking their migration patterns. The speaker demonstrates how an app can use computer vision to identify a bird and provide information about its species. They also discuss a group called Wild Me, which uses computer vision to identify individual animals based on unique physical characteristics such as zebra stripes or giraffe necks. The speaker explains how Wild Me augments their data using social media to track population densities and migration patterns. Overall, the video provides an overview of the potential uses of computer vision technology in various fields.The speaker discusses the use of machine learning in various fields such as identifying mosquitoes, agriculture, poaching, and species identification. They also mention the I first grant program for those working on machine learning projects. Links to research papers are provided for further information. A demo is offered as well."
otFzdQnpFnA,00:00:00,,"Cyber criminals are becoming incredibly intelligent with sophisticated methods used to link information across multiple platforms to build profiles on victims enabling devastating attacks to take place cleaning out bank accounts and crypto wallets. \n\n In a world of big data, machine learning and open source tools correlating seemingly innocent information to profile a user has never been easier.\n\nFind out how an application you develop could be linked to these activities, and what you can do to help your current or future users protect their data and limit their exposure.\n\nMostly intermediate\n20 mins\nSecurity\nGeorge Coldham\nGeorge has been a tech geek for more than 20 years with a passion for technology and the Internet. \n\nI love learning, teaching and growing.  Security Engineer by day, gamer by night I am happiest when I'm being social and adding value to those around me.\n\nI have a broad range of interests in technology starting in hardware and infrastructure, maturing into cloud, devops and code, cyber security with both red and blue team activities and finally augmented, virtual and mixed reality.\n\nKe Swen Lee\nAn amateur speaker studying Computer Science with a major in Cyber Security at Edith Cowan University, WA. Currently a student ambassador for ECU's School of Science.\n\nI have a great interest in discovering vulnerabilities and vulnerability exploitation as well as developing secure software and am always keen on challenging myself and taking on new opportunities.",Swen Lee &amp; Coldham How your simple app could lead to your customers losing their life savings!,"Swen Lee and George Coldham discuss the increasing sophistication of cyber criminals and their ability to link information across multiple platforms to build profiles on victims, leading to devastating attacks that can clean out bank accounts and crypto wallets. They discuss how seemingly innocent information can be correlated to profile a user, and how an application developed by someone could be linked to these activities. They provide tips on how to help users protect their data and limit their exposure. Swen Lee is a final year cyber security student at Edith Cohen University, while George Coldham is a Cloud solution architect at Microsoft in the cyber security field.George, a Cloud solution architect at Microsoft in cyber security, discusses the serious topic of Sim swapping. Sim swapping is when someone fraudulently pretends to be you and steals your phone number. This can be effective because most banks use SMS as their MFA, so if the attacker owns the phone number, they can verify money transfers. Sim swapping can be done with minimal information, such as the phone number and provider, and an ID type, which is not always verified. George demonstrates how easy it is to do a Sim swap with his own prepaid phone number and ID information. He also mentions that many people do not have two-factor authentication turned on for their email accounts and are not careful with their passwords.The speaker discusses the process of SIM swapping and how it can be used to compromise accounts. They explain that attackers only need certain pieces of information, such as a license number and email, to initiate a SIM swap. The speaker also mentions the importance of protecting oneself against hackers and suggests using websites like Have I Been Pwned to check if accounts have been compromised. They also emphasize the importance of using multi-factor authentication and not reusing passwords across multiple accounts. The speaker advises against building one's own authentication process and instead recommends using authentication providers like Azure or r0. Finally, they caution against using SMS for multi-factor authentication and warn against dependency hell when writing software.The speaker advises against using SMS for multi-factor authentication (MFA) due to its vulnerabilities. They explain the concept of dependency hell in software development, where developers use libraries or dependencies without knowing their contents, which can lead to security issues. They give examples of vulnerabilities in popular libraries such as log4j and tiny file manager. The speaker emphasizes the importance of authentication and access control to ensure that only authorized users can access sensitive data. They suggest using service principles for applications to limit their permissions and access to data. Finally, they stress the need for encrypting data at rest and in transit to prevent data theft in case of a security breach.The speaker discusses the importance of using multi-factor authentication (MFA) to secure online accounts. They recommend using a trusted device, such as a token or authenticator app, as the source of the six-digit code for logging in. They also suggest using different passwords for different platforms and using a password manager, such as LastPass or KeyPass, to manage them. The speaker is comfortable with password managers that offer MFA functionality, as long as the encryption is strong and the MFA stays on the same device. They mention that LastPass was recently compromised, but they are still comfortable with using it because of its encryption.Josh Armitage will be presenting on the topic of serverless testing and why local testing may not be the best approach. The presentation will take place at 12:50."
0gZO79pGBow,00:00:00,Unleash the Power of VS Code,"VS Code is hot, there's no doubt about it being an utterly amazing editor, but I ask you, are you using it to its full potential? Let's go on a journey together and look to unlock the real power that you can get out of VS Code. Whether it's with shortcuts or extensions, environment standardisation and remote development, collaboration to integrations, there's so many things to uncover that can take you from a user to a pro in no time.\n\nThis session will leave you itching to get back into your editor and code up a storm on that next piece of work.\n\nNo experience necessary\n45 mins\nCore/Non Technical Skills\nAaron is a Developer Advocate at Microsoft. Having spent 15 years doing web development he's seen it all, from browser wars, the rise of AJAX and the fall of 20 JavaScript frameworks (and that was just yesterday!). Always tinkering with something new he explores crazy ideas like writing your own implementation of numbers in .NET, creating IoC in JavaScript or implementing tic-tac-toe using git commits.",Aaron Powell,"Aaron Powell, a Developer Advocate at Microsoft, discusses how to unleash the full potential of Visual Studio Code (VS Code) in this 45-minute session. He covers various topics, including shortcuts, extensions, environment standardization, remote development, collaboration, and integrations. VS Code has revolutionized the way people think about simple text editors, and Powell believes that there are many hidden features that users can take advantage of. He encourages attendees to ask questions and visit the Microsoft booth after the session. Powell has been in the tech industry for almost 20 years and has used various editors, including pico and emacs.This video is a tutorial on VS Code, a text editor with many hidden features. The speaker gives a quick overview of the editor, including the title bar, which is highly customizable, and the sidebar, where files and folders are located. The editor also has a status bar that displays information such as the git repo branch, errors or warnings, and language services being used. The speaker mentions that extensions can be added to VS Code, such as the Azure extension for working with Azure resources. Overall, the video is aimed at experts who are familiar with text editors and want to learn more about VS Code.a look at some of the keyboard shortcuts that can help increase productivity in VS Code. VS Code is an integrated development environment that supports multiple languages and has a variety of features such as syntax highlighting, debugging, and an integrated terminal. The text editing surface is the core feature of VS Code and supports syntax highlighting and error detection. The mini-map view of the file is also useful for navigating through long files. To increase productivity, keyboard shortcuts can be used instead of relying on a mouse.The speaker discusses their use of keyboard shortcuts in VS Code, emphasizing the importance of the ""control p"" shortcut for accessing the file picker and command palette. They demonstrate how to use the command palette to perform various actions within VS Code, such as accessing the sidebar and debug section. The speaker also mentions the ""control shift p"" shortcut for quickly accessing actions. They briefly mention the ""term"" shortcut for accessing terminal-related actions. Overall, the speaker provides tips for efficiently navigating and using VS Code through keyboard shortcuts.The speaker discusses various features and shortcuts in Visual Studio Code, including the command palette, creating and renaming terminals, and screencast mode. They also mention Zen mode, which hides distractions to help with focus. The speaker suggests using these features for pair programming or when trying to focus on a specific task.The speaker discusses the features of VS Code's Zen mode, which is designed to minimize distractions and help users focus on their work. The mode can be customized to include or exclude certain elements, such as line numbers, and there are also options for editor rules to help with accessibility and readability. The speaker emphasizes the importance of considering the needs of all team members when working on a code base.VS Code has several useful features for developers, including code actions on save, which allows for automatic organization of imports and application of linting rules upon saving a file. The default editor language setting can also be used to automatically assign the correct language service and syntax highlighting to new files. VS Code's extensive extensions ecosystem offers a wide range of tools for developers to enhance their coding experience.The speaker discusses the extensibility of VS Code and the massive extensions ecosystem that has grown around it. They mention a few useful extensions that they have installed on their machine, including Editor Config, which allows for standardization within a code base, and Rest Client, which is useful for calling APIs. They also mention Peacock, which changes the colors of VS Code borders, and Code Spell Checker, which can help avoid embarrassing mistakes like naming a table ""person named his Troy."" The speaker acknowledges that there are thousands of extensions available and encourages viewers to explore and find their own favorites.The speaker discusses various VS Code extensions that can be useful for developers, including Code Spell Checker, which checks spelling in code, and Todo Highlight, which finds all the to-do comments in code and creates GitHub issues for them. They also mention extensions specific to web development, such as Prettier for code formatting and ESLint for linting rules. Additionally, they mention an extension for working with npm and an extension for Edge.The speaker discusses updates to various software packages, including Lucky Patch, a tool for modifying Android apps, and an extension for VS Code that allows for working with the Edge browser. They demonstrate the latter by showing their personal website and using the extension to inspect the DOM and CSS. The speaker also mentions their experience as a consultant and the frustration of having to switch between different tools and contexts.The speaker discusses the benefits of using the VS Code extension for contextual organization and code standardization. They share their frustration with the lack of documentation and setup guides when working with new clients in their previous consulting work. With VS Code, they explain how settings and recommended extensions can be included in the DOT VS Code folder for specific projects, ensuring a consistent development experience. They also introduce the feature of Dev Containers, which allows for the dockerization of the development environment and pre-installation of necessary runtimes.Dev containers are a way to dockerize the development environment or the project being built, allowing for control over the installed dependencies such as the correct version of a runtime or a database. This can save time and make it easier for open source contributors to pick up a project and start working without having to read a massive contributing guide. Dev containers can also be used with GitHub code spaces to provision the environment through specifications. The speaker demonstrated an open source F-sharp project that uses a Dev container with Docker compose to pre-install the .NET runtime and the Cosmos DB emulator for local development. Dev containers can be useful for remote development and can save time by having all the necessary dependencies pre-built and combined into one folder.The speaker discusses a dependency that needs to be installed and combined into a folder. They mention an extension called Live Share, which is a product created by Microsoft for remote pair programming. The speaker demonstrates how Live Share works by starting a collaboration session from their machine and sharing a URL that can be accessed by someone else to connect to their VS Code instance. The other person can view all the files on the speaker's machine and connect to the locally running web server. The speaker shows how they can see where the other person is in a file and follow their actions.The speaker discusses the benefits of using VS Code for remote collaboration, including the ability to see real-time changes made by other users and the ability to remotely debug code. They also mention the built-in audio support for conference calling and the VS Code Tick Tock account, which offers both entertaining and informative content. The speaker concludes by thanking the sponsors and offering time for questions or lunch.I'm sorry, I need more information. Can you please provide me with the link to the YouTube video and specify which part of the transcript you want me to condense?"
0ofzzga9MCg,00:00:00,Using Data Sci to Peek inside the Black Box,"Show Your Work - Using Data Science to Peek inside the Black Box\n\nAs machine learning becomes increasingly integral to decisions that affect health, safety, economic wellbeing, and other aspects of people's lives, it's important to be able to understand how models make predictions; and to be able to explain the rationale for machine learning based decisions.\n\nIn this session you will learn how to:\n\n* Interpret global and local feature importance.\n* Use an explainer to interpret a model.\n* Create model explanations in a training experiment.\n* Visualize model explanations.\n\n--\nMichelle @ Microsoft\nTedx Speaker, Tech Girl Superhero, Microsoftie and one of MCV's 30 Most Influential Women in Games. I am a Technology Evangelist who acts as an API between technology and the world. I advocate for STEM, the Games Industry and Developers. I present at around 50 Conferences and Events around the world on Technology, Social Media, Inclusion and Gaming.\n\nJiaranai Keatnuxsuo\nJia is a thriving Triathletes, Tech Optimiser, a STEM Advocate, a TEDx Speaker, a multi-awards winner of Women in Technology Western Australia 2019, NASA Space App Challenge, Energy Hack, Transport Hack WA and UWA Innovation Challenge. Her superpower is learning new technology and smashing Microsoft certificates. In the world of fast changes, she strives to be 1 per cent better technically every day by cultivating her abilities through persistence and effort.",Michelle @ Microsoft &amp; Jia Keatnuxsuo,"This session, presented by Michelle from Microsoft and Jia Keatnuxsuo, focuses on using data science to understand how machine learning models make predictions and explain the rationale for those decisions. The session covers interpreting global and local feature importance, using an explainer to interpret a model, creating model explanations in a training experiment, and visualizing model explanations. The speakers also touch on the potential for machine learning to uncover the mysteries of the universe and find meaning in the unknown.the box and the cat, we could just open the box and find out for sure. But the point is that in many real-world scenarios, we don't have the luxury of opening the box and observing the outcome. Instead, we have to rely on machine learning models to make predictions based on the available data.

However, as mentioned earlier, black box machine learning models can be problematic because they don't provide explanations for their predictions. This is where explainable AI (XAI) comes in. XAI is a field of research that aims to develop machine learning models that can provide transparent and interpretable explanations for their predictions.

One approach to XAI is to use ""explainer models"" that can provide insights into the decision-making process of the black box model. For example, a PFI explainer model can be used to identify the most important features that influenced the black box model's prediction.

Overall, XAI is becoming increasingly important as machine learning models are used in more critical applications, such as healthcare and finance. By providing transparent and interpretable explanations for their predictions, XAI can help build trust in these models and ensure that they are making fair and ethical decisions.Data science involves using large amounts of data to make predictions or judgments. During the COVID-19 pandemic, there was a lot of data available, and vaccines were tested in many iterations and variations. However, machine learning models can pick up biases from the training data, which can lead to discrimination against underrepresented groups. Interpretability is a useful tool for detecting biases in machine learning models. Guaranteeing fairness in AI and machine learning remains a complex social and technical challenge. Unfairness can encompass negative impacts or harms for certain groups, such as those defined by race, gender, age, or disability status. An example of unfairness is when a gender or ethnicity is favored over another in hiring practices.A large corporation developed an experimental hiring tool to screen candidates, which was trained on previously successful and unsuccessful CVs. The machine learning model assumed that certain words were the success or failure factor, rather than qualifications and experience. This led to biased results and unfairness in the hiring process. Another example of fairness-related harm is poor quality of service due to unbalanced data or lack of retraining on features. For instance, an automated dispenser could not sense people with darker skin, leading to poor performance. Bias in data sets can also lead to serious consequences, such as deaths in car crashes caused by airbags that were initially tested on men only. Machine learning models need to be audited and interpreted to understand the cause of errors and improve performance. Interpretability is crucial in critical domains such as health, finance, and law. People need to believe that computers are fairer than humans, and understanding the most important features of a model can help remove bias and improve performance. A simple binary classification model using logistic regression is demonstrated in the video.In this YouTube video, the presenter demonstrates how to create a binary classification model using logistic regression on a student hiring dataset. The model's performance is evaluated using various metrics, and the presenter notes that the accuracy is only 60%, but this is not a concern as the model is still being refined. The focus of the session is on interpretability, specifically global and local features and feature importance. The presenter and co-presenter introduce themselves and discuss how their names and job titles are examples of global features that people use to judge them. The missing data in the dataset is not significant.In this video, the speakers discuss the concept of global and local feature importance in machine learning models. They explain that global feature importance quantifies the relative importance of each feature in the test data set as a whole, while local feature importance considers the priority of features in a specific instance. The speakers demonstrate how to use interpretability classes and methods to understand a model's behavior and specific predictions. They also show an example of using a tableau explainer to calculate feature importance for a logistic regression model.The speaker demonstrates how to use the linear explainer to evaluate the global and local feature importance of a logistic regression model for predicting job candidates' suitability. The global feature importance is obtained by calling the explain_global method on the explainer and using the get_feature_importance_dictionary function to rank the features. The local feature importance is obtained by calling the explain_local method and specifying the subset of the case to explain. The output shows that the number of hackathons participated in is the most important feature for predicting a candidate's suitability, followed by the Github score. The speaker also compares this technique to a child learning to annoy their parents by testing a random set of actions and noting their responses.The transcript discusses how a child learns to push their parents' boundaries by testing what actions annoy them and adjusting their behavior accordingly. This process is similar to how a substitute model is trained to understand the decision boundaries of a black box model. The transcript also mentions a tool called Responsible AI Widgets, which provides a user-friendly interface for exploring and assessing AI and ML systems. The dashboard allows for interactive visualization of global and local feature importance, which can enhance understanding and credibility of the model. The transcript concludes by discussing the difference between asking for a reasoning process and a root cause analysis in relation to machine learning models.The video discusses machine learning models and how they can be interpreted. The speaker explains that certain features can be elevated above others in these models, and that they can be trained to recognize certain objects or behaviors. The purpose of the session is to show that despite the differences between humans and machine learning models, they can be understood and analyzed. The video concludes by offering various learning paths and resources for those interested in data science and machine learning."
0bGEP6WWXQQ,00:00:00,Unleash Your Inner CTO!,"The role of a technology leader has never been more challenging. We are in the midst of unprecedented technological change and yet keeping abreast of such advances alone will not guarantee success. Faced with such myriad options how can we be sure that we are guiding our organisation on the path towards future success?\n\nIn this talk, we will take an in-depth look at what it takes to create an adaptive technology strategy including metrics, team topologies and evolutionary architecture practices.  We'll explore how to build feedback loops into your organisation’s technology decisions and ensure that its architecture is an accelerator rather than an inhibitor of business agility:\n\n* How to identify and measure key business-aligned metrics and use these data points to pivot your technology strategy.\n* How to enable effective distributed technology decisions across your organisation\n* How to build organisational memory surrounding technology decisions that can act as inputs into new decisions.\n\nBy the end of the session, you will not only understand what is involved in creating a data-informed technology strategy but also have the knowledge to put it into practice. If you want to take to your expertise in crafting effective technology strategies to the next level, then this is the session for you. See you there!\n\n--\nRob is a software consultant, developer and technical leader with a passion for delivering systems that perform at scale. Rob has over 15 years of experience building distributed systems on the web stack and has read more RFCs than he cares to admit. Rob is an active member of the Perth IT community and regularly shares his ideas at various Meetups and conferences around Australia and internationally. He is also a co-organiser of DDD Perth, the largest IT conference in Western Australia.",Rob Crowley,"Rob Crowley, a software consultant, developer, and technical leader, delivered a talk at DDD Perth 2021 on how to create an adaptive technology strategy. He discussed the challenges faced by technology leaders in the midst of unprecedented technological change and how to guide organizations towards future success. The talk covered topics such as identifying and measuring key business-aligned metrics, enabling effective distributed technology decisions, and building organizational memory surrounding technology decisions. Rob emphasized the importance of giving technology purpose, deriving value from it, and assessing its suitability to delivering user or business outcomes. He also shared personal growth techniques that can be applied instantly in leadership roles. Rob has over 15 years of experience building distributed systems on the web stack and is an active member of the Perth IT community.Rob Crowley is the head of engineering at Fixed Technology, a company that builds transport solutions for entire cities. He has previously worked as a principal consultant at Telstra Purple, where he worked with CTOs and CIOs on defining companies' strategic technology strategies. In his talk, he aims to change the perspective of technology and provide tools to assess whether it's viable and the correct choice for the problem at hand. 

Crowley defines strategy as a plan of action designed to achieve a long-term aim. He breaks down the terms purpose, vision, and mission, explaining that purpose is the ""why"" of a company, vision is the statement of intent, and mission is the ""how"" to achieve the vision. Strategy uses the mission to achieve the vision, and situational awareness is crucial for effective strategy. 

Situational awareness is the ability to perceive, assimilate, and synthesize inputs from the context in which we operate. The environment, including the industry, organization, and competitors, is in a constant state of flux, and this must be taken into account when developing a strategy. Crowley gives the example of the global pandemic, which undermined many companies' strategies, such as WeWork's. 

Overall, Crowley emphasizes the importance of context and situational awareness in developing effective strategies.The ticketing industry, like many others, is constantly evolving and adapting to changes in the environment. The COVID-19 pandemic has driven cash out of the system, leading to the rise of contactless and EMV payments for travel. However, the ticketing industry is likely to become integrated with other services such as parking and government accounts in the future. Competition drives evolution, and companies respond to changes in the environment at different paces. Being the first to market is not always a precursor for success, as seen in the case of Netscape and Internet Explorer. Apple's strategy is based on being a fast follower, improving on what others have done before. The Kano model is used to prioritize features on a product roadmap based on the degree that they're likely to satisfy a customer.The speaker discusses strategies for businesses to stay competitive, including acquisition and prioritizing features based on customer needs using the Kano model. They emphasize the importance of understanding the context and using appropriate methods for different phases of a business, such as agile feedback loops for eliminating uncertainty and lean techniques for eliminating waste during expansion. The speaker also notes that risk appetite decreases over time, and businesses should adjust their focus accordingly.Technology strategy is a set of decisions around the use of technology to achieve business or end user outcomes. It should amplify the business strategy and be anchored in user needs or business outcomes. It requires an iterative approach with high context feedback loops and situational awareness. The OODA loop by John Boyd is a critical decision-making loop that involves observation, orientation, hypotheses, options, and action. Strategic thinking is a skill that takes time and dedication to master. It is important to understand the context and what you are looking to achieve at a given point in time. Risk appetite decreases over time, so being aware of the operating context is crucial. Competition is constantly driving change in the environment, so it is important to have a broad understanding of the industry and company.A technology strategy is a set of decisions around the use of technology to achieve business or end user outcomes. An effective technology strategy should amplify the business strategy and improve primary outcomes. It should be anchored in user needs or business outcomes and written down in a document to make it accessible. The strategy should start by understanding the business context and defining the tech landscape to build empathy and understand constraints and challenges. A vision of where the organization wants to be should be set, and principles and guardrails should be defined to enable effective distributed decision making. An example from MYOB shows the importance of medium-term decisions, stable technologies, and eliminating waste in systems. Documenting the technology radar or scope and making it visible to all teams can also be helpful.This section of the talk focuses on metrics and how they can be used to measure the success of a technology strategy. A metric is a quantifiable measure of the performance of a business or component of a business, and a change in the metric should inform whether the existing course of behavior should be continued or adjusted. Metrics should drive behavior within an organization and can be applied to various aspects of the business, such as applications, departments, people, and processes. The goal is to use metrics to guide decision-making and ensure that the technology strategy is aligned with business or user outcomes. The speaker emphasizes the importance of situational awareness and making sure that metrics are visible and embedded in the onboarding process. The technology strategy document should be treated as a living artifact and reviewed regularly to ensure that it is still adding value to the teams.this video, the speaker discusses the importance of metrics in guiding business decisions. The OODA loop is mentioned as a framework for assessing options and making decisions. The speaker emphasizes the need to align metrics with user needs and goals, and suggests starting with identifying goals and then finding metrics to measure progress towards those goals. The Pirate Metrics framework is also mentioned as a way to categorize customer phases and identify relevant metrics. However, the speaker notes that generating customer insights requires data, which many companies may not have readily available.The speaker discusses the importance of generating customer insights through data categorization, cleansing, and synthesis. They highlight the need to capture data that can inform business decisions, rather than just performing CRUD operations. The speaker also mentions Simon Wardley's set of doctrines, which are universal best practices for improving business success. They then discuss four DevOps metrics defined by Nicole Forsgren, Jess Humble, and Gene Kim in their book ""Accelerate."" These metrics include deployment frequency, lead time for change, mean time to recover, and fail change rate. The speaker groups these metrics into speed-focused and stability-focused categories and introduces Crowley's non-scientific code of balanced behavior, which helps organizations balance their risk appetite with their desire for speed and quality. The speaker warns against creating metrics that only focus on avoiding errors, as this can lead to teams releasing less and injecting entropy into the environment.The speaker discusses the importance of creating balanced metrics that encourage excellence and productivity, rather than just avoiding errors. They warn against the dangers of perverse incentives, vanity metrics, cargo cult metrics, and using metrics for comparison and punishment. The speaker suggests removing information silently and creating metrics that focus on customer and user needs. Effective metrics work in pairs and only deliver value if they influence behavior.The speaker discusses the importance of identifying key aspects and preventing weaponized behavior in order to achieve business outcomes. Effective metrics should be actionable and focused on customer and user needs. It is important to invest in learning the business and industry, as well as understanding the context within the team, department, organization, and environment. Embracing empiricism can help level up influencing skills. Building a network both inside and outside of work can also be helpful. Leaders should focus on creating an environment that encourages the desired behavior, while being authentic to the drivers of the business. The speaker recommends using models such as 3x and the OODA loop to increase situational awareness. Finally, the speaker encourages the audience to be awesome and provides a list of resources for further reading."
5p9DrzDNxHI,00:00:00,Why is my query slow? An indexing story,"Indexes, the get out of jail card for slow queries am I right? I mean it worked, so should we care beyond that? Like in most things in software development, it depends.\n\nIn this talk we will go on a journey and learn about:\n* What is an index and how does it work?\n* When should an index not be used?\n* What is the cost of indexing all the indexes?\n* Different types of indexes and when to use each?\n* How to debug why your index isn't being used?\n\n\nMostly intermediate\n45 mins\nBackend Development\nDev by day, kite surfer also... by day otherwise pretending to be a chef cooking whatever dish I found on youtube.",Boris Badrov,"Boris Badrov discusses the importance of indexes in improving query performance. He explains what indexes are, how they work, and when they should not be used. He also covers the cost of indexing all the indexes, different types of indexes, and how to debug why an index isn't being used. The talk is geared towards intermediate level backend developers and lasts for 45 minutes. Boris uses an example of a recipe aggregator website to illustrate his points and provides a cooking book analogy to explain sequential scans. He acknowledges the sponsors, volunteers, and AV team for making the talk possible.This video discusses the use of indexes in databases to improve query performance. The speaker uses the analogy of a cookbook to explain how indexes work, and specifically discusses B-tree indexes. They emphasize the importance of knowing your queries and which ones are most important or expensive, in order to determine which indexes to create. The speaker also notes that there are trade-offs with indexes, and that indexing everything can have negative consequences.video discusses the importance of indexing in databases and how it can improve read speed but decrease write speed. It emphasizes the need to know your queries and understand which ones are most important to index, rather than indexing everything. The video also discusses the trade-offs of indexing and the importance of considering hardware, data volume, and data distribution when creating indexes. The correct way to create an index is also discussed, using the ""concurrently"" command to avoid locking the database against writes. Finally, the video touches on the importance of debugging and monitoring performance to ensure that indexing is working effectively.The video discusses the importance of indexing in databases and how it can improve query performance. It also covers the use of the ""explain"" command in Postgres to debug queries and understand how the query planner is working. The speaker demonstrates how to use the ""analyze"" command to compare the estimated and actual query times and identify ideal candidates for indexing. The video concludes with a discussion on adding additional columns to a query and the importance of aggregation.In this YouTube video, the speaker discusses the importance of query planning and indexing in databases. They demonstrate how creating a multi-column index can significantly improve query performance, but the order of the columns in the index is crucial. The speaker also explains the concepts of selectivity and cardinality in indexes and how they affect query performance. They emphasize that understanding these concepts is essential for optimizing database performance.The video discusses the importance of creating efficient indexes in databases. The speaker explains that going directly to the table is faster than going through an index if more than 10-15% of the table is being returned. The speaker suggests creating an index on Authority, as it is a commonly queried field. The video also covers the importance of creating indexes in the correct order to reduce the amount of the index that needs to be scanned. The speaker provides examples of queries and indexes to illustrate their points.In this video, the speaker discusses ways to optimize queries in PostgreSQL. They suggest using indexes to efficiently search for specific values in a table, and using covering indexes to avoid going to the table itself. They also explain how indexes are ordered and how this can be used to avoid sorting in queries. The speaker emphasizes the importance of considering the relationship between data and how it is accessed when optimizing queries.This video discusses the benefits of indexing in databases and how it can improve query performance. The speaker demonstrates how creating an index on a specific column can eliminate the need for sorting, resulting in faster query times. They also explain the concept of partial indexing, which allows for the exclusion of irrelevant values and can be useful for optimizing queries that only require a subset of data. The speaker emphasizes the importance of understanding query requirements and using appropriate indexing techniques to achieve optimal performance.In this video, the speaker discusses how to optimize the use of indexes in PostgreSQL. They explain that indexes can be used to exclude common values, such as null values, and can also be used to filter data based on a timestamp column. However, the speaker warns that creating expression indexes can be very expensive and can slow down write speeds. They also caution against using ORMs, as they can sometimes add functions to queries that prevent the use of indexes. Finally, the speaker notes that indexes may not be used if the table is too small or if the operator being used is not compatible with the index.This video discusses the importance of indexes in databases and how they can improve query performance. The speaker emphasizes the need to understand the queries being executed and create indexes accordingly. They also caution against over-indexing and explain how to identify and fix common indexing issues. The video briefly touches on more advanced topics such as multiversion concurrency control, vacuuming, and query planning. The speaker recommends consulting the Postgres documentation and User Index Luke for more in-depth information. Overall, the takeaway is to know your queries, make informed indexing choices, and be aware of the potential trade-offs.The speaker discusses the impact of indexes on database performance, but notes that it is difficult to quantify as it depends on various factors such as the machine and data distribution. They suggest that having more than five indexes on a table is a red flag. The speaker shares a real-life example of how adding an index to a two billion row table improved query performance. They also briefly discuss the random and sequential page costs in Postgres and recommend adjusting them based on the type of storage being used. When asked about testing indexes in production, the speaker suggests creating the index and manually testing the query, but notes that it can be tricky due to factors such as caching.The speaker suggests creating an index manually on the production database and testing the query's efficiency. They caution against creating indexes on JSON objects as it can be inefficient, especially at a large scale with billions of rows. The size of the value becomes important, and covering indexes on JSON B columns can make the index too large. The talk ends with the announcement of the next talk's start time."
eXw3LY6AUuU,00:00:00,Yuck… Difficult Conversations &amp; Feedback,"Have you ever avoided a conversation because it was too difficult only for it to blow up in your face later down the track? I know I certainly have… Unfortunately, every difficult conversation that is avoided is a missed opportunity. If we equip ourselves with the knowledge and confidence to respectfully handle these conversations, we can really enable growth and opportunities to those involved.  \n\nWe humans are complex creatures; this presentation covers our delightful complexities and how they contribute to the difficulty of conversations, coupled with a framework and tips that will help you feel more confident and empowered to have them.  \n\nLet’s make these conversations less terrifying and frame them in a positive light that ensures you maintain strong relationships whilst enabling growth. \n\n--\nSiobhan has over a decade of experience in the tech industry focussing on innovative People \u0026 Culture led initiatives. With a Masters of Human Resource Management and several years specialising in People \u0026 Culture, she enjoys creating workplaces that focus on an outstanding employee experience. \n\nShe is incredibly passionate about creating environments that focus on diversity and inclusion, flexible and innovative work arrangements, and most importantly, a place where people can bring their true selves.",Siobhan Avenell,"Siobhan Avenell, a People & Culture specialist with over a decade of experience in the tech industry, discusses the importance of having difficult conversations and providing feedback. She acknowledges that these conversations can be intimidating and offers a framework and tips to help individuals feel more confident and empowered to have them. Siobhan also covers the complexities of human behavior and how they contribute to the difficulty of these conversations. She emphasizes the importance of maintaining strong relationships while enabling growth and creating workplaces that focus on diversity and inclusion. Siobhan's talk is inspired by individuals who find challenging conversations terrifying and aims to make them less intimidating by providing knowledge and tools to handle them respectfully.The speaker discusses the reasons why people find challenging conversations intimidating and how they can be made less terrifying. Challenging conversations involve uncertainty and emotions, but they are often necessary to address problems and can lead to growth for individuals and teams. The speaker introduces an exercise called the ""e-test"" to highlight the importance of perspective in challenging conversations. The exercise involves writing the letter ""e"" on your forehead with your non-dominant hand and considering whether you are writing it for yourself or for others to read. The speaker emphasizes the importance of considering different perspectives in challenging conversations and provides examples of how perception can affect how we see things.need to have a productive conversation. The prefrontal cortex is responsible for our executive thinking, which is crucial for problem-solving and decision-making. However, when the amygdala hijacks our brain, it takes over and impairs our ability to think rationally and logically. This is why it's important to approach challenging conversations with a curiosity mindset, rather than a defensive one. By doing so, we can engage our prefrontal cortex and keep our emotions in check, leading to a more productive conversation. Understanding how our brain reacts to stress is key to having successful challenging conversations.The speaker discusses the amygdala hijack, which is a survival response that occurs when the brain perceives a threat and sends blood to the limbs for fight or flight. This response can hinder logical thinking, empathy, and problem-solving abilities, making it difficult to have challenging conversations or public speaking. The speaker provides tips to reduce the amygdala hijack, such as recognizing individual stress responses and using techniques like deep breathing and visualization. The speaker also mentions the idea of eating bananas, which contain natural beta blockers that may help reduce stress. Overall, the talk emphasizes the importance of understanding and managing the amygdala hijack to improve communication and performance in high-stress situations.The speaker discusses strategies for managing stress during challenging conversations. One strategy is to take deep breaths to increase oxygen flow to the brain. Another is to label the stress response and engage the prefrontal cortex to reduce the amygdala's response. Taking a 20-30 minute break can also help individuals get out of an acute stress response. The speaker emphasizes the power of positive wording and suggests rephrasing situations from a person to a situation to avoid making individuals feel attacked. What-if statements can also be used to explore alternative solutions.In this video, the speaker discusses the power of wording in challenging conversations. They suggest using specific language to make a business case stronger, such as using ""what-if"" statements. The speaker also advises against using negative language, such as ""to be honest"" or ""no offense,"" as they can trigger a fight-or-flight response in the listener. Additionally, the speaker recommends considering the best time for a challenging conversation, as well as scheduling it appropriately to avoid interfering with other important tasks.In this video, Shiv discusses the importance of scheduling difficult conversations at the right time and in the right setting. He suggests avoiding scheduling conversations during the 20-30 minute window of fight or flight response and considering the other person's schedule to ensure they have enough time and space to process the conversation. Shiv also recommends avoiding alcohol and choosing a neutral setting such as a cafe or a walk and talk to facilitate more effective outcomes. Additionally, he suggests positioning oneself and the other person in a way that promotes a sense of safety and security, such as sitting next to the door in an office setting. Overall, Shiv emphasizes the importance of empathy, kindness, and consideration in having challenging conversations.The speaker suggests placing a glass of water where you want someone to go to create a comfortable and safe environment for a conversation. They recommend face-to-face communication as 70-80% of conversations are non-verbal and suggest using video calls over phone calls. It is important to check your mindset and intention before going into a conversation, as low resilience levels can trigger fight or flight responses. The speaker advises approaching the conversation with a curious mindset to understand why someone did something out of character. The talk focuses on challenging conversations in the workplace, but the framework can be applied to other settings.The speaker discusses a framework for having challenging conversations in the workplace. They emphasize the importance of approaching the conversation with a curious mindset and being prepared with cold hard facts. The speaker also highlights the power of silence and the need to give the other person time to reflect. They stress the importance of follow-up and not using the framework as a script. The framework includes starting with the intent of the conversation, discussing the issue at hand, exploring different perspectives, and finding a solution or next steps. The speaker uses a puzzle theme to illustrate the framework.In this video, the speaker discusses a framework for giving feedback in a meeting or conversation. The first step is to establish the intent of the conversation and be genuine about it. The next step is to use a feedback model, which will be explained later. Then, the speaker suggests checking the other person's perspective and asking open, curious questions. It's important to show understanding by repeating what they've said and taking ownership for your part in the situation. Finally, the solution can be collaboratively discussed and next steps can be outlined. The speaker also mentions the feedback sandwich model, which they believe is not effective and should not be used.The speaker discusses different models for giving feedback, specifically the feedback sandwich model and the SBI model. They suggest using a pizza analogy instead of the feedback sandwich, where the topping represents the constructive feedback and the base represents the strengths that will help solve the situation. The SBI model involves being specific about when and where the situation occurred, describing the observed behavior without making assumptions, and explaining the impact of the behavior. The speaker prefers the SBI model because it is direct and reduces anxiety for both the giver and receiver of feedback.In this video, the speaker discusses different models and frameworks for giving feedback effectively. They mention the SBI model, which stands for Situation, Behavior, Impact, and is useful for providing specific feedback on a situation and its impact. Another model is the AID model, which stands for Action, Impact, and Desired outcome, and is useful for personal situations where the feedback affects the speaker directly. The speaker also shares a framework they use to prepare for giving feedback, which includes thinking about their intent and the questions they want to ask. Overall, the video provides useful tips for giving feedback in a clear and constructive manner.The speaker discusses using the feedback model to understand someone's perspective and avoid similar situations in the future. They give an example of a meeting where someone yelled at a colleague and explain the impact it had on the team's psychological safety and culture. The speaker then discusses the importance of understanding the person's perspective and potentially underlying issues, such as mental health, before discussing next steps, such as professional development or coaching.The speaker discusses a framework for handling challenging conversations in the workplace. They initially approach the situation from an HR perspective, suggesting professional development opportunities and coaching for the individual involved. However, the situation ultimately required engagement with the company's EOP and time off for the individual. The speaker emphasizes the importance of understanding that the framework may need to pivot depending on the situation. Their hope is to make challenging conversations less intimidating and promote growth while maintaining positive relationships. They offer to answer any questions and thank the audience for their time."
gQbXA_HlLPE,00:00:00,CSS Grid - What is this Magic?!,"Editor note: Forgive me for the buzzing, i spent hours trying to remove it.\n\nWe’ve all heard a lot in the last year about a new advancement in the world of CSS, called CSS Grid. Starting off at whispers, we’re now starting to hear it as a deafening roar as more and more developers write about it, talk about it, share it and start using it. In the world of front end, I see it everywhere I turn and am excited as I start to use it in my own projects.\n\nBut what does this new CSS specification mean for software developers, and why should you care about it? In the world of tech today, we can do so many amazing things and use whatever language we choose across a wide range of devices and platforms. Whether it’s the advent of React and React Native, or frameworks like Electron, it’s easier than ever to build one app that works on multiple platforms with the language we know and work with best. The ability to do this also expands to styling apps on any platform using CSS, and therefore being able to utilise the magical thing that is\nCSS Grid.\n\nThe reason CSS Grid is gaining so much attention, is because it’s a game changer for front end and layouts. With a few simple lines of code, we can now create imaginative, dynamic, responsive layouts (yep, I know that’s a lot of buzz words). While a lot of people are calling this the new ‘table layout’, grid gives us so much more, with the ability to spread cells across columns and rows to whatever size you choose, dictate which direction new items flow, allow cells to move around to fit in place and even tell certain cells exactly where they need to sit.\n\nWhile there is so much to worry about when developing an app, CSS Grid means that you can worry less about building the layout on the front end, and more about making sure the back end works well. Let me show you how the magic works.\n\nAmy is a freelance developer, starting her own business, working with other freelancers and learning everything she can about the web. She’s been a freelancer on the side for 4 years, and most recently worked at an agency in Subiaco.\nAmy also spends her time helping out as a co-organiser for Fenders (a community group of front-end developers in Perth), other community events (such as the JuniorDev Meetup and Perth Web Girls) and works as an evangelist for YOW! Conference. She blogs in her spare time (about tech, the web and life), and volunteers as a reviewer for the Fringe World Festival in Perth.",Amy Kapernick,"Amy Kapernick discusses the benefits of CSS Grid, a new advancement in the world of CSS that allows developers to create imaginative, dynamic, and responsive layouts with just a few lines of code. CSS Grid is gaining attention because it is a game changer for front end and layouts, providing the ability to spread cells across columns and rows to whatever size you choose, dictate which direction new items flow, allow cells to move around to fit in place, and even tell certain cells exactly where they need to sit. With CSS Grid, developers can worry less about building the layout on the front end and focus more on making sure the back end works well.CSS Grid is a layout specification that was introduced a few years ago and has transformed the way we build layouts on the web. It allows for better control over how content is laid out on a page and is specifically designed for web layouts, unlike tables which were used as a hack. CSS Grid allows for defining areas of a layout and dictating how elements inside of a grid behave, making code more responsive and reducing the amount of code needed. It follows the separation of concerns principle where HTML is for content and CSS is for how that content looks and feels on a page.CSS grid is a layout system designed for web layouts, following the separation of concerns principles where HTML is for content and CSS is for how that content looks and feels on a page. Tables are no longer used as a hack for layout, but rather for displaying data. CSS grid allows for semantic and logical HTML, making content more accessible to assistive technology. It also makes it easier and faster to mock up or build out the layout of an app. To demonstrate, a note-taking app is built using CSS grid. The body is set to display grid, and the grid template columns property is used to define the size of the grid. The repeat function allows for defining a number of times to repeat something and the size of the column that it's repeating. The fr unit is another new thing which comes to CSS grid and is often used in the place of percentage widths.This transcript discusses the use of the CSS grid and the FI unit, which is used in place of percentage widths. The FI unit takes into account the element widths, existing content, and gaps between columns to determine the width of each column. The grid can be defined with a specific number of columns, and the browser will automatically calculate the percentage widths. The grid can also be defined with rows, such as a fixed header and footer and a main content section. Elements can be placed within the grid using the grid column and grid row properties, with shorthand options available. Overall, the transcript provides an overview of using the CSS grid for layout design.In this video, the speaker demonstrates how to use CSS grid to create a basic layout for a web page. They start by defining the grid columns and rows, and then assigning different elements to specific areas of the grid using the grid-area property. They also show how to use the grid-template-areas property to name different areas of the grid, which can make it easier to rearrange the layout later on. The speaker recommends using the Firefox grid inspector tool to help visualize the grid and make adjustments. Finally, they demonstrate how to use the display: contents property to make child elements of a main element become children of the grid instead, which can be useful for creating more complex layouts. Overall, the video provides a helpful introduction to using CSS grid for layout design.The speaker discusses using CSS grid to create a layout with a main element, article, and side element. They explain how using ""display: contents"" on the main element can cause a bug in some browsers where the entire element, including its children, disappears for screen readers. Instead, they suggest using CSS subgrid to align the article and side elements with the main grid. This allows for more flexibility when changing the size of the parent grid. The speaker recommends resources such as Adrian Roselli's article and the Mozilla dev docs for more information on subgrid.The transcript discusses the use of CSS Grid, a relatively new layout system, and its relationship with Flexbox. The speaker emphasizes that both Grid and Flexbox are useful and complement each other, and that it's important to know when to use each one. The speaker also demonstrates how to define columns using the Grid system, and explains the use of the ""repeat"" and ""min/max"" functions. Overall, the transcript provides technical information on using CSS Grid for layout design.The video discusses the use of the CSS grid autofill and min/max properties to create a grid layout with evenly spaced cards. The grid is defined with repeat autofill and min/max 300 pixels to ensure that the cards are at least 300 pixels wide but can expand to take up extra space. The grid is also defined with grid template rows repeat autofill and a height of 150 pixels. A gap of 20 pixels is added between each column and row using the grid gap property. The video recommends using Firefox's grid inspector to visualize the grid layout. The CSS grid feature has been available since 2017 and is supported by major browsers.CSS grid is now widely supported by major browsers such as Chrome, Firefox, Safari, and Edge. Internet Explorer also has its own version of the spec, but it hasn't been updated and may not work for all cases. Subgrid, a new feature that allows for more complex grid layouts, is currently only available in Firefox Nightly. The supports query is a useful tool for ensuring that unsupported CSS properties are not delivered to browsers. However, it's important to note that different browsers may have different interpretations of the spec, so it's important to test thoroughly. Overall, CSS grid is a powerful tool for creating complex layouts and is now widely supported by modern browsers.The speaker discusses the benefits of using CSS grid for website layout and design. They explain that even though not all browsers support it, there is still a high percentage of support and a fallback can be written for those that don't. The speaker encourages the audience to start implementing grid on a small scale and gradually expand from there. They also emphasize that CSS grid is easy to maintain and doesn't require updating frameworks. The speaker recommends resources such as CSS Tricks and a free CSS grid course from Wes Bos. They also suggest reading books and blog posts by Rachel Andrew and Jenn Simmons. Overall, the speaker is enthusiastic about CSS grid and its potential to make website design easier and more efficient.Rachel Andrew is a highly recommended author on CSS layout, particularly CSS grid. She has written books, blog posts, and given talks on the subject. Jenn Simmons is also credited with creating grid, and both authors are highly recommended. For a fun way to learn CSS grid, CSS Grid Garden is a great resource. Additionally, Flexbox Froggie is a good resource for learning or refreshing on flexbox."
-1t64twJjM4,00:00:00,Lee Campbell,,Low Latency Designs From London Finance,"The speaker, Lee Campbell, discusses his experience working in London finance and the differences he encountered compared to his previous work in Perth. He covers ten key takeaways, including the importance of low latency in trading, the challenges of managing memory in WPF, and the shift towards high finance and trading in the industry. Campbell also mentions his background in web development and his work with ASP, ASP.NET, and VB.NET.I learned from my experience in high finance trading is the importance of knowing your targets and measuring performance. It's not just about throwing hardware at a problem to go faster, but rather understanding what you need to measure and why. This includes understanding terminology such as service time, latency, response time, and throughput. It's important to measure all of these factors in order to get a complete picture of performance. Additionally, it's important to avoid the mistake of solely targeting the median response time, as this can lead to neglecting outliers and other important factors.The speaker discusses the common mistake of targeting the median or mean response time in measuring system performance, as these averages do not accurately represent the behavior of the system. Instead, the speaker suggests modeling the shape of the distribution of response times to identify problem areas and trade-offs. The speaker also emphasizes the importance of knowing the costs of basic operations in the system, as this knowledge can inform performance optimization efforts. The speaker recommends using histograms to efficiently collect and store data on response times.The speaker discusses the cost trade-offs between different lines of code and how performance engineers understand the costs relevant to their system. They provide examples of the cost of division, increment, and multiplication, as well as the time it takes to serialize and deserialize JSON. The speaker also shares impressive numbers about their laptop's capabilities, such as moving a gigabyte of data off the disk every two seconds and pushing 41 million messages across a queue per second. They emphasize the importance of visualizing and understanding how data and instructions move through a system and suggest that big O-notation is applicable to high-level designs. The speaker quotes a statement about the inefficiency in software development and mentions Moore's Law.In this YouTube transcript, the speaker discusses the inefficiencies in software development and the importance of mapping out system flows. They encourage the audience to draw out a flow from their own system and identify any slow processes that take longer than a second. The speaker then shares a personal experience with a UI slider that had a noticeable lag, and how they identified the problem by visualizing the flow of events. They discovered that a certain method was being called multiple times, causing a delay of 17 milliseconds each time. The speaker emphasizes the importance of identifying critical paths in order to optimize system performance.The speaker discusses the importance of identifying the critical path in optimizing performance. They give an example of reducing the time it takes to call a function by 2 milliseconds, which adds up when called multiple times. They also emphasize the importance of having ""mechanical sympathy,"" or understanding how the different components of a system work together. This applies to web development, high-performance computing, and data management. Knowing the target platform is also crucial in optimizing performance.The speaker discusses the importance of knowing your target platform and not playing with different platforms in production. They challenge conventional wisdom and suggest that using UDP instead of TCP can be beneficial for low latency systems. They also discuss the benefits and drawbacks of using C++ and Java, and highlight the success of using disruptive technologies like the Disruptor and SBE libraries. The speaker emphasizes the importance of justifying the costs of features, abstractions, and libraries.The speaker discusses various topics related to software development, including the use of specialized hardware and proprietary software, the benefits and drawbacks of using certain features and abstractions, and the importance of performance and clean code. They mention the use of alternative JVMs for improved performance, the limitations of ORM and serialization formats, and the importance of practicing principles such as single responsibility. They also give an example of a replay subject in the Rx library and discuss performance issues related to it. Overall, the talk is geared towards experienced software developers.The speaker discusses the trade-off between linear degradation and double subscribers throughput in a subject. They demonstrate an example of a subject and how they can subscribe to it. They then introduce the replay subject, which allows for the last value to be retrieved without a time component. The speaker then discusses how they were able to simplify the subject implementation by applying the single responsibility principle, resulting in a significant increase in speed. They also mention the importance of avoiding garbage collections to prevent performance issues.In this video, the speaker discusses the importance of optimizing code for performance. They explain how unnecessary code, such as excessive locking and thread sleeps, can slow down a program. Garbage collection can also be a performance bottleneck, as it can cause significant pauses in the program's execution. The speaker recommends avoiding contended resources and using simple data structures to reduce contention costs. They also suggest writing single-threaded code that is easy to debug and predictable by both humans and machines. Finally, the speaker suggests using dedicated processes for specific tasks to improve concurrency.The speaker discusses the importance of performance culture in software development. They suggest drawing and visualizing flows to identify potential issues and using dedicated processes for specific tasks instead of relying on multiple threads. They also mention the use of circular buffers for predictable latency and constant space requirements. The speaker emphasizes the importance of clean code, single responsibility principle, and intention revealing interfaces. They suggest using the right tool for the job and avoiding unnecessary code. The focus should be on the core concepts, with distracting elements stripped down and open sourced.The speaker discusses the importance of focusing on core concepts in programming to ensure quick build times, fast tests, and repeatable deployments. They also mention the broken window theory and how it applies to code bases, emphasizing the importance of fixing issues promptly to prevent a signaling effect that can lead to further problems. The speaker encourages the audience to experiment and test different approaches to improve performance, noting that programming is an applied science that can be proven through benchmarking and experimentation. They provide tips for optimizing performance, such as knowing your targets, costs, flows, subsystems, and reasons, and being aware of garbage collection, serialization, and circular buffers. The speaker offers to provide more information and shares a bonus section on circular buffers.The speaker discusses circular buffers and various methods to return to the start of the buffer when reaching the end. These methods include using a tail pointer, adding one to the index, using modulus, and using a bit mask. The speaker benchmarks these methods using a free tool called Benchmark.net and finds that the branch plus add method is the fastest at 0.4 nanoseconds, followed by modulus at 8 nanoseconds, and division at 6 nanoseconds. The bit mask method is the fastest at 0 CPU cycles."
AGf1wXDUfTc,00:00:00,"Bye bye YAML, painless Kubernetes deployments with CDK8s","AWS CDK has revolutionised the developer experience and significantly improves productivity when deploying AWS resources compared to writing CloudFormation YAML. CDK allows developers to model application infrastructure using familiar programming languages, IDE’s, testing tools, and workflow patterns. I was very relieved to learn the same is possible for Kubernetes using CDK8s and I never need to write another YAML manifest ever again.\n\nI’ll show how CDK8s can be combined with CDK to spin up an AWS EKS cluster, generate Kubernetes manifests and apply them to the cluster without the headaches of writing any YAML.\n\n--\nCameron is currently working in a DevOps Engineer role at INX Software. Before learning about Software Development Cameron was an Accountant where he quickly outgrew spreadsheets and exposure to business improvement methodologies like LEAN Six Sigma lead to a passion for DevOps.",Cameron Tranthim-Fryer,"Cameron Tranthim-Fryer discusses how CDK8s can be used to deploy Kubernetes without writing any YAML. CDK8s is a tool that allows developers to model Kubernetes infrastructure using familiar programming languages, IDEs, testing tools, and workflow patterns. It can be combined with CDK to spin up an AWS EKS cluster, generate Kubernetes manifests, and apply them to the cluster. Cameron has been working with AWS for two years and gained a deep understanding of CDK and many AWS services. He recently completed the AWS Associate Developer certification and recommends AWS certifications for anyone looking to turbocharge their career. Kubernetes is an open-source platform for managing containerized workloads, and CDK is a tool that allows developers to model AWS resources using familiar programming languages. CDK8s is a tool that allows developers to manage Kubernetes workloads using familiar programming languages. The great thing about CDKs is that the YAML produced can run anywhere, including on Azure, Google Cloud, or even self-hosted Kubernetes. Cameron provides an example of his home automation project, which runs K3s on a Raspberry Pi. The talk assumes some basic Kubernetes knowledge.CDKs, or Cloud Development Kits, allow developers to write infrastructure code using familiar programming languages and compile it down to YAML. The benefit of CDKs is that the YAML produced can run on any platform, including Azure, Google Cloud, or self-hosted Kubernetes. The talk will cover the advantages and disadvantages of YAML, including some specific grievances that Kubernetes users have with it. CDKs can overcome these issues by using popular programming languages. The talk will also compare the release process for infrastructure as code to that for traditional software applications and consider why YAML makes sense as a release artifact. Finally, there will be a serverless Kubernetes demo using AWS EKS and the serverless compute engine AWS Fargate. YAML is a data serialization language designed to be human-friendly and work well with modern programming languages. It is a popular format for configuration files, log files, and declarative manifests such as Kubernetes and AWS CloudFormation. However, because of its additional features, it is not regarded as a pure data structure representation. The talk will also mention TOML, or Tom's Obvious Markup Language, as an alternative for a pure data structure representation.In this video, the speaker discusses the advantages and disadvantages of using YAML in infrastructure as code, specifically in the context of Kubernetes and AWS CloudFormation. While YAML is useful for declaring the state of things and providing a well-defined interface between humans and machines, it can be frustrating to write and prone to errors due to its liberal type conversions. The speaker suggests that generating YAML programmatically with tools like CDKs can help overcome these issues, as it allows developers to use familiar programming languages and testing tools. The speaker also addresses common complaints about Kubernetes YAML being too verbose and complex, and suggests that these issues can be addressed through better tooling and education for new users.sense to generate YAML programmatically with CDK for AWS CloudFormation and CDKs for Kubernetes. This approach offers several advantages over static templates, including the ability to use familiar programming languages, testing tools, and package managers. Dynamic templates allow for the retrieval of environment variables and the use of abstractions to turn best practices into code libraries. Escape hatches are also available to override generated YAML and reach out to lower layers. CloudFormation custom resources are useful for invoking Lambda functions that support create, read, update, delete, and list operations. CDK provides easy abstractions for packaging and deploying Lambda functions, making it simple to write custom resources. YAML release artifacts encompass infrastructure, network, policy, configuration, and security.discuss the use of cloudformation custom resources and how infrastructure as code is not just limited to infrastructure, but also includes network, policy, configuration, and security. The release process should follow the same pattern as application code, with source, build, test, deploy, and monitor stages. An example is given of using AWS CodePipeline, CodeBuild, and CodeDeploy to deploy a home automation project to a Raspberry Pi running K3s and Kubernetes. AWS CloudWatch is used for monitoring. 

The two container orchestrators available on AWS are ECS and EKS, with the latter requiring payment for the control plane. Workloads can be deployed to managed EC2 instances or using the serverless Fargate option. While Kubernetes can lead to poor utilization of compute resources and a maintenance burden, there are still use cases where EC2 instances are better suited.is being discussed in this YouTube video. The speaker talks about the options available for deploying workloads on AWS, specifically the two control plane options - deploying containers to managed EC2 instances as worker nodes or using the serverless compute engine AWS Fargate. The speaker shares their experience of using Kubernetes and how they have often been disappointed with poor utilization of compute resources and the maintenance burden that comes with maintaining infrastructure. They suggest that for many use cases, the serverless option is the best option, even though it may be more expensive per unit of compute or memory resource.

The speaker then goes on to discuss a demo architecture that deploys an AWS control plane and configures it to use Fargate workers. They explain how the hello Kubernetes app is deployed using a deployment, service, and ingress, and how the AWS application load balancer receives incoming traffic and directs it to the hello Kubernetes pod. The speaker highlights some advantages of using this architecture, such as better isolation and the use of the newest and most advanced load balancer from AWS. However, they also mention some disadvantages, such as the cost of spinning up a separate ALB for each ingress and the lack of support for stateful workloads that require persistent volumes.

Overall, the video provides insights into the options available for deploying workloads on AWS and the pros and cons of using a serverless option like AWS Fargate. The demo architecture provides a practical example of how to deploy an app using Fargate and highlights some of the advantages and limitations of this approach.CDK EKS Fargate cluster using programming languages to generate the configuration. The cluster creation includes specifying the Kubernetes version and configuring the default profile for Fargate workers. The advantage of using programming languages is that only supported values can be entered, and language features can simplify the configuration process. The cluster object can be accessed to add additional resources to the VPC, such as a database or EC2 instance, and helper methods can be used to add node group capacity, auto scaling groups, and manifests and helm charts to the cluster. The abstraction also allows for the deployment of CDK's charts directly to the cluster. AWS support and online communities are available for assistance.The video discusses two code repositories, one for CDK and one for CDKates. CDK code is used to generate YAML files, which are then applied to a Kubernetes cluster using the Kubernetes CLI. CDKates is used to configure CDK and create TypeScript classes for Kubernetes objects. The video also discusses testing, including snapshot tests and fine-grained assertion tests. The tests provide a reference point for non-technical users and save time and money by ensuring that the infrastructure being deployed delivers business value. The video concludes with a demo of running the CDK stack and importing access credentials for remote access.The speaker discusses using CDKs to simplify the process of configuring Kubernetes. They define an API object and use version 1.20 of Kubernetes to ensure correct annotations. They explain the difference between load balancer and node port services and how to configure them. They also show how to create an ingress with annotations to communicate with the load balancer controller. The speaker demonstrates how to create a kube deployment with two pods running a Docker Hub image and how to use labels to simplify the process. They mention using constructs to abstract away boilerplate code and demonstrate how to deploy the YAML to the cluster using the Kubernetes CLI or the desktop app Lens.The speaker demonstrates how to use a desktop app called Lens to connect to a Kubernetes cluster on AWS. They show how to view nodes and workloads, create a new namespace, and deploy manifests. They also demonstrate how the load balancer controller directs traffic between two replicas of an application. The speaker emphasizes the ease of using AWS CDK to deploy workloads compared to writing CloudFormation and Kubernetes YAML manually. They provide links to code repositories and thank volunteers for making the demonstration possible."
Rb6EFtGXpbs,00:00:00,Release your inner DevOps,"Many teams struggle with how to release their code quickly, safely and regularly into production. Often, we can feel bogged down by process, unable to see how others can release so quickly or making excuses about how \",Dylan Watson,"Dylan Watson, a software developer with experience in improving the pace of development at Bankwest and Atlassian, gave a talk on how to release code quickly, safely, and reliably into production. He started with audience participation, asking how often teams deploy to production, and provided guiding principles for improving the path to production. He also shared a case study and practical techniques for moving code into users' hands quickly and safely. Dylan emphasized the importance of deploying software safely and discussed common pain points, such as coordination between multiple teams, manual testing, approvals, scheduling out-of-hours deployments, batching changes, and manual deployment steps. He encouraged discussion and acknowledged that not everyone would agree with everything he said.The speaker discusses the challenges of coordinating multiple teams and aligning them for deployments. They emphasize the importance of automation in the deployment process to reduce the risk of errors and failures. The speaker suggests that a DevOps mindset is crucial for automating and improving the deployment process. They recommend smaller changes to reduce risk and isolate issues, merging only when it's safe for production, and building automated testing and security checks into the pipeline. Lastly, they stress the importance of observing production to track down issues quickly. The speaker briefly mentions a recent project they worked on at Bankwest.The speaker discusses their experience working on a home loan system with around 20 different components and four teams. They increased their deployments from five per month to 55 per month by experimenting and failing often, with engineers in control of deployments and the definition of done being in production. They also separated deployments and releases, used feature toggles, and employed a technique called expand roll out contract to take a measured approach to deployments. The speaker emphasizes the importance of knowing what's going on in production to easily track down issues.In this video, the speaker discusses the importance of separating deployments and releases in software development. Deployments involve moving code into a production environment with minimal downtime and impact on users. Releases, on the other hand, involve launching new functionality to users, which requires preparation time for communication and training. The speaker suggests using feature toggles to test new features without affecting other users and slowly rolling them out to certain users. However, the speaker also warns about the potential risks of using feature toggles, citing the recent incident with Knight Capital. Overall, the video emphasizes the importance of taking a measured approach to deployments and releases in order to minimize risks and ensure a positive user experience.The speaker discusses the use of feature toggles in software development, which allow for new features to be slowly rolled out to certain users without affecting other teams. However, it is important to clean up toggles afterwards to avoid issues like the recent night Capital incident. The speaker also explains the expand rollout contract technique for making breaking changes in a considered manner, which is useful for API and database changes. An ideal deploy process should include automated tests, security scanning, and an automated deployment process.The speaker discusses the ideal deployment process, which includes automated tests and security scanning, an automated deployment process, quick rollback procedures, and toggled changes that are backwards compatible. The goal is to minimize the number of approvals required and to have a proven, smooth deployment process that removes fear and allows for speed. The speaker notes that manual deployment processes vary by company and can involve setting up infrastructure via code. In terms of expanding or contracting an API, it is easier within an organization where there is a code repository and dependencies are known.The speaker discusses the importance of knowing the dependencies of each system and the usage of code within an organization. They mention the use of client libraries and the need to deprecate fields and give communication to external users. The speaker also talks about their experience with consumer-driven contract testing and how they ended up using client libraries instead. They emphasize the importance of not making backwards incompatible changes without checking with other consumers first. The speaker also briefly discusses feature toggling and how it can fail if not implemented properly. They believe that devops should not be a separate role and that the whole point of devops is to have smart people working together.The speaker believes that there should be no distinction between engineers and DevOps, as the whole point of DevOps is to have smart people working together towards improving processes. They discuss the importance of feature toggles and how they manage them at Bankwest, using internal tools and having full visibility of each toggle's state. They also mention the importance of taking a measured approach when making changes to databases, avoiding renaming and instead adding and removing columns in a considered manner. Finally, they are asked about load balancing for testing and rolling out new features slowly, but they have not personally tried this approach.The speaker discusses their experience with deploying code in production environments. They mention using feature toggles to control which users are exposed to new features, and deploying code frequently to reduce the risk of catastrophic failures. They acknowledge that this approach is subjective and not necessarily quantifiable, but they have seen fewer issues with more frequent deployments. They also mention working at a bank, specifically Bankwest.The speaker discusses the impact of frequent deployment and how it can be less damaging even with more bugs. They also mention their experience working at a bank where they shipped six to ten times a day, while the parent company shipped once every few months. Bringing critical experts into the team and aligning goals can help overcome challenges in bringing other teams along the journey towards continuous development. The speaker acknowledges that this is a constant challenge and improvement is necessary."
pvJZ8LPP7Tk,00:00:00,I AM A COMPUTER and so are you...,"… well, that’s our current best theory of what we are.  The “Computational Theory of Mind” says that our minds are computers.  But, to be clear, that doesn’t mean we have a CPU, RAM, and hard disk.  Come along to this talk to learn what it really means for a calculator, a phone, and for US to be computers.\n\nThis is not a talk about machine learning algorithms, it’s more about what it means to be a thinking machine.  It’s not only about helping computers think more like us, but also helping us to understand that we are more like computers.  It will help you prepare for the coming wave of “thinking machines.”\n\nAI/ML software has already beaten the world’s best humans at Chess, Jeopardy, Go, and some video games, and now it’s learning how to play games from scratch, writing text, writing code, and more.  As a result, it’s also time for us to start talking more about “machine with minds.”\n\nThis talk will also hypothesise a little about what it means for a computer (and us) to be aware, self-aware, to have free will, and to feel like we do, i.e. to have a mind. It combines research in Computer Science, Cognitive Science, Neuroscience, even and some Philosophy of Mind.\n\nThe speaker has a PhD in Artificial Intelligence (including Cognitive Science and Neuroscience) from UNSW.  They have written and published research and conference papers on AI.  They have provided advice and guidance to AI startups, and to organisations keen to use AI to improve their operations.\n\nNo experience necessary\n45 mins\nAI \u0026 ML\nAshley is a startup explorer, software engineer, academic, and professional trainer.  He helps organisations with innovation, enterprise software systems, and coaching / training. \n\nHe has a PhD in Computer Science \u0026 Software Engineering from UNSW and expertise in CQRS/ES, backend and frontend development, cloud deployment, and Artificial Intelligence.\n\nHe is an evangelist for the Lean Startup (Eric Ries) with Customer Development (Steve Blank) approach to startup and corporate innovation and runs the Lean Startup Perth meetup.  \n\nAshley has co-founded four tech startups and two consulting and professional training businesses (Innovately.com.au and Running Code Productions).  His latest startup is the Lean Explorers Club.",Dr Ashley Aitken,"Dr Ashley Aitken presents the ""Computational Theory of Mind,"" which suggests that our minds are computers, but not in the traditional sense of having a CPU, RAM, and hard disk. The talk explores what it means to be a thinking machine and how it relates to the coming wave of ""thinking machines."" The speaker hypothesizes about what it means for a computer and humans to be aware, self-aware, to have free will, and to feel like we do. The talk combines research in Computer Science, Cognitive Science, Neuroscience, and Philosophy of Mind. Dr Aitken has a PhD in Artificial Intelligence and has written and published research and conference papers on AI. The talk is suitable for experts and non-experts alike and lasts for 45 minutes.The speaker's talk is titled ""I'm a computer and so are you"" and aims to convince the audience of the validity of this statement. The speaker has a background in AI, cognitive science, and neuroscience, and works as an IT consultant with a focus on innovation consulting. The talk will cover three big questions: what are computers, what are we (as humans), and what is the self? The speaker also mentions their previous talks on functional programming and anti-fragility. The talk will include some mind-altering experiences to encourage the audience to think differently about their minds.In this video, the speaker discusses the essence of computers and how they work. They explain that a computer is a physical system that allows for three levels of description: the physical level, the functional level, and the symbolic level. The functional level describes the configuration of the system in terms of functional states, which are defined in terms of equivalent sets of physical states. The symbolic level refers to the use of symbols to represent things, and the semantic level requires that symbols be consistent under transformations. The speaker also discusses how the brain works and how it can be thought of as a computational system. Overall, the video is aimed at experts in the field of computer science and cognitive science.This video discusses the different levels of description for a computer, starting from the physical level of atoms and electrons, to the functional level of voltages in memory cells, to the symbolic level of bits and rules, and finally to the semantic level of principles of operation. The focus is on the highest level, where semantic states and principles are used to describe how a computer operates. The video emphasizes that at each level, there are many equivalent states that can be used to represent the same information, and that the details of the lower levels are often ignored in favor of a more abstract and simplified view.Computational systems have three levels of abstraction: the functional level, the symbolic level, and the semantic level. The functional level deals with the physical aspects of the system, while the symbolic level deals with the symbols and rules of behavior. The semantic level deals with the concepts and principles of operation. Computers are computational systems that have these three levels of description. The higher levels of description can ignore the lower level details, making them more useful. Other computational systems include calculators and mechanical systems. The brain can also be considered a computational system, as it processes information biologically.we're not dealing with just one bit we're dealing with billions of bits because we have billions of neurons in our brain and they're all firing at different rates so we can think of the brain as a massive parallel processing system where all these neurons are firing at different rates and creating patterns and connections and that's how we process information and make decisions and have thoughts and emotions and all the things that make us human. So when we say we're a computational system we mean that we're processing information in a similar way to how a computer processes information but of course we're much more complex and sophisticated than any computer we've built so far. And this understanding of the brain as a computational system has led to many advances in neuroscience and artificial intelligence and has the potential to revolutionize our understanding of the mind and consciousness.describe the concept of a cat at the semantic level. However, it doesn't explain the underlying mechanisms of how the brain actually performs these computations. It's just a high-level description of the brain's behavior. Nonetheless, these abstractions are useful for understanding how the brain processes information and how we interact with the world around us.discussing the different approaches to implementing a mind, specifically the classical AI approach and the newer connectionist or neural network approach. Both the brain and a classical digital computer are computational systems with symbolic and semantic levels, but the difference lies in how they are programmed. Classical AI programs at the symbolic level, while the mind learns and creates symbols and rules at the functional level. The neural network approach is more similar to the mind, as it specifies the functional level and allows for learning and symbol creation. To implement a neural network, a classical computer is used to program at the functional level, using symbols to specify the firing rate of neurons rather than the symbols themselves. However, the question remains whether the mind is truly Turing equivalent, as it defines and emerges symbols rather than having them specified.The speaker discusses the difference between discrete and continuous computation, with the brain being an example of the latter. In continuous computation, symbols and semantics emerge as a result of learning, and the system is in a continuous state of flux. The speaker then poses the question of what ""I"" or consciousness means in computational systems, and suggests that awareness can be defined as consistent and appropriate behavior with respect to perceptions. The example of a man mistaking his wife for a hat is given as an example of when awareness goes wrong.The speaker discusses the importance of having appropriate computational semantics for awareness, using the example of a man who mistook his wife for a hat due to a brain disorder. Self-awareness is also discussed, with the speaker noting that it involves consistent and appropriate behavior with respect to internal and external perceptions of oneself. Free will is defined as making decisions and taking actions based on current inputs and past experience, and the speaker notes that this is a mechanical process. The concept of qualia, or what it's like to experience something, is then introduced, with the speaker discussing the experience of pain and seeing colors like red. The relationship between qualia and the computational approach to the human mind is explored.The speaker discusses the experience of pain and seeing colors, and how they relate to the computational approach to the human mind. They conduct an experiment where the audience is asked to pinch themselves and consider where the pain is felt - it is concluded that pain is constructed in the mind. The speaker also explores the concept of seeing red and how the brain constructs the experience of color. They suggest that the brain behaves in a way consistent with different shades of red and gives it a label of ""red"". The speaker also questions why we perceive black as black and white as white, suggesting that it is almost arbitrary. Overall, the talk delves into the complexities of perception and how the mind constructs our experiences.sense of the experience of seeing and consciousness. The color we see is arbitrary and can be swapped around, but we need something to distinguish them. When we see, it feels like more than just behaving consistently. Bats use echolocation, and we don't know what it feels like to see as a bat. Consciousness is often involved in seeing and other experiences, and some suggest it could be in the microtubules of neurons or due to quantum mechanics. However, the evolution of the brain suggests that consciousness is more about the physical architecture and function of the brain. A computational theory of consciousness based on self-awareness may explain most of it, but not all.having Consciousness, otherwise it wouldn't have evolved in humans. It allows us to have a subjective experience of the world and make decisions based on that experience. In terms of AI, it could potentially lead to more ethical and empathetic decision-making if the AI system is able to understand and feel the consequences of its actions. However, this is still a topic of debate and research in the field.The speaker discusses the concept of behaving consistently and the evolutionary advantage of feeling pain and learning from it. They also touch on the difference between top-down and bottom-up AI approaches, with bottom-up being more stable and able to handle unpredictable situations. When asked about teaching AI ethics and morals, the speaker emphasizes the importance of language and its correlation with behavior, but notes that logic does not always drive behavior. The speaker also briefly discusses how humans learn through pattern recognition and replaying behaviors. Finally, they acknowledge the diversity of individuals and their varying abilities and learning rates.The speaker discusses the concept of machines learning and replicating human behaviors in certain contexts. They acknowledge the diversity of individuals and their varying abilities to learn and process information. The speaker refers to these individuals as computational systems. 

During the Q&A session, the ethical implications of giving robots the ability to feel pain are discussed. The speaker notes that pain is an innate feeling deeply ingrained in human beings, and if robots were to experience pain, it would be the same as inflicting pain on a person. 

The speaker also comments on the Google AI project, which trains systems to respond with text based on large amounts of training data. They note that while the system may understand the semantics of certain concepts, it is not grounded in real-world experiences and therefore cannot be considered sentient or self-aware. 

Overall, the speaker emphasizes the importance of considering the ethical implications of developing advanced AI systems and acknowledges the limitations of current technology in replicating human consciousness.The speaker discusses the concept of rain and how it is represented in computational systems, but notes that these systems are not self-aware or conscious. They also discuss the importance of abstraction in different levels of representation, and how it allows us to ignore certain details and focus on higher-level concepts. The speaker notes that these abstractions are a limitation of the human brain and its ability to learn symbols and semantics, but also notes that this is what allows us to survive in the world. Overall, the talk focuses on the intersection of computation and human cognition."
04Vb9pAmnBk,00:00:00,10 UX principles you should know about,"User Experience Design is closely connected to human psychology. From research to usability testing, human behaviour is at the centre of what we do. We can only build better products when we pay special attention to things like the user's memory, attention and perception. \n\nLet's take a dive into the \",Phil Delalande,"Phil Delalande, a UX consultant, discusses 10 principles of user experience design that are closely connected to human psychology. He emphasizes the importance of paying attention to the user's memory, attention, and perception in order to build better products. He also discusses the shift from product-centered design to human-centered design, which requires understanding people and their diverse contexts. Delalande explains the egocentric bias, which is the tendency to overestimate how our opinions and beliefs are normal for others. He also discusses the paradox of choice and decision fatigue, and how limiting options can reduce cognitive load. Delalande gives an example of a music mastering platform with too many pricing options, which led him to choose a different product.The speaker discusses various design principles and techniques that can improve user experience. They emphasize the importance of simplicity and clarity in design, using examples such as pricing tables and website layouts. The speaker also discusses the concept of cognitive load and how it can affect user perception and decision-making. They suggest using clear action buttons and chunking information to improve usability. The speaker also mentions the ""Hertz threshold,"" which is the maximum amount of time a user is willing to wait for a computer to respond. They challenge designers to strive for faster load times and improved user satisfaction.The speaker discusses the importance of website speed and usability, citing Google's goal of loading all websites in under half a second and Jakob Nielsen's emphasis on consistency with other websites. They also mention the ""slow feet, slow"" rule, which states that the time to acquire a target is a factor of the distance to the target and the size of the target. The speaker emphasizes the importance of clear goals and avoiding banner blindness, as studies have shown that users tend to ignore ads even if they are designed to blend in with the content. Finally, they discuss the cocktail party effect and how it relates to our ability to focus and switch our attention.important and that content should be structured in a way that captures the user's attention. The serial position effect suggests that people remember the first and last items in a group, so important information should be presented at the beginning or end of a paragraph. The authority principle can be used ethically to influence behavior, but can also lead to unethical practices like spamming. The ""where the heck are you taking me"" effect highlights the importance of clearly indicating the destination in digital products to avoid frustrating users. Simplification is key in designing effective user experiences.The speaker discusses the importance of indicating clearly the destination in the itinerary and simplifying products architecture and navigation. They suggest minimizing choices, using consistency, and testing interfaces regularly. The speaker also mentions the evolution of technology and society and recommends looking up the gift all principles and visiting the website loads of UX dot-com for inspiration. They conclude by reminding the audience that they are not the user."
ETJUi_aempM,00:00:00,Can Indigenous thinking teach us about building ethical tech?,"Technology moves rapidly. We've learned to move fast and break things, but this method of production often has unintended consequences; machines causing algorithmic harm towards already marginalised groups, a digital economy built to extract data and incrementally influence human behaviour with dubious consent, cryptocurrency contributing harmful emissions and cooking the planet at the same rate as a small country.\n\nWorking in the tech industry is a privilege and I want to use that good fortune to contribute to a future that is designed to enhance the wellbeing of as many people as possible - not extract and exploit. The sophistication of Indigenous thinking can not only help us build more robust ethical frameworks, but also help unlock the next frontier of technological development.\n\nIn Australia, we have the privilege of living amongst the world's oldest continuing culture. A culture that has transferred information between generations for 10s of 1000s of years with incredible fidelity does not happen by accident; it involves knowledge of living harmoniously with complex adaptive systems that Western science is slowly catching up to. \n\nWhat kind of protocols can we learn from Indigenous ways of thinking that can help us build better ethical practices for building technology? How can we optimise for wellbeing and abundance, rather than the kind of limitless growth that is at odds with a healthy planet? \n\n--\nKathryn is a technologist and digital rights activist currently serving on the board of Electronic Frontiers Australia, and campaigns for human rights across movements. She is passionate about using Indigenous thinking - caring for Country and caring for Kin - to shape and foster an ethical future for technology.\n\nKathryn is currently leading a new initiative at ThoughtWorks creating careers for Aboriginal and Torres Strait Islander technologists.",Kat Gledhill-Tucker,"Kat Gledhill-Tucker, a technologist and digital rights activist, discusses the unintended consequences of fast-paced technology development, such as algorithmic harm towards marginalized groups, data extraction, and harmful emissions from cryptocurrency. She believes that Indigenous thinking can help build more robust ethical frameworks and unlock the next frontier of technological development. She highlights the knowledge transfer between generations in Indigenous cultures and the importance of living harmoniously with complex adaptive systems. She asks what protocols we can learn from Indigenous ways of thinking to build better ethical practices for technology and optimize for wellbeing and abundance. Kathryn is currently leading a new initiative at ThoughtWorks creating careers for Aboriginal and Torres Strait Islander technologists.is a lead consultant at ThoughtWorks and manages their First Nations Delivery Center, which aims to create remote-first careers in technology for Aboriginal and Torres Strait Islander peoples in Australia. She approaches the topic of ethical and responsible technology from the lenses of her experience in technology and activism. Indigenous cultures are not monolithic, and each area on the map represents a country with over 300 distinct groups of people with their own culture, language, customs, knowledge systems, and law. Indigenous knowledge systems reflect over 60,000 years of refined knowledge and understanding of how to live with complex adaptive systems. Aboriginal and Torres Strait Islander peoples have used sophisticated knowledge systems to live in balance with the country's ecology, such as the Wear Arena fish traps, which represent sophisticated technology design across different fields of environmental sciences. The information architecture that processes these knowledge systems is just as fascinating as the products of technology that emerge from them.The video discusses the relationship between indigenous knowledge systems and modern technology. It highlights the importance of the information architecture that enables indigenous knowledge systems, which can be thought of as akin to coding. The video also discusses the themes of sovereignty, custodianship, and relationality that regularly appear in indigenous cultures. Systems theory is introduced as a way of thinking that can help us make sense of the world we are creating. The video emphasizes that technology is not neutral and that anything built by humans will exhibit bias. The risk is that as more people rely on technology for daily activities, they are also more subject to unintended and hostile consequences. The video concludes by questioning the protocols and rules that currently govern the technology we are building today.The speaker discusses the current protocols and rules governing technology, which often prioritize profit and limitless growth without considering the unintended consequences and potential for exploitation. They argue that ethical and responsible technology should seek to support rather than exploit us, and that indigenous knowledge systems could be critical to this new way of building. The process of building ethical technology involves interrogating systematically the inputs, outputs, and ways of working at every step of production, diversity, methodology, and formalizing ethical processes. The speaker participated in an indigenous protocols in artificial intelligence incubator, which aimed to protect indigenous communities and natural resources, improve AI, reduce harm, and position indigenous peoples as leading developers. The speaker also emphasizes the importance of acknowledging the unseated land and addressing the injustices that indigenous people have endured and continue to endure.Indigenous sovereignty is a means for Indigenous peoples to seek greater control of their lives with limited government interference in Indigenous affairs. One way this emerges in the context of technology is through Indigenous data sovereignty, which allows Indigenous peoples to have control over how data is solicited, collected, analyzed, and operationalized. At ThoughtWorks, they ensure sovereignty in their work through their approach to Gila, an open-source framework built to allow communities with endangered languages to build apps that help preserve their culture. The protocols that are extended to Indigenous or other vulnerable groups should form the new standard of care when building technology or handling data. Relationality refers to the relationships and responsibilities between peoples, country entities, stories, both human and non-human, and it recognizes country as an entity in itself. Indigenous epistemologies are much better at respectfully accommodating the non-human. Ultimately, the goal is to treat these new non-human kin respectfully and reciprocally and not as mere tools or worse, slaves to their creators. Protocols should be defined in relation to handling sacred images, text, audio, and it's a standard practice to provide context warnings before showing depictions of deceased Aboriginal peoples to allow for appropriate cultural protocols to be followed.The concept of relationality defined protocols in relation to handling sacred images, text, and audio is discussed in this video. The speaker suggests that protocols should be developed to allow for appropriate cultural protocols to be followed when showing depictions of deceased aboriginal peoples. Anticipating cultural pathways and interpretations for both indigenous and non-indigenous groups of people may assist with content moderation. The terms of use of data sets ought to be determined by the communities related to them in close consultation with those communities, and data should not leave country without the permission of custodians. The speaker also discusses the concept of multi-generational custodianship of data and the importance of treating data respectfully. The risks of sharing information beyond its intended audience or contributing further to the colonization and violence towards indigenous communities are highlighted. Custodianship emerges from the idea of relationality as responsibility, and custodians have a responsibility to care for country and recognize that country health and culture are all connected. The concept of custodianship can be applied to data governance and data protection, and data minimization practices should be implemented. The speaker suggests that we are all custodians of digital landscapes, and every person who has a hand in building technology has some responsibility to the outcomes of those digital systems.In this video, the speaker discusses the importance of custodianship and data minimization practices in the digital landscape. They argue that everyone who builds technology has a responsibility to the outcomes of those digital systems, as the internet is a shared resource like food or water. The speaker also draws on the works of indigenous activists to create better digital futures, emphasizing the need to create a digital environment that is not owned by anyone or any entity but is preserved and protected for a shared future based on a culture of mutual respect. They also discuss the importance of creating safe and culturally relevant spaces for diverse teams, particularly for indigenous technologists who are underrepresented in the tech industry. The speaker cautions against expecting indigenous peoples to be personal educators and emphasizes the need to navigate cultural protocols when engaging with culture. Finally, the speaker highlights the importance of bringing a multitude of experiences and ways of thinking to a team to avoid building hostile technology.In this video, the speaker discusses the lack of representation of indigenous people in the tech industry, stating that they make up only three percent of the population and even less in the tech industry. The speaker emphasizes the importance of bringing diverse experiences and ways of thinking to tech teams to avoid building hostile technology and instead create ethical technology that maximizes well-being. The speaker also provides a further reading list on their website and thanks the audience for attending."
3VlN37keE5c,00:00:00,Functional HTML,"HTML, the foundation of the web! With so much time being spent on typed javascript, functional programming, unit tests, visual regression testing, tools, frameworks and a drive to write better more efficient code we often forget that the web starts with HTML.\n\nLet’s talk HTML and semantics and why choosing the right HTML elements will help you write more accessible, efficient and maintainable code not just in your HTML but your CSS and Javascript as well. \n\nMost importantly we’ll explore why HTML is so vital in improving your projects overall functionality for people and for bots.",Mandy Michael,"Mandy Michael discusses the importance of HTML in web development, emphasizing that it is the foundation of the web. She argues that choosing the right HTML elements can lead to more accessible, efficient, and maintainable code in CSS and JavaScript. Despite HTML being a simple language, it is still valuable and often overlooked in favor of more complex technologies like JavaScript. Mandy shares a personal story about being on a CSS panel where someone asked if anyone hires people who only write CSS and HTML, to which the answer was no. This inspired her to write an article about the value of people who only write HTML and CSS. She believes that having a deep understanding of HTML is becoming rare, and it is important to remember that HTML is a crucial part of the web.discusses the importance of considering how different technologies consume websites and HTML. The speaker emphasizes that HTML is a crucial part of the web and needs to be considered in terms of the various people, tools, and technologies that consume webpages. The talk also touches on how the browser interprets HTML and constructs the page from it, and why it matters to understand this process. The title of the talk, ""Funky ML,"" is not related to functional programming in HTML, but rather a reference to the common phrase ""I'm just making it functional right now,"" which often means relegating HTML and CSS to just making things pretty. The speaker argues that for something to be functional, it should be practical and useful, and not just for someone looking at it in a browser, but for any technology that tries to look at the website.The video discusses how browsers interpret HTML and why it matters. The browser constructs the page based on the HTML elements provided, and it doesn't care what those elements are. The video also briefly touches on TypeScript, a typed JavaScript language that uses static typing to check for errors at compile time. The importance of choosing the right HTML element for content is emphasized, as using divs everywhere can lead to unstructured and meaningless pages. The video provides a simple example of a page about dogs that uses only divs and lacks structure.The proper use of HTML elements is crucial for creating structured and meaningful web pages that can be consumed by a wide range of assistive technologies, such as screen readers, browser readers, switches, and even voice assistants like Google Home and Alexa. The accessibility tree is a modification of the DOM that is used by assistive technologies to interpret and navigate the page. It uses native semantics to provide additional context and strip out irrelevant information, making it easier for users to understand the page. A div-only page lacks structure and meaning, making it difficult for assistive technologies to interpret. Properly chosen HTML elements, such as lists, links, images, and headings, create a hierarchy that is more practical and useful for both users and assistive technologies.In this video, Mandy Michael discusses the importance of using structured and semantic HTML elements for accessibility. She uses her own website as an example, pointing out the issues with using divs instead of proper headings and links. She demonstrates how a screen reader reads the page differently when using semantic HTML, providing more context and information for the user. She emphasizes the importance of considering accessibility not just for screen readers, but also for voice assistants like Google Home and Alexa. Overall, she encourages developers to build for people and prioritize accessibility in their work.The speaker emphasizes the importance of using semantic HTML elements instead of just using divs. Sectioning elements, such as section, article, nav, and aside, can create a document outline that is used by accessibility tools and search engines. Headings should be used to provide a clear hierarchy of content, with h1 representing the main purpose of the page and h2 to h6 representing subheadings. The header, footer, and main elements can also be used to provide context around specific parts of the page. By using these built-in functionalities, developers can improve the accessibility and searchability of their websites.The speaker discusses the importance of utilizing built-in functionality in HTML, such as the link and button elements, which come with many features for free. They suggest using links for navigating to new pages and buttons for toggling something in the interface. The speaker also highlights the benefits of combining elements, such as using the figure and figcaption elements to create self-contained units of content that can be moved around the page. They also mention the usefulness of the abbreviation and definition elements for defining phrases and acronyms. Overall, the speaker emphasizes the importance of using HTML elements to their fullest potential to improve accessibility and save time.The speaker discusses the importance of using proper HTML elements to make projects more understandable and easier to consume for both developers and users. They mention various HTML elements such as progress bar, bi-directional, KBD, video, dialogue, and audio time. The speaker also talks about how reading apps like Instapaper and Pocket consume structured content and display it with custom styles to provide improved readability and options for personalization. They demonstrate how Instapaper and Pocket strip out unnecessary elements and apply their own styles to headings, links, and lists. The speaker emphasizes the importance of including author and date information in articles for better user experience and credibility.The speaker experimented with Pocket's web and desktop app, as well as Safari's reading mode, to test the effectiveness of semantic HTML. They found that a page with only divs caused issues with Pocket's processing and desktop app, which flagged the content as not article content. However, a more semantic version of the page worked better and even included the author's name and date. In Safari's reading mode, the speaker initially had trouble with missing content and panicked, but later realized the importance of HTML attributes in providing context and information to the page. The speaker will later discuss how this relates to search.The speaker discusses the importance of HTML structure for both reading apps and search engines. They explain that search engines rely on text alternatives and well-written content to determine the relevance of a website's content to search keywords. The speaker introduces microdata as a way to nest metadata on existing content in web pages, which can be used by search engines, web crawlers, apps, and assistive technology to provide a richer browsing experience for users. They explain that schema.org is a collection of vocabularies about various types of content that can be used to define metadata on a web page. The speaker demonstrates how to define a person as metadata on a page using HTML attributes such as itemscope, itemtype, and itemprop. They emphasize the importance of providing additional context beyond HTML elements to improve search engine results and user experience.HTML is a crucial element in making sure that websites are functional across different platforms and technologies. It is important to provide additional context and information using metadata and other attributes, as technology cannot always differentiate between different types of content. Aria attributes are a useful tool for marking up content on a page to be more easily understood by assistive technology. Semantic HTML is also important for speech synthesis and voice commands, which are becoming increasingly popular. Choosing the right HTML element and attributes to represent content is crucial for ensuring that websites are functional and accessible to all users. It is important to value HTML and use it properly to make websites more functional for people and technology, not just for now, but for the future as well.The speaker compares HTML to a friend who was once very helpful but is now taken for granted. They emphasize the importance of valuing HTML and recognizing its significance in web development. The speaker thanks Julie Grundy for their help with accessibility, Riki Mondello for their assistance with Safari's reader mode, and Burnt Toast Creative for their illustrations."
HLHgHXqnhms,00:00:00,How fast is your website really?Shining a light on web performance with real user monitoring,"By Macklin Hartley - Monitoring web performance used to be easy - all you had to do was track how long it took for the page to load. However, the extensive use of client-side JavaScript has introduced a raft of new ways modern websites can suffer from poor performance.\n\nNew performance problems require new metrics.\nWith this in mind, Google promotes a set of new metrics known as Core Web Vitals. Core Web Vitals go well beyond directly tracking page load times, instead relying on a set of user-centric metrics that focus on loading, interactivity and visual stability.\n\nIn this talk, learn how to capture Core Web Vitals metrics from end users in real time and perform continuous monitoring to quickly react to performance regression as they happen.\n\nMostly intermediate\n45 mins\nFrontend Development\nI am a Software Developer with over 7 years of experience building highly-scalable distributed systems. I'm passionate for modern design patterns and architectures such as Domain Driven Design, Event Sourcing and CQRS. I am an advocate for creating cultures of ownership, accountability, transparency and trust. I'm a strong believer in the value of Continuous Delivery, and deploying software frequently with a high degree of automation.",Hartley,"Macklin Hartley discusses the importance of user-centric performance metrics for monitoring web performance. He introduces Google's Core Web Vitals, which focus on loading, interactivity, and visual stability, and explains how to capture these metrics from real devices in real time. Continuous observability over these metrics is also crucial. Hartley emphasizes that his talk is not about tuning for better performance, but rather about measuring performance. He suggests starting with the simplest method of tracking performance on the page load event.We start with tracking page load event using simple code on the browser. However, this falls apart when we look at the performance inspector, which shows that most of the stuff is happening after the event. To fix this, we can use the navigation timing API, but it only gives us meaningless numbers. To address this issue, the W3C web performance working group came up with user-centric performance metrics, which include perceived load speed, load responsiveness, runtime responsiveness, visual stability, and smoothness. These metrics are measured using web vitals, which include time to First Bite and first content for paint. Time to First Bite measures the time between when the browser requests the page and when it receives the first byte of information back, and it should be under 800 milliseconds. First content for paint measures the time from when the page starts loading to any part of the page being rendered on the screen.This video discusses various metrics used to measure website performance. The first metric is FCP or First Contentful Paint, which measures how long it takes for the first piece of content to appear on the screen. The target score for FCP is below 1.8 seconds, and anything above three seconds needs improvement. The second metric is LCP or Largest Contentful Paint, which measures how long it takes for the largest data-intensive element above the fold to load. The target score for LCP is under 2.5 seconds, and anything over four seconds is too long. The third metric is First Input Delay, which measures the time for the first interaction on the page. The target score for First Input Delay is 100 milliseconds, and anything over 300 milliseconds is too long. The fourth metric is Interaction to Next Paint, which is similar to First Input Delay but calculated over the entire interaction with the page. The target score for Interaction to Next Paint is under 200 milliseconds, and anything over half a second is too long. The final metric is Cumulative Layout Shift, which measures visual stability. The target score for Cumulative Layout Shift is below 0.1 or 10%, and anything over 25% is not good.Google's Core Web Vitals are a set of metrics that determine a website's performance and search engine ranking. The metrics include Largest Contentful Paint, First Input Delay, and Cumulative Layout Shift. A score below 0.1 or 10 is good, while a score over 25 or 0.25 needs improvement. Improving website performance can lead to commercial benefits, such as improved search engine ranking and increased sales. Ad hoc testing, synthetic monitoring, and real user monitoring are ways to capture these metrics. Lighthouse for Google Chrome is a tool that allows users to test their own web pages and receive web vital scores.website, you can use Google's free tools to test web performance metrics such as first contentful paint and largest contentful paint. However, a better tool is Google's Lighthouse, which runs on a mobile device in a US data center, making it more representative of real-world traffic. Synthetic monitoring tools like Calibre can also be used to test web vitals on multiple devices and locations, but they come at a cost and still do not fully represent real-world traffic. It is important to test web performance as there is a diversity of browser engines, such as webkit-based devices on iOS and some Mac OS desktop devices.The speaker discusses webkit-based devices and browser engines, noting that iOS devices and some Mac OS desktop devices run webkit, while the rest use Blink, the same engine as Google Chrome. They also discuss the two main form factors, desktop and mobile devices, with a small percentage for tablets and TVs. However, the speaker argues that testing on only a few devices is not enough, as there is a significant difference in performance between top-end and low-end devices, with the majority of users using the latter. This is known as the performance inequality gap. The speaker also notes that environmental factors, such as temperature, can affect device performance, and that network speeds are not as fast as assumed. Overall, the speaker emphasizes the importance of considering real-world metrics and testing on a wide range of devices.The speaker discusses the advancements in 4G networks and the need for real user monitoring to account for the variance in network speeds and latency. Real user monitoring involves capturing performance metrics directly from devices to observe differences in functionality, reliability, and responsiveness. The Chrome user experience report is a free tool that provides real user monitoring data, but it only profiles Google Chrome devices and does not give metrics in real-time. The speaker recommends another tool that makes real user monitoring easier and does not require creating an account.The speaker discusses a tool that allows users to test the speed of their website without creating an account. They then proceed to rank various sponsors based on their website's performance, with the LCP metric being the most important. The speaker notes that some sites may not have enough traffic to be included in the rankings. They also point out some interesting results, such as a recruitment website having a low score due to its focus on recruitment rather than commercial benefit. The speaker emphasizes that this is an opportunity for improvement and encourages viewers to take a closer look at their website's performance.The speaker discusses the results of a study comparing the web performance of various companies, including Bankwest and AWS. Bankwest had the best score for time to first byte, despite being a smaller company based in Perth. The speaker also notes that GitHub had the highest score overall, likely due to their investment in web performance and their user base consisting mostly of high-powered devices and text-based content. The speaker then discusses the need for continuous observability in web performance and suggests building an analytics service using the web vitals library and the navigator.sendBeacon method to capture and report metrics in real-time.The video discusses setting up an analytics function using the navigator.sendBeacon method to send requests to a server for reporting metrics. The code is compressed into 24 lines and uses the Prometheus Library to set up summary metrics for time distributions. The analytics server is simple and does not have persistence, so metrics are kept in memory and pulled continuously by Prometheus. Grafana is used to display the metrics with pretty graphs, including instantaneous scores, trends over time, and heat maps. The video also briefly mentions storing metrics for long-term use using Amazon Kinesis firehose and S3, and querying the data with Snowflake. Overall, the video provides a simple example of setting up an analytics function and using various tools to display and analyze the metrics.The speaker discusses the importance of web performance monitoring and outlines three key goals: user-centric performance metrics, capturing metrics from real-world devices, and continuous observation. They also mention the use of an analytics server to gather data on geolocation and device usage. The speaker provides resources and tools for learning about web performance metrics. During a Q&A session, they address the variability in performance metrics and explain that Google's metrics account for differences in device speed and location. They also mention a fast 4G provider but do not identify them.The speaker discusses the variability in performance of 4G providers in different locations, with some rural areas having lower performance than urban areas. They also mention the variability in results when using different tools to measure core web vitals, with the possibility of different code detecting different things in the browser. The speaker also mentions using the Google library to send analytics to New Relic, but found differences in the CLS scores between the two tools. Overall, the talk provides insights into the challenges of measuring and optimizing web performance."
OREBcN_p5uQ,00:00:00,Escaping the Vortex: Or How I Learned to Stop Procrastinating and Get Things Done(Mostly),"By Ricki Barnes - Ever picked up your phone and sternly told yourself 5 minutes later to put it down, only to discover you haven't actually done the task you picked it up for? Put off an important task and ended up with not quite enough time to do it as well as you'd like? Realised it's now a whole hour after you promised yourself you'd scroll for \",R Barnes,"Ricky Barnes, a full stack developer at the Minduru Foundation, shares her personal experience with procrastination and distraction in her talk titled ""Escaping the Vortex: Or How I Learned to Stop Procrastinating and Get Things Done (Mostly)."" She explains how our brains are wired to be susceptible to both procrastination and distraction, and how external triggers can prompt us towards being distracted. Barnes shares strategies she uses to overcome procrastination and distraction, including understanding the reasons behind them and taking practical steps to address them. She also shares statistics on how she improved her performance at work by implementing these strategies. While she still finds it challenging to overcome procrastination and distraction in her personal life, she acknowledges that it is a work in progress.The video discusses procrastination and how it is often attributed to laziness or lack of motivation. However, the speaker argues that better self-control does not address the underlying reasons behind procrastination. The video presents a comprehensive list of reasons for procrastination, which can be boiled down to just one root cause: avoiding pain. The speaker gives examples of how tasks that are perceived as boring or stressful can lead to procrastination. The video suggests that addressing physical and mental factors should be prioritized before addressing procrastination.Procrastination is a common problem that can be caused by a variety of factors. In the case of tax preparation, the task is often perceived as boring and unenjoyable, leading to a lack of motivation to complete it. Additionally, the delayed outcome of receiving a tax refund can create a disconnect with one's future self, making it difficult to see the immediate benefits of completing the task. Finally, the lack of a specific goal or purpose for the money can also contribute to a lack of motivation.

In contrast, a development task at work may lead to procrastination due to indecisiveness, feeling overwhelmed, anxiety around meeting a hard deadline, fear of evaluation, and task aversion. These factors can make the task seem daunting and uncomfortable, leading to a desire to put it off.

To overcome procrastination, it is important to identify the specific reasons for avoiding a task and address them directly. This may involve breaking the task down into smaller, more manageable steps, setting specific goals and deadlines, seeking support or guidance from others, and finding ways to make the task more enjoyable or rewarding. By understanding the underlying causes of procrastination and taking proactive steps to address them, individuals can overcome this common challenge and achieve their goals more effectively.this money is going to be my reward. This will give me a sense of accomplishment and satisfaction, which will motivate me to continue working towards my goals. Additionally, I'm going to break down the task into smaller, manageable chunks, which will help me overcome my overwhelm and lack of focus. By doing this, I can focus on one small task at a time, and gradually build momentum towards completing the larger task. Finally, I'm going to eliminate distractions by turning off my phone and closing unnecessary tabs on my computer. This will help me stay focused and avoid getting sidetracked. Overall, by addressing the specific reasons for my procrastination and implementing these strategies, I can overcome my procrastination and achieve my goals.The speaker discusses strategies for overcoming procrastination. They suggest rewarding oneself with a tangible item after completing a task, breaking down large tasks into smaller ones with intermediate deadlines, seeking input from others to clarify thoughts and generate new ideas, and choosing task order carefully based on personal preference. They also caution against using subtasks to procrastinate on the main task and emphasize the importance of prioritizing tasks by importance.Procrastination and distraction are two common challenges that people face in their daily lives. Procrastination can be caused by fear of evaluation, lack of clarity on tasks, or prioritizing easier tasks over more daunting ones. To overcome procrastination, it is important to prioritize tasks by importance and avoid using subtasks to procrastinate on the main task. It is also important to acknowledge that flaws in work are not a reflection of personal worth, but rather a learning opportunity. 

Distraction is a common challenge in today's world of technology and instantaneous connection. There are more things competing for our attention than ever before, and many of them are designed to hook us in and keep us coming back. This can lead to a lack of presence in personal relationships and an inability to focus on important tasks. It is important to recognize the impact of distraction and take steps to limit its influence on our lives.The speaker discusses their personal strategies for reducing distractions from their phone. They first broke the habit of using certain apps by letting others use them instead. They also configured their notifications so that only phone calls come through, and everything else is silent. They then address internal triggers of distraction, such as the urge to pick up their phone during moments of transition or waiting. They disabled Google Discover, which was a major source of distraction for them, and found alternative ways to entertain themselves during short periods of waiting. Overall, the speaker emphasizes the importance of being intentional and mindful about phone usage to reduce distractions and increase productivity.The speaker discusses their experience with disabling Google Discover, a content aggregator app that was causing them to be distracted. They explain that disabling the app was a good first step, but they also needed to develop a strategy to deal with their internal triggers of distraction. This involved noticing the trigger in the moment, exploring their feelings without judgment, and waiting for 10 minutes before acting on the distraction. The speaker also notes that distractions at work can often look like work tasks, but it's important to differentiate between the two and prioritize accordingly.The speaker discusses how distractions at work can often look like plain old work, such as small urgent tasks that are low impact or low importance. They explain that they are easily distracted and receive a lot of notifications through email, Slack, Asana, and Teams. To combat this, they turned off all notifications and only check these channels three to five times a day. They also explicitly quit Teams and mute and close Slack to prevent notifications from popping up. They set up a rule in their email to send all Asana notifications to a folder they never look at, but they informed their team that they can call them if they need to urgently reach them. The speaker notes that managing other people's expectations was key and that being offline for most of the day has caused no inconvenience to anyone else and has made them more effective at work.advice on how to improve your productivity by reducing task switching. The key is to set boundaries and prioritize your tasks. Start by identifying your most important tasks and allocate specific time slots for them. During these time slots, turn off all notifications and avoid any distractions. Also, try to batch similar tasks together to minimize task switching. Finally, communicate your boundaries to your colleagues and let them know when you are available and when you are not. By doing so, you can reduce your cognitive load, improve your focus, and ultimately become more productive.The speaker discusses their experience with procrastination and distraction, and how they overcame it by understanding the reasons behind it and choosing the best techniques to overcome it. They found that configuring their technology and being mindful of their internal triggers helped them to be more productive and focused. They also share their personal statistics on task completion, showing a significant increase in productivity. The key takeaways are to understand the reasons for procrastination, deal with external triggers by configuring technology, and be mindful of internal triggers. The results of overcoming procrastination and distraction can lead to increased productivity and success."
EFVeS4HyecA,00:00:00,(Un)Anticipated Consequences: Rethinking AI and automated systems,"From chatbots to electric cars our world is becoming increasingly connected. You can turn your lights on or watch what is happening in private homes from across the globe right from your phone. Elevators make supposedly smart decisions about how best to deliver people to their floors and smart sensors tell us what speed the traffic should flow.\n\nWe all work on, in, or around technology every day of our lives. Despite our best intentions, we sometimes build systems with the potential for great harm. Visual recognition systems have mistaken a man for a monkey, a chemical plant that nearly levelled a community or a safety system that led to stalking.\n\nHow is it, the tiny little decisions we make every day can lead to some rather unpleasant outcomes? This talk will explore how our systems are designed, built, maintained, and decommissioned and what can go wrong when we don’t consider where our decisions may lead. It poses some simple questions we can begin to ask ourselves, the companies we work for, and those we buy products from, in order to help us build a safer, fairer, and more equitable world; a world we all want to live in. \n\n--\nFelicity began her career as a psychologist. Her PhD spanned psychology and genetics, where she explored what our genetic data can, or can’t, tell us about our behaviour before she transitions into a career in technology. Felicity has worked in a variety of areas, from building chatbots for private companies to helping to improve cybersecurity in international governments. She holds a Masters Degree in Applied Cybernetics and some of her innovations have been personally lauded by Microsoft CEO Satya Nadella. She has a fascination with technology innovation and a passion for creating safer and more equitable technology.\n\nEditor note: Apologies for the slight audio stutter that appears, this was on the source file so I couldn't remove it 🙏",Felicity Millman,"Dr. Felicity Millman discusses the unintended consequences of AI and automated systems in this talk. She highlights how our increasingly connected world, from chatbots to smart sensors, can lead to systems with the potential for great harm. Dr. Millman explores how our decisions in designing, building, maintaining, and decommissioning these systems can lead to unpleasant outcomes. She poses simple questions that we can ask ourselves, the companies we work for, and those we buy products from to help build a safer, fairer, and more equitable world. Dr. Millman has a background in psychology and genetics and has worked in various areas, including building chatbots and improving cybersecurity in international governments. She holds a Masters Degree in Applied Cybernetics and has a passion for creating safer and more equitable technology.need to keep in mind as we move towards artificial intelligence. Technology is neither good nor bad, but it is important to consider the potential consequences of its development. Data mining, a key aspect of AI, is similar to mining in the physical sense. Western Australia has a long history of mining, with Wiljumia being one of the world's oldest mines, continuously used for over 30,000 years. The people who mined there created a large network and developed safety systems and regulations to protect their community. Rio Tinto's AutoHaul system is currently the largest robot on the planet. As we continue to develop AI, we must consider the lessons we can learn from the history of mining and ensure that we prioritize safety and ethical considerations.The speaker discusses the importance of understanding the context and history of cyber physical systems, particularly in the context of mining and artificial intelligence. They emphasize the need to look at systems as a whole, rather than just individual components, and to consider the physical resources and connections that make up these systems. The speaker provides an example of the original subsea cables, which were insulated with tree sap, to illustrate the importance of understanding the materials and processes that contribute to the value of a system.The video discusses the use of tree sap from the Gutta-percha tree as insulation for cables in the 1800s. The tree takes 30 years to mature and only produces a small amount of sap, leading to the use of millions of trees for cable insulation. The value of the system was not evenly distributed, with workers and landowners not receiving fair compensation. The decisions made in the past still impact internet connectivity today, particularly in remote areas such as Western Australia.The decisions made in the past still impact us today, such as the placement of network cables affecting internet connection in remote areas. Technology has both enabled innovation and created ecological disasters, and it is not inherently good or bad. However, it is important to recognize the human labor involved in technological systems, such as the use of Amazon's Mechanical Turk system where humans perform laborious tasks for a cheap price, often disguised as artificial intelligence. Object recognition and capture systems also rely on human labor, and companies like Amazon have been criticized for their treatment of warehouse workers. It is important to acknowledge and value the human labor involved in technological systems.The transcript discusses the importance of understanding where data comes from and how it is used to train artificially intelligent systems. The speaker highlights the potential biases in data sets, particularly in natural language processing, which can penalize individuals from different cultural backgrounds. The transcript emphasizes the need to question the objectivity of standardized models and to consider the human labor involved in creating and classifying data.The output of machine learning models comes from data, which is often created by people in different cultures and contexts, such as those working for Mechanical Turk. Many original datasets used for facial recognition were created without consent, and some were taken from deceased or convicted individuals. This raises ethical concerns about the use of personal data and the lack of consideration for the individuals involved. Object recognition systems are becoming increasingly important in our cyber-physical systems, but we must consider the history and context of the data we use. Data involves choices, and we must recognize that these choices prioritize certain aspects over others, potentially excluding important meaning and context.The speaker discusses the potential harm of over-regulating systems, as it can solidify structures and decisions that may not be beneficial in the long run. They emphasize the importance of diversity in all aspects of decision-making, including data, ideas, experiences, and people. The speaker also highlights the significance of Western Australia in the global supply of physical resources, such as lithium and rare earth metals, which are essential components in many cyber physical systems.The speaker discusses the impact of technology on the world and the choices that individuals and organizations make in designing and implementing these systems. They highlight the use of rare earth metals in technology, particularly in devices such as smartphones and electric cars, and the impact of mining on the environment. The speaker emphasizes the importance of considering the human labor and environmental impact of technology, as well as the supply chain and feedback mechanisms. They encourage individuals to make choices that can positively impact the world and to have more discussions about the impact of technology on society."
nla84hCtE5Q,00:00:00,Delightful Frontend Development: An Intro to Elm,\,Dylan Pindur,"Dylan Pindur, a frontend developer, discusses his experience with trying out different programming languages and frameworks. He emphasizes the value in trying out new languages, as they can provide insight into different aspects of software development. He mentions languages such as Rust, which focuses on memory safety, and Pascal, which emphasizes encapsulating side effects and minimizing state. He also discusses his experience with Elm, a functional language and framework for single-page applications. Overall, he encourages developers to try out new languages and frameworks to expand their knowledge and improve their skills.The speaker discusses their experience with programming languages, specifically their transition from JavaScript to Redux. They found Redux to be a refreshing change from the runtime exceptions they experienced with JavaScript. The speaker also discusses the importance of user experience in software development and how programming languages and tools should prioritize this aspect. They then delve into their frustrations with JavaScript, including its strange design and its use in various contexts beyond its intended purpose. Despite its flaws, JavaScript remains accessible to beginners due to its low entry price. The speaker concludes by emphasizing the importance of using programming languages and tools in real projects to truly understand their capabilities and limitations.The speaker discusses the advantages and frustrations of using JavaScript as a programming language. They note that JavaScript has a low entry price and is easy to use, but can be dangerous due to its dynamic typing and implicit conversions. The speaker also discusses the frustrations of configuring build tools and managing dependencies. They suggest using a language that compiles down to JavaScript, such as TypeScript, which has a more robust standard library and better type functions.The speaker discusses the benefits of Elm, a programming language that compiles down to JavaScript and has a strong type system. Elm's type system provides guarantees that eliminate runtime exceptions, and its error messages are helpful and easy to understand. Elm also enforces semantic versioning of packages, ensuring that breaking changes are properly labeled. Additionally, Elm includes an architecture that is useful for building large applications. The speaker emphasizes that Elm's static typing provides safety and ease of use, making it a valuable tool for developers.The speaker discusses the benefits of using the programming language Go, which allows for safe coding without the need for specifying copilot. Go eliminates issues such as null pointer exceptions, making refactoring easier with helpful compiler error messages. The speaker provides examples of error messages in Go, which are written in English and include the offending line of code, making it easier to identify and fix issues. Overall, the speaker is a believer in Go and its benefits for efficient and safe coding.The speaker discusses the benefits of using Papyrus, a tool for detecting type errors in code. Papyrus provides detailed error messages that include the line number and context of the error, as well as suggestions for how to fix it. The tool is easy to use and integrates well with the language. Papyrus also allows for easy testing of code by exporting error messages as JSON objects or test values. The speaker emphasizes that Papyrus provides a better developer experience and is a valuable tool for improving code quality.The speaker discusses the components of an application, including the model, view, and update function. They explain that the view is a function that takes a model and returns HTML, and that the update function changes the model based on messages generated by user interactions or API calls. The speaker emphasizes that these components are stateless and easy to test. They also mention using a functional programming approach, which they feel works well with this pattern. The speaker briefly demonstrates some HTML and JavaScript code.The video demonstrates how to use Elm to create interactive web applications. The presenter starts by explaining the basics of Elm syntax and then moves on to creating HTML elements using Elm. He then shows how to add interactivity to the application by defining a function to handle user input. The presenter also discusses the importance of using types to ensure that the code is correct and easy to maintain. Overall, the video provides a good introduction to using Elm for web development.The speaker discusses the benefits of using a functional programming language called Elm for web development. They highlight the smoothness and ease of use of the language, as well as its testability and system architecture. The speaker encourages developers to try using Elm, even if they don't use it exclusively, as it can improve their overall development experience. They provide links to resources for learning more about Elm and using it in web development. The speaker also offers a demo on their Github page with comments and code for others to use."
QjRFO3AMrUg,00:00:00,Product Ownership - what is it?,"In an world where agile teams keep popping up we hear the term Product Owner, but do we know what it means?\n\nHave you heard the term product owner? Have you every wondered what it is they own? Do you work with one? Do you want to be one?\n\nMore often Businesses are getting scrum masters to act as Product Owners or creating agile teams without a true Product Owner. How do we increase the understanding of how effective this role can be in an agile team in making sure we achieve the outcomes that customers love.\n\nThis talk will help you understand what a product owner is at it’s core and how to navigate the common challenges in both being one and working with one.\n\n--\nDonna Boyd\nDonna has worked across multiple roles in agile and product over the past 15 years. She spends her days obsessing over what she doesn’t know and filling the gaps. She doesn’t be claim to be an expert but more on a continuous learner that loves to share her journey with others.\n\nAish Srinivas\nI'm all about empowering diverse and inclusive teams to be at their best. My involvement within the WA community and my focus on the intersection between business, technology \u0026 social impact has led me to be a recipient of the Women in Technology WA Tech [+] 20 Award for 2020, and nominated for the Business News 40 under 40 Award for 2021.",Donna Boyd+Aish Srinivas,"Product Ownership is a term commonly used in agile teams, but many people may not fully understand what it means. Donna Boyd and Aish Srinivas discuss the importance of having a true Product Owner in an agile team and the challenges that come with the role. They emphasize the need to increase understanding of the role and its effectiveness in achieving customer outcomes. Donna has over 15 years of experience in agile and product roles, while Aish has been exploring the role for the past 10 months. They acknowledge that they are not experts, but are continuously learning and sharing their journey with others. The talk also pays respect to the traditional custodians of the land and thanks the sponsors for making the event possible. The speakers aim to address common questions and challenges related to Product Ownership and highlight its pivotal role in project success.an iterative approach where they would work on small increments and continuously gather feedback from customers. This led to the birth of agile methodology, which emphasizes collaboration, flexibility, and customer satisfaction. The product owner role was also introduced as a key player in the agile process, responsible for defining and prioritizing the product backlog, ensuring customer needs are met, and maximizing the value of the product. However, the product owner role can face challenges such as unclear expectations, conflicting stakeholder demands, and lack of authority. It is important to address these challenges and understand the different stakeholder types in order to be a successful product owner. Overall, the goal of this talk is to provide a better understanding of the product owner role and how to navigate the challenges that come with it.Agile methodology originated in the 1980s as a response to the traditional waterfall delivery approach. Instead of a relay race, agile operates in a rugby scrum format with regular communication and pivoting if necessary. There are about 50 different agile methodologies, including adaptive software development, rapid app development, and extreme programming. The most commonly used framework is scrum, which was inspired by the rugby scrum and introduced the product owner role. The agile manifesto, created in 2001, outlines four values and 12 principles for working in an agile way. Scrum is the most commonly used project management framework, followed closely by Kanban.The 14th annual report on project management frameworks highlights that Scrum is the most commonly used methodology, followed closely by Scrum-ban, a combination of Scrum and Kanban. Kanban is also widely used across different industries, not just for software development. A Scrum team typically consists of a Scrum Master, a Product Owner, and a Development Team, which can include any combination of roles needed to build the product. The Product Owner is accountable for maximizing the value of the product resulting from the work of the Scrum team. In larger organizations, the responsibilities of a Product Owner may be more focused, but in a true Scrum team, they must think about the vision and roadmap and be more empowered.In this video, the speaker discusses the role of a product owner in different agile methodologies, such as Scrum and Scaled Agile. They emphasize that the responsibilities of a product owner can vary depending on the organization and the project. The product owner is responsible for driving value and communicating the vision to both internal and external stakeholders. They work closely with the project sponsor, business analyst, and scrum master to ensure that the development team is delivering sustainable solutions that meet customer needs. The speaker notes that some organizations undervalue the role of the product owner and may ask one individual to take on both the product owner and scrum master responsibilities, which can create internal friction.In this video, the speaker discusses the importance of having separate roles for the Scrum Master and Product Owner in agile teams. The Scrum Master is responsible for advocating for the development team and ensuring sustainable delivery, while the Product Owner focuses on the customer's needs and product vision. Having one person do both roles can create internal friction and imbalance. The speaker also mentions the negative consequences of using anti-patterns, which are commonly used processes that have more bad consequences than good ones. The video includes a humorous clip to illustrate the importance of clear direction and leadership in a team.feel recognized and appreciated for their contributions. On the other hand, it's also important to avoid taking credit for everything and creating a culture of ego and self-importance. As a product owner, it's important to strike a balance between recognizing your team's contributions and taking ownership of the overall vision and direction of the product.

The next pattern is ""analysis paralysis,"" which refers to getting stuck in the planning and analysis phase and never actually moving forward with implementation. As a product owner, it's important to strike a balance between planning and execution, and to be willing to take calculated risks and make decisions based on imperfect information.

Finally, there's ""shiny object syndrome,"" which refers to constantly chasing after the latest trends and technologies without a clear understanding of how they fit into the overall product strategy. As a product owner, it's important to stay focused on the core vision and goals of the product, and to evaluate new ideas and technologies based on how well they align with those goals.As a product owner, it is important to give credit to the development team for their work and build a relationship with the customer. It is also important to lead the team towards success rather than managing them. Designing by committee can be detrimental to the decision-making process, and caring about the wrong metrics can lead to a focus on vanity metrics rather than the value being delivered. As a product owner, it is important to have a vision for the product and understand how it fits into the overall business. Decisiveness is also crucial in making effective decisions.Product owners need to possess certain traits such as strategic thinking, decisiveness, tenacity, passion, and storytelling skills. They lead the product vision and direction, communicate effectively with the team, customers, and stakeholders, and prioritize ruthlessly. They also advocate for the customer and ensure that user stories are accepted and done. To know if they are doing it right, they should see the value of delivery and receive requests for their product.a clear prioritization process in place and communicate it effectively to all stakeholders. This will help you evaluate new opportunities against existing ones and make informed decisions about what to pursue. It's also important to have a roadmap that outlines your product vision and goals, so you can show how new ideas fit into the bigger picture. Finally, be prepared to say no and explain why certain ideas don't align with your vision or priorities. This can be challenging, but it's necessary to stay focused and deliver value to your customers.The speaker discusses different types of people who can be difficult to work with in product development, including the Rhino who always wants the latest features, the Seagull who swoops in and blames everyone for problems, the Wolf who is always focused on fixing problems rather than delivering customer value, and the Zebra who is arrogant and has no evidence to back up their opinions. The speaker suggests strategies for dealing with each type of person, such as having a clear prioritization framework for the Rhino, bringing in a Scrum Master to deal with the Seagull, using a structured approach to tackle bugs with the Wolf, and showing evidence and data to convince the Zebra.The speaker discusses the role of a product owner and how to be successful in the position. They emphasize the importance of having evidence and data to back up decisions and being willing to test new ideas in a low-risk way. The speaker suggests that a zookeeper would make a good product owner because they understand the behavior of their animals or stakeholders and tailor their approach accordingly. Success as a product owner involves having a clear vision, a roadmap, a continuous backlog, measurable success metrics, and a one-pager to communicate the product's purpose. The speaker also stresses the importance of being 100% committed to the role and focusing on growth rather than perfection. The speaker recommends using Roman Pitcher's product management framework to continuously evolve and improve.As a product owner, it's important to focus on value and growth rather than perfection. Roman Pichler's product management framework can help you continuously evolve and improve. It's also important to be open to new opportunities and find a mentor within your organization. Inspiration and support can be found in product owner communities and from experts like Jeff Patton, Melissa Perry, Marty Cagan, and Roman Pichler. Common challenges, agile principles, stakeholder types, and getting started in the role are all important topics to understand. However, it's important to note that the product is actually owned by the team, not the product owner. There is much more to cover in this topic.Melissa Parry, author of ""The Build Trap,"" argues that the name of the product causes confusion. The team at Stretch owns the product and is responsible for driving its value. There is much more to cover on the topic of product ownership, and a second part is in the works. Feedback will help determine the direction of the next installment."
c0U5rYGbkj8,00:00:00,Is it done yet? (How about now?),"No matter how utopian your agile working environment, if you're building a commercial product, at some stage you will be asked the inevitable question - When will it be done? This talk will provide you with tools and techniques to use when you hear your manager say \",Michele Playfair,"Michele Playfair discusses the challenge of answering the inevitable question of ""when will it be done?"" in agile project management. She shares her experience of working on a team with deadlines despite being in an agile environment. She emphasizes the importance of understanding the context of the project and the external factors that may affect the timeline. Michele also provides tools and techniques to manage expectations and communicate effectively with stakeholders. She acknowledges the role of government legislation and other external factors that may impact the project timeline. Michele thanks the sponsors and volunteers of the conference and shares her excitement for speaking at the event.The speaker discusses the misconception that agile development means no deadlines. They explain that deadlines are still important and cannot be shifted just because a project is running late. The speaker gives examples of projects they worked on, such as making text digital for the UK HMRC and implementing Simple Abbess. They also mention the importance of adhering to deadlines for events like the Australian Open or company conferences. The speaker notes that the impression that agile development means no deadlines may come from companies like Spotify, Facebook, Google, Twitter, and Netflix, who are held up as great places to work but do not always announce new features with specific deadlines. However, the speaker emphasizes that deadlines are still important and that not meeting them can lead to customer dissatisfaction.The speaker discusses the negative connotations associated with deadlines, including the fear of burnout and the pressure to meet unrealistic expectations. They suggest that instead of focusing on improving estimates, which can be a waste of time, we should focus on minimizing waste and maximizing value for the customer. The speaker offers some ideas for coping with deadlines, including setting realistic goals and milestones, prioritizing tasks, and using agile methodologies. They caution against turning into the ""deadline guy"" and advocate for finding a better way to cope with deadlines.deliver a product, I might start with the user's goal of what they want to achieve with the product. Then, I would break down the major activities that need to happen to achieve that goal, such as signing up, creating a profile, and searching for products. Under each activity, I would list the specific tasks that need to be completed to accomplish that activity. This helps to create a visual representation of the user's journey and the steps needed to deliver a valuable product.

Another recommendation is to use relative sizing instead of estimating. This means comparing the size and complexity of tasks to each other instead of trying to assign specific time estimates. For example, you might say that one task is twice as complex as another task, or that one task is about the same size as two other tasks combined. This can help to create a more accurate understanding of the work involved and can also help to identify dependencies and potential roadblocks.

Overall, the goal is to focus on delivering value to the user in a predictable and transparent way, rather than spending excessive time on estimating and trying to make accurate predictions. By using techniques like story mapping and relative sizing, teams can work more efficiently and effectively to deliver high-quality products.The speaker discusses the concept of story mapping, which involves breaking down user activities into smaller, understandable components. This customer-focused approach allows for transparency and easy explanation to stakeholders. The speaker emphasizes the importance of starting with a ""good enough"" product and iterating based on customer feedback. They provide an example of using story mapping to meet a compliance goal and gradually adding more features. The speaker also mentions a third-party add-on for JIRA called easy agile story map for JIRA.The speaker discusses the use of JIRA and a third-party add-on called Easy Agile Story Map for JIRA, which allows for easier story mapping and remote collaboration. They also question the use of story points in agile planning meetings and suggest breaking down work into stories of similar size, either using the one to two big idea or having each story fulfill one acceptance criterion. The goal is to count the number of stories instead of worrying about their size. The speaker cites Ron Jeffries, the inventor of story points, who has since apologized for their misuse.The speaker discusses various techniques for simplifying agile project management. They suggest using acceptance criteria to ensure that each story fulfills a specific criterion and trying to make stories of similar size. They also recommend focusing on cycle time and throughput rather than just velocity, as shorter cycle times are likely to result in higher throughput. The speaker suggests using JIRA's control chart to monitor cycle time and recommends aiming for one to two days per story. Finally, they discuss forecasting techniques, including JIRA's burned-down chart and probabilistic forecasting, which takes into account past performance to predict future outcomes.Probabilistic forecasting is a method used in software development to determine the likelihood of completing a project by a certain date. It is similar to the way weather apps predict the chance of rain. The process involves analyzing historical data and using a tool such as the throughput forecaster, which is an Excel spreadsheet that automates the calculations. The spreadsheet requires inputs such as the number of stories remaining, the team's velocity, and the cycle time. The output is a chart that shows the probability of completing the project by a certain date. This method is useful for project managers who want to have a better understanding of the project's progress and the likelihood of meeting deadlines.The speaker discusses various techniques for managing work in an agile way while still dealing with the question of when the work will be done. They suggest using story mapping, story counts instead of story points, and focusing on throughput and cycle time rather than velocity. They also recommend using a Monte Carlo simulator called the throughput forecaster to estimate confidence as well as time. The speaker emphasizes the importance of inspecting and adapting these techniques to fit the context of each team. They provide a list of resources for further reading on the topic.The speaker has finished preparing their talk and is ready to take questions. However, they cannot do so until their microphone is turned on. Once it is, they will be ready to proceed."
PNsLcTBPbY0,00:00:00,Fun with Sensors and APIs for the web!,"Developments in Sensor \u0026 Browser Apis has opened up many opportunities for your website to react and respond based on the users device, environment or input. As of right now there are many great Sensor \u0026 Browser APIs that you can take advantage of including Light Sensors, Gyroscopes and Audio and because these APIs are all available in more devices than you would think they are more accessible than ever.\n\nIn this presentation we’ll talk through the possibilities, tools and resources as well as exploring some of my favourite features so you can get started creating engaging and creative effects, visualisations and experiences in your projects tomorrow.\n\nMandy is a community organiser, speaker, and developer working as a Development Manager at Seven West Media in Western Australia. She is a co-organiser and Director of Mixin Conf (http://mixinconf.com/), and the founder and co-organiser of Fenders (http://www.fenders.co), a local meetup for front end developers providing events, mentoring and support to the Perth web community.\n\nMandy’s passion is CSS, HTML and JS, she has a particular interest in web typography, accessibility and modern layouts, and hopes to inspire that passion in others. Mandy loves the supportive and collaborative nature of the web, her aim is to create a community of web developers who can share, mentor, learn and grow together.",Mandy Michael,"Mandy Michael, a front-end developer and Development Manager at Seven West Media in Western Australia, gave a presentation on the possibilities of using Sensor and Browser APIs for web development. She discussed the accessibility of these APIs, including Light Sensors, Gyroscopes, and Audio, and how they can be used to create engaging and creative effects, visualizations, and experiences in web projects. Mandy is passionate about CSS, HTML, and JS, with a particular interest in web typography, accessibility, and modern layouts. She demonstrated some fun examples of using speech recognition, device orientation, and ambient light sensors, but emphasized that they were just for experimentation and not serious applications. Mandy also mentioned that some of the examples may not have great browser support.The speaker discusses experimental technology that can be used in web development projects. They provide a support legend for each example, indicating the level of browser support. The first example is the Web Speech API, which allows for speech recognition and synthesis in web apps. The speaker demonstrates speech recognition by speaking into a microphone and showing how the API determines what was said. They then provide code examples for using the speech recognition constructor, start and stop methods, and event listeners for recognition status and results. The speaker encourages developers to explore and experiment with new technology in their projects.The speech recognition API is capable of returning multiple results and options, but for the purposes of this example, the focus is on the speech recognition alternative object, which contains the transcript of the text detected from the microphone. By updating the content on the results, the speech recognition object can be kept up to date. The API can be used for more than just printing text on the screen, as it can be used to create more interactive and engaging experiences for users who may not be using a keyboard and mouse. Device orientation is another feature of web-enabled devices that can provide information on the device's orientation, commonly seen in mobile devices to automatically rotate the screen.The device orientation feature found in web-enabled devices, such as mobile phones, uses a gyroscope or accelerometer to determine the device's physical orientation and provide information on it. This information can be accessed through the device orientation event and three properties called alpha, beta, and gamma. By checking for access to this information and adding an event listener, developers can create interactive experiences that are shaped by the user's physical movements. This allows for more personalized and unique experiences, giving users more control over their interactions with websites and applications. Device orientation can be used for a variety of purposes, including augmented reality, games, and UI effects such as parallax.The speaker discusses how the Speech Recognition API and device orientation can be used to create personalized experiences for users on websites. They also explore the use of the ambient light sensor, which can detect the amount of light in a room and be used to adjust the display accordingly. The speaker demonstrates examples of how the ambient light sensor can be used to create unique and interactive experiences for users, such as changing the background color or brightness of a website based on the lighting in the room. They emphasize the versatility of using the five senses in web design and encourage experimentation with these technologies.The speaker demonstrates the use of an ambient light sensor to control the weight and style of fonts on a webpage, depending on the brightness of the room. This allows for a better user experience and readability. The speaker encourages creativity and innovation in web development, using new APIs and technologies to create unique and exciting experiences for users. They showcase examples of using the ambient light sensor to create puzzle games and interactive experiences, such as a game where the user must use a flashlight to find hidden messages. The speaker emphasizes the potential for web development to continue to evolve and create new experiences for users.The speaker suggests that when considering what to do, one should think about creating funny experiences for users. This can be achieved by using cats as inspiration."
4XVNZUpAMUw,00:00:00,Creating a ‘best place to work’ culture,"Being a leader in a ‘best place to work’ has many advantages. It’s easier to attract the best talent, employees are engaged and more productive, employees collaborate and actively contribute to making your company better and more successful.  \n\nBut where do you start? How do you create this type of environment? In this talk I will take you through some practical advice on how to create and implement strategies to turn your organisation into a ‘best place’.",Donna Edwards,"Donna Edwards, an experienced IT industry professional, shares practical advice on creating a 'best place to work' culture in this talk. She emphasizes the advantages of being a leader in this area, including attracting top talent, increased productivity, and employee collaboration. Donna provides insights on how to build a culture that is deserving of an award, rather than just winning an award. She highlights the importance of creating an environment where people can connect, learn, inspire, and achieve. Donna also stresses the significance of being the best place to work in the current job market, where there is a huge war for talent. She challenges the notion of work/life balance and believes in creating an environment where work is enjoyable and fulfilling.The speaker believes that work-life balance is not achievable and instead advocates for work-life integration. She shares a personal story of getting hit by a car at 17 years old and realizing that life can be taken away in an instant. This experience has shaped her perspective on the importance of living life to the fullest and not waiting for a perfect balance between work and personal life.The speaker shares a personal experience of a near-death accident that has shaped her perspective on life. She believes that life is short and we should make the most of it by doing what we enjoy and making a difference in the world. She recommends tools like Simon Sinek's Golden Circle model and the book ""How to Find Your Why"" to help identify passions and purpose. She encourages trial and error in pursuing different careers and finding sideways moves within or outside of a company. The speaker also recommends finding a job with problems that you enjoy solving, as our brains love solving problems. She emphasizes that it is our own responsibility to make ourselves happy at work and discusses the concept of locus of control. The speaker's main point is about building a best place to work culture, but she only briefly touches on it.attended Patrick's talk on toxic developers, you may have heard about the concept of internal versus external locus of control. Essentially, having an internal locus of control means that you have the power to control your actions, reactions, and behaviors, while an external locus of control means that you tend to blame external factors for your problems. As employees, we have the power to make our workplace a better place, and we should take ownership of that responsibility rather than relying on HR or managers to do it for us.

Winning a culture award, such as the BRW Best Place to Work award, can be a valuable tool for attracting top talent, especially in the tech industry where companies are competing for candidates from all over the world. The award provides tangible evidence of a company's positive culture and can increase acceptance rates for recruitment efforts. To win the award, companies must have a high completion rate on an anonymous culture survey and provide detailed information on how they approach various aspects of their workplace culture.

Overall, it's important to remember that we have the power to create a positive work environment and attract top talent through our actions and attitudes.The speaker discusses the process of creating a great workplace culture and how to participate in a survey to be recognized as a great place to work. They emphasize the importance of real-life examples and stories from employees, rather than just policies and procedures. The six main areas that make a great workplace are culture, communication, employee recognition, transparency, career progression, and innovation. The speaker suggests involving employees collaboratively in creating shared values and beliefs, and rewarding the behavior that aligns with those values. They also share personal experiences of successfully implementing these strategies in previous companies.speaker discusses include shared values, rewarding desired behavior, and storytelling to drive culture and behavior. She emphasizes the importance of having good leaders, regardless of title or position, and provides tips for leadership training and development. The speaker also mentions resources such as local training companies and government-subsidized courses.The speaker works with a company called Coach Connect, which offers coaching for self-development and improvement. As a leadership team, they need to focus on autonomy, mastery, and purpose, and set the vision for where they are going and why. They should provide empowerment and ownership for the team to figure out how to get there, while the leadership team supports them. Task-driven jobs are being replaced and younger generations are not interested in them, so it needs to be more than that. Providing ownership and empowerment also eliminates the need for flexibility conversations. Transparency and clear expectations are important, and Ratify has a high level of transparency with an intranet that can be edited by anyone and reports on all financials. Decision-making is collaborative and open through Yammer. Flatter structures are becoming more popular in new company design. Empathy and emotional intelligence are crucial for leaders, and great leaders look to replace themselves by mentoring and upskilling people around them.The traditional linear career pathway where individuals had to protect their roles is no longer relevant. Leaders should mentor and upskill their team to replace themselves, as new jobs are created every day. Leading by example and practicing what you preach is crucial to building trust and respect. Doing what you say you will do and being authentic and genuine are important traits. People are the most important part of any business, and hiring great people is a challenge. Hiring for culture fit can be an excuse to hire people who are similar to oneself, so it is important to create structure and real interview questions around values and beliefs. Creating a best place to work culture and hiring great people has increased referral hiring rates over 50%.The speaker discusses the importance of creating a best place to work culture by hiring great people and increasing referral rates. They also emphasize the value of helping employees with their personal branding and getting involved in community engagement to build your own employee brand. The speaker suggests creating a role of a dream manager to help employees with their career and life goals. They also stress the importance of diversity in the workplace and provide statistics showing that companies with diversity perform better financially. The speaker recommends educating teams on the benefits of diversity and providing unconscious bias training.The speaker emphasizes the importance of diversity and unconscious bias training in the workplace. She shares her own experience of realizing her unconscious bias when a speaker referred to a lead engineer as ""she."" She encourages healthy conflict and debate to come up with better solutions and calls for calling out biases and inappropriate behavior. The speaker also highlights the importance of inclusivity, such as providing prayer rooms, breastfeeding spaces, and paid maternity and paternity leave. She mentions the Workplace Gender Equality Agency and a job board called Work 180 as resources for creating an inclusive workplace. Lastly, the speaker advocates for flexibility for everyone, not just women or parents, to create a norm of diversity and flexibility in the workplace.The speaker advocates for creating a workplace environment that embraces flexibility and diversity as the norm, not just for women or parents. She believes that career development needs a complete redesign, but in the meantime, clear, transparent, and objective processes are necessary for employees to have control over their career paths. The speaker also emphasizes the importance of making salary conversations easier and more structured, providing salary bands or information to help employees with the conversation. She suggests modernizing performance reviews by using the retro process, which focuses on improving and learning through regular touchpoints. Finally, the speaker stresses the importance of collaboration and connection in the workplace, creating a structure for connection points and regular catch-ups to make employees feel valued and part of a community.The speaker discusses the importance of creating a sense of community within a company. Regular touch points and communication methods should be established to make it easier for employees to connect with each other. Group collaboration opportunities should be created, taking into consideration the different schedules and needs of employees. Team-building events and social club events can also help foster a sense of community. Engaging employees' families is also important, as they provide support during tough times. Finally, creating a culture of gratitude and recognizing great work through a recognition wall or awards program can help boost morale and create a positive work environment.The speaker suggests implementing a recognition wall with a shout-out feature to regularly acknowledge and reward employees for their contributions. This can tie into an awards program with tangible rewards given out at the leadership team's discretion. The ROI for a best place to work award can be significant, as it was a factor in the speaker's organization winning such an award. The speaker encourages listeners to continue improving their workplaces to create a better environment for employees."
fBRIgyhPRq0,00:00:00,Lessons from the Video Game Industry,"Video Game developers tackle some of the most challenging problems out there in software. From design, to planning to implementation.\n\nJoin me for a highlight reel of the techniques they've used and the lessons they've learned, distilled down from years of Game Developer Conferences.\n\nWe'll hit topics like:\n\n* Using contagion as a key measure in tech debt taxonomy\n* Key strategies to employ when facing 5-10x scaling events\n* Managing the implied promise of your product\n\nNo experience necessary\n20 mins\nCore/Non Technical Skills\nIn the consulting world I'm a bit of a hyper generalist. I've worked on anything from micro-controllers, to mobile apps to cloud architecture.\n\nBut my real passion is strategy and communication.",Jamie Butler,"Jamie Butler, a lead consultant at Telstra Purple, discusses the valuable lessons that can be learned from the video game industry. She highlights the Game Developer Conference (GDC) in San Francisco as a great resource for learning about leadership, business building, UX development, and software development techniques. One lesson she learned from GDC is the concept of ""cursed problems,"" which are design problems that cannot be solved. It is important to identify these problems early on to avoid wasting resources and dragging the team along for the ride. Another lesson is the use of contagion as a key measure in tech debt taxonomy. Additionally, she discusses strategies for managing the implied promise of a product and facing 5-10x scaling events. Overall, Butler emphasizes the value of GDC as a resource for learning and encourages others to consume its content.productivity and slow down your development process. However, he argues that these tests are crucial for catching bugs early on and preventing them from becoming bigger issues down the line. He also emphasizes the importance of testing not just the happy path, but also edge cases and potential failure scenarios. Overall, the talk emphasizes the importance of a strong testing culture in tech development.The video discusses various lessons from the game industry, including the importance of tagging slow tests and running them overnight to avoid bloating test Suites runtime. The talk also covers critiquing game visuals and common problems in design, such as saturation, and how to solve them. Finally, the video touches on cultivating a positive culture in your business, with lessons on how to charm your communities and create a positive work environment.Victoria Tran, from Innersloth, gave a talk at GDC about cultivating a positive culture within a community, which can also be applied to building a positive culture within a company or team. She emphasized the importance of surprise and levity, connectivity and empathy, and rapport building. Isabel McCord and David Richard from Behavior Interactive discussed their monetization strategy for their game, Dead by Daylight, and emphasized the importance of respecting users and not exploiting them. They also emphasized the importance of ensuring that the core product is enjoyable on its own and that paid features should only add aesthetic value. The key lesson was that respectful monetization design helps to gain user buy-in.The speaker discusses the value of attending the Game Developers Conference (GDC) and highlights some key lessons learned from the event. One lesson is the importance of respectful monetization design, which can help get buy-in from the development team and lead to a more engaged and productive workforce. Another lesson is the value of data-informed decisions, as demonstrated by the analysis of popular League of Legends champions. The speaker encourages viewers to search for GDC videos on YouTube, which cover a range of games and provide entertaining and informative insights into game development.The speaker recommends searching for GDC Vault on YouTube for access to content that is more general and applicable to product development, as opposed to the more technical content behind their paywall. The speaker thanks their sponsors and invites any quick questions before concluding the talk."
BKyEHYN1Ob4,00:00:00,Understand Functional Programming in 40 Minutes,"Functional programming is becoming increasingly important as we build more complex systems and use more parallel and concurrent programming.  It’s also now present and being used more in mainstream languages like Java, C#, Swift and Javascript so it can no-longer be ignored by developers.  \n\nHave you tried to understand functional programming but been completely bamboozled?  Or do you know what a function is and understand the basics of functional programming but wonder what’s with all the other stuff?  It’s most likely the big picture hasn’t been explained, or at least not clearly enough.\n\nThis talk will give you a clear conceptual overview of functional programming with simple examples so that you will really get what it’s all about.  There are consequences of only using functions and this is what makes functional programming very different from other programming paradigms.   \n\nThis talk won’t use terms like functor, applicative, or monad but by the end of the talk you will definitely understand them.  It also won’t make you a functional programmer overnight but it will give you a conceptual framework to know what you need to do and why when doing functional programming.  \n\nThe presenter has more than twenty years experience explaining complex technical concepts in clear and simple terms.  \n\n(* not really but you’ll certainly get your money’s worth and more)",Ashley Aitken,"Ashley Aitken presents ""Understanding Functional Programming in 40 Minutes"", highlighting the importance of functional programming in building complex systems and its increasing use in mainstream languages like Java, C#, Swift, and Javascript. The talk aims to provide a clear conceptual overview of functional programming with simple examples, explaining the consequences of only using functions and how it differs from other programming paradigms. The talk does not use technical terms like functor, applicative, or monad, but by the end, the audience will understand them. Ashley Aitken has over 20 years of experience explaining complex technical concepts in simple terms. The talk covers the introduction and overview, fundamentals, intermediate, and advanced functional programming. The speaker encourages the audience to provide feedback on where they got up to after the talk.functions. It is a programming paradigm that focuses on the use of pure functions, which means that the function's output is solely determined by its input, and it does not have any side effects. Functional programming is a declarative approach to programming, where the programmer specifies what they want the program to do, and the computer figures out how to do it. 

There are two big groups of programming paradigms: imperative and declarative. Imperative programming tells the computer what to do, while declarative programming focuses on what the programmer wants the program to do. Functional programming is a member of the declarative group. 

Functional programming languages are pure or hybrid. Pure functional languages only do functional programming, while hybrid languages, like C++ or Java, try to do multiple paradigms. Haskell is an example of a pure functional language. 

Functional programming is not a new concept, as it has been taught in high school or university through functions like y = x + 3. The unique aspect of functions is that for every value of the variable X, you only get one value of the function. 

In summary, functional programming is a programming paradigm that focuses on the use of pure functions and declarative programming. It is a way of programming that specifies what the programmer wants the program to do, and the computer figures out how to do it.Functional programming is programming with the computational equivalent of mathematical functions. Pure functional programming means using only functions and not using object-oriented or procedural type stuff. Functions in functional programming may not just return one value, they may do other things as well. Haskell is a programming language that uses functions, and function definitions in Haskell use variables that are variable types. Functions can have multiple parameters and can be written in different ways. Functional programs are short and not complex. In functional programming, functions are applied using an arrow notation.Functional programming is a programming paradigm that focuses on functions as the primary building blocks of software. Functions are pure, meaning they don't affect anything outside of themselves and can't depend on anything outside of themselves. This leads to referential transparency, where expressions can be evaluated and replaced by their values without changing the program. Functional programming is based on expressions and values, rather than statements and state manipulation. Recursion is favored over loops. The benefits of pure functional programming include easier reasoning, debugging, and maintenance of programs.Functional programming is a different paradigm that offers many benefits, such as easier debugging and maintenance, higher level abstractions, and easier parallel or concurrent programming. However, there is a steep learning curve and a lot of terminology to learn. Functional programming languages like Pascal and F-sharp provide structures to support functional programming, such as first-class functions and algebraic data types. Algebraic data types break data types into a cross-product or union of values, making it easier to reason about and manipulate data. These data types are not like object-oriented classes and are called type constructors.This transcript discusses the concept of algebraic data types, immutability, and polymorphic functions in functional programming. It explains that algebraic data types have two aspects, and they allow for recursive data types. Immutability means that once something is initialized, it cannot be changed, but new values can be created. Polymorphic functions can take in different types of data. The transcript also introduces the concept of type classes, which are similar to interfaces in object-oriented programming.This video discusses type classes in functional programming, which are similar to interfaces in object-oriented programming. Type classes define a set of functions that a data type must implement in order to be considered a member of that class. This allows for ad hoc polymorphism, where algorithms can be written using the interface without regard for the specific data type. However, this approach can be limiting when side effects are necessary, such as input/output or global state. The video provides examples of how to handle exceptional circumstances and random values within a pure functional programming paradigm.discusses the concept of handling exceptional circumstances in functional programming. The speaker introduces the data type ""maybe"" or ""option"" which allows for a value to be either a result or nothing. They demonstrate how to define a function called ""safe square root"" which takes a floating-point number and returns a maybe data type. If the input is greater than 0, the function returns the square root wrapped inside the maybe data type. If the input is negative, the function returns nothing. The speaker explains that this approach allows for handling exceptional circumstances without compromising the purity of the function. They also introduce the concept of a value in a context and provide examples of contexts such as lists, errors, and maybes. The speaker then discusses the problem of trying to apply a function to values inside a context and introduces the function ""f map"" as a solution.The video discusses the concept of functors in functional programming. Functors allow functions to be applied to values in different contexts without having to manually extract and re-wrap the values. This is achieved through the use of the F map function, which takes a function and a value wrapped in a context (such as a Maybe or List) and returns the result wrapped in the same context. Functors are defined as a type class, which specifies that a data type must implement the F map function. This allows for higher-level abstractions and algorithms that can work with any data type that implements F map.This video discusses the concept of functors and monads in functional programming. Functors are data types that implement the F map function, which applies a function to a value in a context and returns the result in the same context. This allows for higher level abstractions that can work with any data type that implements F map. Monads are a type class that defines a bind function, which allows for composition of functions that produce values in a context. The video provides examples of how these concepts can be applied to the Maybe and List data types. Overall, functors and monads are important tools for creating reusable and composable code in functional programming.Monads are a useful tool in functional programming that allow for binding values into a function that doesn't expect values in the data type. This can simplify complex code and make it easier to read and maintain. Haskell allows for the use of syntactic sugar, such as the use of operators for function application and binding, which can make code look more like imperative programming but still be pure declarative functional code. Monads also allow for preserving function composition, which is important in functional programming.The video discusses the concept of monads in functional programming. Monads are a way to handle context and sequencing of operations in a program. The bind function is used to compose functions and preserve their context. Monads make computation a first-class entity, allowing for control over the process of calculating something. Monads also enable computations to be isolated from side effects and non-determinism, making them purely functional. Different types of monads include maybe, error, list, input/output, promises and futures, writing to a log, reading configuration, and global mutable state. Monads are considered one of the most important new ideas in programming languages in the last 25 years.The video discusses the use of monads in functional programming to handle side effects such as non-determinism, returning multiple values, and input/output operations. Monads allow for functional purity while supporting these side effects. The writer monad is used as an example to demonstrate how a function can write to a log without breaking functional programming principles. The IO monad is also discussed as a way to handle input/output operations in a purely functional way. The video provides an example of how to write a main function in Haskell using the IO monad.This transcript discusses the use of monads in functional programming, which allows for input/output in a purely functional way. Monads are a type class that implements the bind function, which captures side effects in algebraic data types and enables functions to remain pure. Monad transformers allow for layering of monads on top of each other for high-level abstractions. Functional programming languages use immutable and abstract data types, and implement side effects using monads. While functional programming has many benefits, it also has its own problems and requires a different way of thinking compared to procedural or object-oriented programming.The speaker discusses the use of immutable and abstract data types in functional programming, and the implementation of side effects using monads to maintain the functional programming paradigm. They acknowledge that functional programming is not a panacea and has its own complexities and terminology, but it has real-world applications and is likely to be the future of programming. The speaker recommends resources such as diagrams.net, ad it2 IO, and wikibooks for those interested in learning more about functional programming. No time is available for Q&A."
cUPtZY_zF6c,00:00:00,A pet project? A list of humanity&#39;s big challenges,"It's your well earned time off, an evening or a weekend - yet you are at your keyboard, in the flow, working on your side project, devouring whatever skills and new tech your goal demands, and getting an endorphin kick from seeing results of your efforts along the way. It runs! It does something! And I created it!\n\nNot only it's the best feeling ever it also makes you better at your job and a more interesting person; people are drawn to driven, passionate people. But it's not easy to pick something that is really... really worth all that time and focus, is it? \n\nHave you started on a website for a local public speaking club and after few months of work felt.. underwhelmed? Or perhaps have you tried to dip your toe into a new technology, like machine learning, and raise your eyebrow at the number of tutorials on how to distinguish tomatoes from grapes or kittens from cars? Yet - we forget there are those nasty problems that we all face as humanity, like climate change, health or equal rights.\n\nThey do sound monstrous and abstract, but we did our research and split them into bite-size pet projects, actionable and inspiring.  We believe - we can all make this world a better place - by following our passion, leveraging technology and having fun!\n\nWe are two data analysts from Perth, and while every problem does resemble \",Rimma Shafikova &amp; Diana Mozo,"Rimma Shafikova and Diana Mozo, two data analysts from Perth, discuss the challenge of finding a worthwhile side project. They suggest tackling one of humanity's biggest challenges, such as climate change, health, or equal rights, which they have researched and split into actionable and inspiring pet projects. They introduce the Millennium Project, a non-governmental and non-profit think-tank that maintains a list of humanity's biggest challenges. They use a visualization of an average Australian lifespan split into weeks to emphasize the limited time we have to make a difference. They encourage viewers to choose to work on one of these challenges with their limited time.The organization mentioned in the video is non-governmental and non-profit, and they work to identify the top challenges we face and put them into a framework that anyone can work with. The managing director of the organization was thrilled to know that the video would be shared with experts. The video emphasizes the importance of taking action to leave the planet a little bit nicer than we found it, and encourages viewers to find inspiration in their passions and interests. The speaker suggests that machine learning could be a way to make a difference, and recommends the work of Hans Rosling, the founder of Gapminder Foundation, as a source of inspiration. The video also touches on the misconception that saving poor children will lead to overpopulation, when in fact it is necessary to end population growth.their food waste per capita. We can see that some countries have much higher levels of food waste than others, and this can provide insights into where interventions may be needed to reduce waste and improve efficiency.

Moving on to simulations, we can use this approach to model the potential impact of different interventions. For example, we can simulate the impact of increasing access to modern contraceptives on population growth. By using data on contraceptive use and population growth rates, we can create models that show how different levels of access to contraceptives could impact population growth in different regions of the world.

Finally, predictive modeling can be used to forecast future trends and outcomes. For example, we can use data on disease outbreaks to create models that predict how a disease may spread in different scenarios. This can help public health officials prepare for potential outbreaks and take proactive measures to prevent the spread of disease.

Overall, the data science framework provides a structured approach to tackling complex problems and finding solutions based on data and evidence. By using this approach, we can make informed decisions and take actions that have a real impact on the world around us.The Agriculture Organization of the UN has used a free tool called Toggle Public to plot population growth and waste increase over time. Average waste per capita has also been steadily increasing, allowing for comparisons between countries with different populations. In Australia, 20% of food produced nationally is wasted before it reaches supermarkets due to consumer and beauty standards. Additionally, one-third of food is wasted at home due to overbuying and overcooking. Simulations, such as agent-based modeling, can be used to observe the behavior of a system by setting simple rules for individual agents. Schelling's segregation model is a popular example of this type of modeling, which shows how mild individual preferences can result in a segregated society. This phenomenon can also be observed in reality, such as in Melbourne where income levels are segregated by neighborhood.This talk discusses agent-based modeling and its ability to simulate societal patterns and segregation. The speaker uses examples from Melbourne, Chicago, and Detroit to show how income and race can lead to clear separation lines in neighborhoods. The speaker then applies agent-based modeling to the sensitive topic of refugee integration and assimilation, using assumptions about assimilation and procreation rates to create a simulation. The speaker emphasizes the importance of being an advocate and having informed opinions in conversations about societal issues. The talk briefly touches on machine learning and its ability to allow computers to learn without being explicitly programmed.Machine learning is the ability for computers to learn without being explicitly programmed. It is being used to address issues such as identifying those who need welfare assistance in developing countries where infrastructure and corruption pose challenges. The Costa Rican government is using machine learning to classify houses as extremely poor or not, based on 142 features such as the type of flooring and the main provider of the household. Data collection and cleaning is a significant part of the process, taking up about 80% of the time, while machine learning algorithms make up the remaining 20%. Human experts are still crucial in identifying signals in the data, and it is essential to understand the data and its correlations before applying the model. There are various algorithms and tools available to search for signals in the data, such as mind maps from scikit-learn.The speaker discusses the importance of understanding data and choosing the right algorithm to analyze it. They suggest using a tool called BigML, which offers a visual representation of the data and allows for easy model building and evaluation. The speaker demonstrates how to use the tool to build a decision tree for a classification problem and evaluate its performance using a confusion matrix. They also discuss the importance of choosing the right metrics for the problem at hand, such as high recall for identifying households in need of assistance. The speaker concludes by encouraging the audience to use this knowledge to build their own machine learning algorithms using tools like Python.The speaker discusses machine learning algorithms and their applications in solving global challenges. They mention participating in a data science competition and encourage others to join similar platforms. The speaker also highlights specific challenges they attempted to solve, including balancing population growth and resources, reducing ethnic conflicts and terrorism, and reducing the gap between rich and poor in developing economies. They provide a Github page with resources and mention a potential hackathon organized by the Millennium Foundation and UN in Perth next year."
qyRAPIBvIG4,00:00:00,Building a conversational user interface,,Norman Noble,"Norman Noble, a technical practice manager at Seek, gave a talk on building a conversational user interface. He thanked the sponsors and organizers of the event and the audience for attending. He explained that conversational user interface is a way for computers to communicate with humans on their terms, using natural language. He mentioned that there are two broad areas of conversational user interface: voice assistants and chatbots. He also mentioned that many companies are investing in this area.The speaker discusses the rise of voice assistants and chatbots, focusing on conversational user interfaces. They note that while voice assistants like Siri and Google are popular, they find them clunky and limited in their capabilities. They then delve into chatbots, distinguishing between command-line interfaces and conversational user interfaces. The speaker explains their personal interest in building chatbots, citing influences like Star Trek and a professor at Georgia Tech who created a chatbot teaching assistant. They also discuss professional reasons for building chatbots, such as improving customer service and automating tasks.The article discusses a program developed by Professor Ashok Goel at Georgia Tech to handle the 10,000 queries he receives each year from his 300 students. He has a team of technical assistants (TAs) who handle the bulk of the work, but last year a new TA named Jill Watson stood out for her quick and accurate responses. It was later discovered that Jill Watson was actually IBM Watson, a trial program that had been monitoring the flow of questions and material for the first three months of the year before being unleashed to answer questions with 97% certainty. The article also touches on the human-machine relationship, citing examples of people becoming attached to their hardware and even physical robots used in bomb disposal teams.The speaker discusses the relationship between people and technology, specifically the potential for conversational user interfaces to simplify complex tasks. They give examples from their work at Seek, including using a conversational interface to schedule meetings and provide feedback. The speaker notes that traditional methods for these tasks can be frustrating and time-consuming, leading to a lack of engagement from users. By simplifying these processes through conversational interfaces, the speaker believes that people will be more likely to engage and provide feedback in a timely manner.The speaker discusses potential uses for a conversational user interface in the workplace, including providing positive feedback, accessing company information, and improving internal efficiencies. They mention their company's biannual hackathon as a way to develop and test ideas, and note that previous hackathon projects have made it into production systems. The speaker also suggests using Slack as a platform for the conversational interface, as it is already widely used in their workplace and has useful integrations with other tools.The speaker recommends using Slack as an integral part of collaboration within a company. They initially tried working with the Slack API, but found it challenging and not related to what they were trying to build. They then discovered a chat library called Valk, which allowed them to design their chat system with the concept of conversation in mind. However, they found the interface limited and not able to understand natural language. They explored natural language processors and ended up using API AI, which they found to be simple to use and provided good results. The speaker demonstrates a quick demo of the various bits and pieces, including building a bot in Slack.The speaker demonstrates a bot he created for Slack that collects information and triggers an API. He explains that creating a bot in Slack is easy and can be done by signing up for a free account. He then shows how he architected the bot as a node service that listens for key phrases and triggers the API with the collected information. The code for the bot is available on Github as an open source project. The speaker briefly goes through the code, highlighting the important parts such as the events the bot listens for and the checks it performs to ensure it is not hearing itself or responding to irrelevant messages. Overall, the speaker provides a quick demo of his bot and the process of creating a bot in Slack.The transcript discusses the Heidi bot kit, which is a framework used to start, maintain, and build a conversation. The bot kit is similar to writing a choose-your-own-adventure story, where the user engages in a conversation and the bot responds in a conversational style. The goal is to make the bot seem more human-like to the user. The transcript also mentions some challenges with the API and documentation, but the team is working on fixing those issues. Overall, the Heidi bot kit is a useful tool for creating chatbots that can engage in conversations with users.team is working on integrating an encrypted database with AWS to reduce friction in organizing meetings. However, they encountered a problem with default settings in Seek Exchange, which defined a working day from 1am to 12pm. To address this, they are working on fixing the underlying systems. The team also explored using entities, intents, and contexts to improve their communication with their system. Entities refer to anything in their domain, such as a production secret, while intents define what the user is trying to say. By defining entities and intents, the system can understand different ways of saying the same thing and provide more variety in responses.intent and context in their interface, which allows for more sophisticated conversation flow. The system reads messages and determines the user's intent based on pre-defined statements. It also monitors the conversation history and provides a history tab for review. However, it is important to be careful when training the system, as it can become confused with a broader domain. The API AI service sends a request and returns an action based on the intent, which can be used to channel the conversation. The concept of context is also important, as it allows for the retention of information and smoother conversation flow.The speaker discusses the concept of context in programming and how it is difficult for computers to retain context like humans do. They mention API AI's ability to create input and output context for intents and entities. The speaker also shares their experience with learning about AI and how it has progressed to artificial narrow intelligence (ANI) and artificial general intelligence (AGI). They recommend exploring the topic but caution that it can get complicated quickly.discuss artificial intelligence, specifically the different levels of AI, including AGI and ASI. The speaker notes that while AGI is already being integrated into daily life, ASI is the more concerning level of AI that could potentially lead to a Skynet-like scenario. The speaker also discusses the challenges of debugging conversational AI and the moral debate surrounding whether or not to disclose that a user is talking to a bot. The potential for AI in various industries, such as airlines and food delivery, is also mentioned. The speaker concludes by noting that psychology will play a significant role in the design of AI interfaces.The speaker discusses the potential for psychology to play a role in UX design, particularly in terms of communication and behavior. They mention the use of program interfaces and the possibility of psychologists being involved in their development. The speaker also briefly discusses their experience with different software libraries and their interest in creating a proactive feedback system. However, they acknowledge the potential ethical concerns around monitoring user interactions and the need to carefully consider the implications.The speaker discusses using a product called Hotjar to monitor user interactions and gain a better understanding of how people interact with a website. However, they acknowledge that there are ethical implications to consider and that there is a debate surrounding the use of such tools. They are currently focused on getting the product to work and have not fully explored the ethical implications."
BCX0AA1CFqM,00:00:00,How to be Productive When Working Remote,"Working remotely is often a great way to work smarter, not harder. But what are the downsides? What can you do that will help your productivity? \n\nThe speaker shares their experience of working remotely for 5 years with their team (before the pandemic made it cool) and learns about how distractions and lack of distractions affected mental health and productivity - and how finding ways around these challenges has been crucial to success.\n\nNo experience necessary\n45 mins\nCore/Non Technical Skills\nMing Johanson works with businesses across the globe from training social media to managing (with her team) complex digital strategies that deliver tangible and desirable financial returns. She is dedicated to shaping the landscape for leaders to adapt their management, sales and marketing culture to fit into the modern day world of hyper-connectivity.\n\nRecently recognised and awarded for her ongoing contribution to the technology industries in the 2019 Women In Technology Tech [+] 20 Awards. Ming is a passionate mental health Ambassador for R U OK? Day, a co-facilitator in Startup Weekend Perth and a regular Australian Media Commentator as a Tech Evangelist on a range of topics in Mental Health, Social Media \u0026 Technology.",Ming Johanson,"Ming Johanson, a CEO of her own business, shares her experience of working remotely for five years with her team and how finding ways around distractions and lack of distractions has been crucial to success. She discusses the benefits of remote work for both employers and employees, the challenges of remote work, healthy boundaries in communication, and adapting the environment. She also shares some final notes and lessons learned from the pandemic. Ming is a passionate mental health Ambassador for R U OK? Day and a co-facilitator in Startup Weekend Perth.The speaker discusses the benefits of remote work, including increased coverage for employers, a larger pool of potential employees with diverse work styles, reduced fixed costs, and less time spent commuting for employees. They also mention the importance of setting boundaries and avoiding distractions while working remotely. The speaker emphasizes the importance of nurturing and supporting employees, allowing them to work according to their own biorhythms and pursue their hobbies.Working from home can lead to distractions and procrastination, but it's important to be gentle with yourself and not judge yourself too harshly. Regular check-ins with your team and non-work conversations can help close the distance between team members working in isolation. It's also important to work to your own flow and remember that different communication styles and neurodiversities exist. Designating a workspace and having activities for breaks can help maintain healthy boundaries between work and home life. It's important to remember that work time and home time is a choice and to prioritize healthy meal prep, especially for neurodiverse individuals.The speaker emphasizes the importance of prioritizing mental health and wellness in the workplace, especially for neurodiverse individuals who may struggle with hyperfixation and neglecting self-care. They also discuss the challenges of remote work during the pandemic and the decision to employ their team for security and stability. The speaker also addresses the toxic nature of the word ""overachieving"" and the importance of aligning values with clients and team members. No questions were asked during the presentation.six more hours of work per week than people who work in an office and that's because you don't have that physical separation between work and home life. So if you find yourself constantly working, constantly checking emails, constantly thinking about work even when you're not working, that's a sign that you might have a toxic relationship with overachieving. It's important to set boundaries for yourself, to take breaks, to prioritize self-care, and to recognize that your worth is not solely based on your productivity. It's also important to seek support from friends, family, or a therapist if needed.The speaker discusses the toxic relationship with overachieving and how it can be recognized in oneself. They mention indicators such as pushing oneself too hard, consuming excessive caffeine, missing meals, and not having healthy boundaries between work and home life. The speaker also touches on the neurodiversity side of things, including delay aversion and procrastination. They discuss how their internal dialogue is often centered around catastrophic failure due to their PTSD. The speaker also mentions the idea of a four-day workweek and how their remote team is working towards implementing it by figuring out what the day off looks like and considering community engagement. They also mention the importance of cost management and charging enough for their services.The speaker discusses the challenges of cost management and transitioning from a sole trader to a company. They mention the importance of charging enough and prioritizing tasks. The speaker also talks about their love for helping people and the need to set boundaries. In response to a question about developing trust in remote work, the speaker suggests hiring people you trust and focusing on value alignment. They also recommend asking how to support employees rather than being aggressive.The speaker emphasizes the importance of supportive communication in the workplace, particularly when employees are struggling with something. They suggest asking how to support employees rather than blaming them for not doing something. The speaker also highlights the importance of not treating employees like criminals, as this can make them more likely to leave for a better employer. In terms of communication styles, the speaker suggests asking the other person how they prefer to receive information and adapting accordingly. They also mention the importance of building processes and standard operating procedures, regularly reviewing and updating them to keep up with changing technology.The speaker discusses the importance of standard operating procedures in their business and the need to regularly review and update them due to the rapidly changing technology in their industry. The speech concludes with a request for applause and thanks to the event coordinator."
klBLyVR56I8,00:00:00,Machine Learning to Diagnose Childhood Brain Tumours,Brain tumours are currently the number one cause of cancer related death in children worldwide. The current method of identifying childhood brain tumours is problematic at best and useless at worse for remote and budget limiting healthcare locations. But perhaps machine learning holds the key to speed and cost allowing isolated areas like Perth to diagnosis these deadly diseases locally. I will be discussing how we have addressed this problem both from machine learning software development perspective and deployment approach.,Wes Wilson,"Wes Wilson discusses the use of machine learning to diagnose childhood brain tumors, which are the leading cause of cancer-related death in children worldwide. The current method of identifying these tumors is problematic, especially in remote and budget-limited healthcare locations. Wilson explains how machine learning can provide a faster and more cost-effective solution, allowing isolated areas like Perth to diagnose these deadly diseases locally. He shares his personal experience with pediatric neural oncology and brain tumors, emphasizing the importance of distinguishing between different tumor subtypes, which respond differently to treatments. Traditional methods of distinguishing between these subtypes based on their location in the brain can be problematic. Wilson suggests that machine learning can provide a more accurate and efficient way to diagnose childhood brain tumors.Brain tumors have traditionally been diagnosed based on their location in the brain, but this can be problematic as tumors can be misdiagnosed. The best way to diagnose brain tumors is through DNA methylation array testing, which can identify the tumor's specific subtype. The most reliable testing is done in Heidelberg, Germany, but not all countries can afford to send samples there. Additionally, some countries have laws that prohibit black box diagnoses. There is a need for a solution to make brain tumor diagnosis more accessible and efficient.The speaker discusses their experience as a problem solver and their recent project to develop a cheaper and easier method for identifying brain tumor subtypes using genetic data. They collected samples from an online repository and used linear regression modeling and random forests to create a training dataset and classify tumor subtypes. The resulting method was accurate and affordable for hospitals. The speaker provides technical details for those interested in modeling.The speaker discusses a method called ""random forest"" for removing instability from regression trees. This method involves randomly deleting one-third of the training set and generating a tree until a whole forest is created. The speaker has developed a software called ""MethylDX"" that makes this method easier to use for pathologists. The software takes methylation data and normalizes it using a built-in logarithm. The speaker also discusses the importance of accuracy and validation in modeling, and recommends checking out the TRIPOD statement for guidance.The speaker discusses the accuracy of a cheap and easy-to-use diagnostic tool. They mention a validation step called the tripod statement, which has different levels of validity for studies. The speaker was only able to conduct a type 2 validation study due to limited access to tumors. However, they were able to conduct a type 4 validation study using samples from a former boss who had sent samples to Heidelberg. The official endgame diagnosis is determined by PathWest, who has access to all patient data, while Heidelberg only receives a sample of histology and runs the methylation better. When comparing Heidelberg's results to PathWest's final decision, Heidelberg was correct 83% of the time. Comparing Heidelberg's results to the speaker's algorithm, there were some differences in accuracy. One tumor was particularly difficult to diagnose and was a hybrid of other tumors.The speaker discusses a tumor that was a hybrid of other tumors and how a pathologist confidently identified it. They also mention a validation study for a machine learning algorithm that predicts tumor types based on DNA methylation data. The predictions are unbiased and purely based on the data set. The speaker thanks the supercomputing support for the project and their employer for encouraging them to pursue cancer research. They answer a question about how they use the supercomputer and discuss the data manipulation and programming languages used in the project. They also mention their goal of making the data available online for pathologists to use.The speaker suggests putting more data online and using free hooks to generate interest in pathology software. They acknowledge that accessing hospitals can be a barrier, but if pathologists enjoy the software, they can pitch it to their hospitals."
LK-3YtMIel8,00:00:00,Attraction and retention strategies for Women in tech,Women make up 31% of the Australian IT workforce with only 14% in leadership roles; this is a statistic we can and should improve. \n\nResearch shows that organisations with equal gender in leadership roles perform better and employee satisfaction of both men and women are higher. Most organisations have goals and are trying to improve these statistics but its proving to be a big challenge.\n\nSo get your notepad ready because I will give you some practical tips on how and where to attract more females to your organisation along with the insider tools to help retain and develop them.\n\nYou don’t need to be a manager to make a difference and help create a successful gender balanced organisation.,Donna Edwards,"Donna Edwards, Head of People and Culture for Ignia, gave a talk on attraction and retention strategies for women in tech. She highlighted the need to improve the statistics of women in leadership roles in the Australian IT workforce, as research shows that organizations with equal gender in leadership roles perform better and have higher employee satisfaction. Donna provided practical tips on how and where to attract more females to organizations and how to retain and develop them. She emphasized the importance of passion and love for learning, which doesn't discriminate based on gender. Donna suggested advertising on job boards targeted towards females, such as BBC job, which has criteria for diverse organizations with flexibility and culture benefits for females. She also recommended creating a supportive and inclusive workplace culture, providing flexible work arrangements, and offering mentorship and development opportunities for women.The speaker discusses ways to attract more female candidates to job openings. They mention that some job sites have criteria for employers to demonstrate diversity and flexibility before advertising, and suggest joining LinkedIn or Facebook groups specifically for women. Referral programs can also be effective, but employers should be proactive in reminding people about open positions. The speaker advises against using too many criteria in job ads, as this can discourage female applicants who may feel they need to meet all requirements. Instead, job ads should highlight the benefits of working for the organization and use gender-neutral language. The speaker provides an example of a poorly written job ad that focuses too much on criteria and experience.The speaker discusses the importance of job advertisements and how they can attract or deter potential candidates. They highlight a job advertisement that specifically targets women and emphasizes the company's commitment to diversity and leadership opportunities for women. The speaker also emphasizes the importance of training interviewers to look for values and culture fit rather than just hiring people who are similar to themselves. They suggest asking questions related to a candidate's love of learning, team focus, and knowledge sharing ability. The speaker concludes with a brief story about a successful recruiter.The speaker discusses the importance of tailoring values-related questions to an organization's specific needs and the ability to train for specific skills. They share a story about a recruiter who was passed over for a job due to lack of IT experience, but was later hired and proved to be successful. The speaker emphasizes the importance of training interviewers on what to look for in candidates to ensure the best person is hired for the job. They also discuss the importance of creating a company culture and core values that everyone buys into, and implementing programs to reward and recognize employees who display those values. The speaker shares their success with a living the values awards program and a recognition program.The speaker discusses their company's successful culture of rewarding and recognizing employees, including a program called Ready where points can be traded in for experiences. They emphasize the importance of hiring people with the right values and being transparent about behavior that goes against those values. The speaker also highlights the importance of a flexible culture, particularly for females who often have childcare responsibilities. They share examples of employees who have been allowed to work from home or pursue part-time work for personal reasons, and argue that supporting these pursuits can lead to greater loyalty and work ethic. The speaker notes that a previous CEO's blanket rule against working from home fed into a negative culture due to a lack of trust.The speaker discusses their experience working with a CEO who had a blanket rule against working from home, which created a negative culture due to a lack of trust. They worked with the CEO to implement managing by exception and create a culture of trust and transparency. The speaker emphasizes the importance of transparent processes in attraction and retention, particularly for females who may be less inclined to ask for salary increases or promotions. They discuss a project they worked on to create clear career pathways and a capability framework that made it easier for employees to have conversations about promotions. The speaker also highlights the importance of promoting a positive culture and employer branding, including sponsoring programs targeted at females and getting involved in events and panels. They mention organizing an event for ACS Women early next year focused on career paths in IT.The speaker discusses various strategies for promoting diversity and inclusion in the IT industry. She mentions organizing events and panels featuring women with diverse backgrounds and IT roles, encouraging employees to volunteer and get involved in committees and meetups, participating in internships and university grad programs, and promoting diversity awards and benefits for females. She also shares a story about a woman referred to them by Microsoft who had been out of the IT industry for 15 years and was struggling to get back in. The speaker and her team worked to create an opportunity for the woman to upskill and join their organization.A woman was struggling to find work in the IT industry due to a lack of upskilling opportunities. After three months of brainstorming, her employer created a Power BI training opportunity for her, which led to a permanent role in the company's RBI team. The speaker emphasizes the importance of thinking outside the box to attract untapped markets, such as women who have left the IT industry. Networking and employee branding are also crucial, with the latter involving the use of real photos of diverse employees and promoting diversity initiatives. Role models are also essential for attracting and retaining female employees.The speaker suggests that in order to attract more females to an organization, it is important to use the ones already present to promote the company through various means such as video blogs and speaking events. During the interview process, it is important to have someone who can sell the company's culture and diversity. The speaker believes that while it is important to have a diverse workforce, it is unrealistic to expect a 50/50 gender ratio. Instead, efforts should be made to target younger generations and encourage them to pursue university degrees in relevant fields. The speaker also highlights the importance of encouraging females to take on leadership roles and mentions that having a balanced leadership team can lead to better collaboration and decision-making. The speaker recommends educating all employees on the benefits of diversity and providing training on unconscious bias. The speaker also mentions a program called Code Like a Girl, which teaches girls how to code and build apps with community benefits.The importance of educating employees on unconscious bias and diversity is crucial in creating a more inclusive workplace. This can be achieved through various forms of training, such as lunch and learn sessions or virtual reality diversity training. Leaders should ensure that everyone is aware of the biases that exist and how to be considerate of them, such as scheduling meetings around school drop-offs or being mindful of interrupting. It is also important to call out any inappropriate behavior in a non-negative way. Reflecting on the feeling of being a minority can help individuals understand the experiences of others. Sheryl Sandberg is a controversial figure who emphasizes the responsibility of females in the workplace.The speaker discusses the importance of promoting gender diversity in the workplace and highlights the need for proactive leadership. They suggest that leaders should encourage females to step up and be more proactive, and should be conscious of their communication styles to ensure that all team members are included. The speaker also emphasizes the importance of fair face time and rapport building for all team members, regardless of gender. They suggest using behavioral questions during the interview process to assess teamwork and passion for learning. The speaker concludes by emphasizing the need for leaders to practice what they preach and be transparent throughout the hiring process to gain employee loyalty.when asking about someone's passion for learning and how they improve their skills outside of work. It's important to tie these questions into the company's values and mission. It's also important to be understanding if someone has limited time outside of work due to personal responsibilities. The goal is to look for glimpses of a desire to learn and improve, even if it's within their work responsibilities. It's important to approach these questions with sensitivity and respect for work-life balance."
cz5pLXPKeUY,00:00:00,A Sh!tshow - The Regrettably Relatable Retrospective,"To err is human, to learn, divine. \n\nEach and every one of us can think of a project that should have earned us a feature on our local firefighters calendar. But how are we meant to learn and grow if everything goes swimmingly? Luckily, one of the cornerstones of the Agile Manifesto gives us some guidance on learning from mistakes: \n\",Aish Srinivas,"Aish Srinivas is a speaker who works in and around technology projects, with a focus on diverse teams. In her talk, she discusses the importance of learning from mistakes, as outlined in the Agile Manifesto. She introduces herself and encourages audience members to scan a QR code for access to the slides and closed captions. Aish expresses gratitude to the traditional custodians of the land and thanks sponsors for their support. She discusses her passion for diversity and inclusion and how it can support sustainable high-performing teams. Aish reflects on the difficulties of 2020 and the importance of hindsight.The video discusses the challenges of reflecting on difficult times and the importance of understanding roles and responsibilities in a team. The speaker suggests that assumptions about roles can lead to misunderstandings and recommends starting with a clear understanding of the problem and desired outcome. The value chain should be broken down to identify necessary tasks and roles can be assigned accordingly. The speaker acknowledges that unforeseen challenges may arise, but emphasizes the importance of open communication and drawing on past experiences to navigate them.The speaker discusses the importance of team communication and collaboration in project management. They emphasize the need to consider individual team members' experiences and strengths when assigning roles and responsibilities. The speaker also discusses the challenges of balancing chaos and order in project management, and the importance of considering various factors such as project funding cycles and legal and regulatory bodies. They acknowledge the resistance to change that often arises in project management and suggest involving team members in the decision-making process to address gaps and bottlenecks.The speaker discusses the importance of change and collaboration in the workplace. They suggest having open discussions with colleagues to identify gaps and bottlenecks, and experimenting with solutions to find what works best. The speaker emphasizes the importance of feedback loops and socializing products early and often to avoid surprises and create sustainable solutions. They also suggest setting boundaries with clients who may change their minds frequently, while still building empathy and bringing them on the journey with you.The speaker provides advice on how to handle situations where stakeholders change their minds about a product or project. They suggest building empathy by explaining the costs of the change, setting boundaries, and presenting multiple options to demonstrate the evolution of the product vision. The speaker also emphasizes the importance of retrospectives as an opportunity to evaluate how people, processes, and tools are coming together to help the team deliver. They note that building psychological safety and cognitive diversity in the team is hard work but well worth it, and suggest encouraging team members to understand themselves and their biases.encouraged to reflect on our own cognitive biases and behaviors in order to tackle problems and improve team culture. It is important to take an interest in people's lives and actively solicit feedback from them, while also being clear and precise with expectations to build trust and reliability within the team. If mistakes are made, it is important to own up to them and be vulnerable. Retrospectives are a great way to introduce incremental change, but complex problems may arise if issues are not addressed. Each individual brings their own experiences and behaviors to the team, and it is important to harness these differences to make the team stronger. When dealing with difficult stakeholders, it may be necessary to shield oneself and the team, but it is important to balance mental health and capability to handle conflict.The speaker discusses strategies for dealing with difficult stakeholders, including shielding oneself and the team from them, mentally preparing for difficult conversations, and bringing a support person. They emphasize the importance of balancing one's mental health and capacity to deal with conflict. The speaker also reminds the audience that the worst thing that can happen is not liking each other, and that it is okay to take a breath and advocate for oneself and others. The discussion concludes with a call for collaboration and recognizing our shared humanity."
fcxE-q_Y_Xw,00:00:00,,"David Meacock\nSarada Lee\nJulie Grundy\nChristina Aldan\nSam Price\n\nGot a burning tech question and don't know who to ask? Let us help! We've assembled a panel of industry experts and they've got the sole job of answering all your curly questions!\n\nPanel Chair: David Meacock\n\nSubmit Questions: https://app.sli.do/event/uZzLVNnMfibd7rS3kGmXZo\n\nDavid Meacock\nDave is a software professional with a passion for making a difference for customers and colleagues alike. He's shipped code and run teams across a variety of industries, and currently runs an Engineering Experience function at Family Zone, looking to level up both engineers and the environment they work within.\n\nSarada Lee\nSarada Lee (MPA, FCCA, HKICPA, GAICD) is a co-founder of Perth Machine Learning Group and received the Women in Technology WA Tech[+] 20 Award in 2019.  She brings machine learning/artificial intelligence and strong corporate governance together to help companies evolute.  Sarada is passionate about sharing knowledge and supporting diversity in tech.\n\nJulie Grundy\nJulie Grundy is an accessibility expert who works for Intopia, a digital accessibility consultancy. She has over 15 years experience as a front-end web developer in the health and education sectors. She believes in the democratic web and aims to unlock digital worlds for as many people as possible.\n\nChristina Aldan\nChristina Aldan is a TEDx speaker, trainer, and brand strategy consultant. She offers businesses brand consulting and creative content for everyday media. With over 15 years of experience in the digital realm, Christina is highly regarded for her approach to business, partnering with clients to find unique strategies that ensure their goals are met. Christina builds connections through her keynote addresses, training workshops, and technological education. She uses these tools to help individuals and businesses cultivate value in everyday media. She has delivered talks on all 7 continents, having presented training workshops for the Microsoft MVP community, international corporations, and conferences worldwide. Christina uses her charisma and expertise to inspire others by mentoring women in business like herself. She also has sat on state and local boards supporting women in tech, entrepreneurship, mental health, and children with learning disabilities.\n\nShe is the recipient of the Las Vegas Women in Tech Community Service Award, the Distinguished Woman of the Year Award in STEM. Learn more at: Luckygirliegirl.com.\n\nSam Price\nSam had a humble beginning as a thick client developer, spending many hours fighting layout managers. He has a passion for all things tech, and is a staunch advocate of \",Panel: AMA (Ask Me Anything),"The AMA (Ask Me Anything) panel consists of five industry experts: David Meacock, Sarada Lee, Julie Grundy, Christina Aldan, and Sam Price. They are available to answer any tech-related questions. David Meacock is a software professional who currently runs an Engineering Experience function at Family Zone. Sarada Lee is a co-founder of Perth Machine Learning Group and received the Women in Technology WA Tech[+] 20 Award in 2019. Julie Grundy is an accessibility expert who works for Intopia, a digital accessibility consultancy. Christina Aldan is a TEDx speaker, trainer, and brand strategy consultant with over 15 years of experience in the digital realm. Sam Price is a tech enthusiast and a staunch advocate of good design. The panel is part of the D2D Perth event, and attendees can submit their questions through the provided link.The panelists introduce themselves, including Christina Aldan, a brand strategy consultant; Sam Price, a VP of engineering; Julie Grundy, a senior digital accessibility consultant; and Sarada Lee, a co-founder of a machine learning group. The topic of discussion is the software developer employment ecosystem and the best way to hire developers. Sam suggests that it depends on the size and maturity of the organization, with smaller startups being better off hiring locally and larger organizations having more support for remote hiring. The discussion is being held using the Slido platform for audience interaction.Large organizations are better equipped to handle remote hiring, while smaller ones may struggle. Adding NFTs or crypto to a software project can be risky, especially for startups. Machine learning is rapidly advancing, with generative technology becoming more sophisticated. However, there are concerns about the social impact and the distinction between what is real and what is not.The speakers discuss the advancements in technology, including the ability for computers to generate scenes based on simple text messages and the recent competition where a machine beat a human. They also touch on the importance of considering the social impacts of these changes and the need for regulatory catch up. In terms of accessibility, the panel discusses the importance of good quality HTML and heading structure. When it comes to convincing companies to care about privacy, the panel suggests taking a grassroots approach and becoming a champion for the cause, praising others when they get it right and being persistent in meetings. The importance of privacy is especially relevant in the medical field, where data privacy is a top concern.The panelists discussed the importance of privacy in organizations, particularly in the context of medical data. They emphasized the need for executive support and creating a culture of privacy. In terms of individual development, the panelists suggested investing in oneself by helping others and building a community around oneself. They advised individuals to be intentional about their personal brand and to live their lives around their core values. By doing so, individuals can create a reputation and lead from within, without necessarily having a leadership title.the industry in Perth on par with the rest of the world? Julie, what are your thoughts on this?

Well, I think it's important to remember that every city and every region has its own strengths and weaknesses. Perth has a really strong mining and resources sector, which has driven a lot of innovation in technology and automation. We also have a growing startup scene and a lot of investment in renewable energy. Of course, there are always areas where we can improve, such as access to funding and talent retention. But overall, I think the technology industry in Perth is on par with the rest of the world in terms of innovation and potential for growth. It's just a matter of continuing to build on our strengths and address our weaknesses.Panelists discussed the technology sector in Perth and whether it is lacking anything compared to other regions. The consensus was that while there may be gaps in certain skill sets or languages, Perth has the capability and capacity to fill those gaps. The panelists also discussed embracing ""boring"" technologies such as HTML and infrastructure as code. One panelist expressed their dislike for SQL, while another shared that they did not have any fun war stories to share. The meaning of life as a developer was also briefly discussed.Christina emphasizes the importance of creative problem solving and critical thinking in the field of development. She encourages developers to focus on empathetic and innovative solutions that connect with users. The panelists discuss the value of web3 and caution against getting distracted by the next shiny thing. They suggest that technology should be secondary to problem-solving and adding value to the situation. While some may enjoy spending time in the metaverse, it is important to consider the subset of the population that finds value in it.The panelists discussed the value of the metaverse for certain subsets of the population, such as those who enjoy certain things and find connection through it. However, the reality is that a small percentage of the population owns a large portion of the crypto, and it may not be practical for everyone to get involved. Some people have used it to their advantage, such as paying off mortgages or using it for remote team training. The panelists agreed that the real promise of computing and software comes from principles of openness, transparency, and interoperability. They recommended a talk called ""Full Stack Anxiety"" by Joel Khalifa for those interested in mapping out their goals and the skills needed to reach them.The speaker suggests watching a talk on YouTube for those who have concerns. The panel discussion ends and the audience applauds. The next sessions will begin at 3:15."
jEYj2APkqic,00:00:00,Project Insanity,"We all know the definition of insanity - doing the same thing over and over and expecting a different result!  So why then do so many organisations with failed IT projects try again in exactly the same way as before? \n\nIn this era of expecting IT to drive transformational change, why do the projects themselves not embrace the change?\n\nAnd what should organisations do to set these projects up for success from the beginning?\n\nThis short talk will \n-  explore the classic mistakes we see over and over again in IT projects \n- highlight the warning signs that the project setup is bordering on insanity;  and \n- outline a few simple steps that organisations and project teams can take before they embark on any new project - especially complex transformational projects.\n\nNo experience necessary\n20 mins\nCore/Non Technical Skills\nTechnology has been part of my working career since before PC’s were even invented. I was hooked the first time I was given a computer and I immediately wanted to embrace the new world and to assist others to embrace it as well. This led me away from accounting to the world of IT management consulting which has been my “home” for 30 years.\n\nI have managed teams of in-house developers, vendor development companies, business analysts, UX designers, \",Giselle Rowe,"Giselle Rowe, an IT professional with over 30 years of experience in consulting, discusses the issue of failed IT projects and why organizations continue to repeat the same mistakes. She questions why IT projects, which are expected to drive transformational change, do not embrace change themselves. In her talk, she explores the classic mistakes made in IT projects, highlights warning signs of project setup bordering on insanity, and outlines simple steps that organizations and project teams can take to set projects up for success. Giselle's background includes managing teams of in-house developers, vendor development companies, business analysts, UX designers, and more. She currently heads up the strategy and design team at Insight in Perth. During her presentation, she uses a scenario with a CIO to illustrate the common mistakes made in project setup.The video discusses a project that lacks proper funding and resources, with no business case and no budget allocated for change management or internal resources. The project manager is expected to handle everything, and there is no clear communication or collaboration between the IT team and the business. The previous incarnation of the project failed due to a lack of expertise and poor project management. The speaker emphasizes the importance of addressing these issues to prevent the project from becoming a failure.The project manager discusses various challenges in implementing a new system, including lack of funding for additional resources and change management, resourcing issues with part-time team members, decision-making delays with a committee, and insufficient business engagement and user experience design. The comms team is not enough for effective change management, which requires bringing people along the journey to embrace the new technology.red flags that need to be identified and addressed. The risk workshop will help to identify all of these potential issues and allow for a plan to be put in place to mitigate them. 

Another important step is to involve the users and stakeholders in the process. This means engaging with them early on and throughout the project to ensure that their needs are being met and that they are on board with the changes being made. This will require effective change management, which involves communication, training, and support to help people adapt to the new system and ways of working. 

Finally, it's important to be realistic about what can be achieved and to manage expectations accordingly. This means being transparent about the risks and challenges involved and setting realistic timelines and goals. It also means being open to feedback and making adjustments as needed to ensure that the project stays on track and delivers the desired outcomes. 

In summary, successfully implementing a new system requires effective project management, risk management, change management, stakeholder engagement, and realistic goal-setting. By following these principles, organizations can avoid the pitfalls that often lead to project failure and achieve the desired outcomes.The speaker emphasizes the importance of identifying and mitigating risks in IT projects, and stresses that IT projects rarely fail because of technology, but rather due to people, process, and money issues. They suggest creating a detailed risk schedule with specific owners and mitigation plans, and getting agreement on the budget before proceeding with the project. The speaker also encourages team members to help identify and mitigate risks, not just the project manager. Overall, the success of an IT project depends on acknowledging and taking ownership of risks, and taking action to mitigate them."
PmQggXsPi4A,00:00:00,Embedding Cybersecurity into your Business Culture,"To contend with hackers, you have to think like one. What are the easiest entry points?  \n\nBeing in the technology-oriented industry, we often get so fascinated by security practices used for developing, testing, and deploying the applications that we forget the most unpredictable cyber-security factor: humans (not machines).  \n\nAt this talk, you will discover some useful tactics to embed cybersecurity as a part of your business culture. Also, sharing some great examples, and examples of disasters. \n\n--\nVidhu is a mentor, an educator, and an advocate for women in technology. She is working as an IT Lecturer at South Metropolitan TAFE. She is a certified CISCO Instructor as well as an accredited AWS Educator. She also voluntarily serves AWSN (Australian Women in Security Network) as one of the leads for their Perth Chapter. She loves to empower others to solve problems, self-direct and self-reflect. Her motto is ‘Be passionate, be curious and never stop learning!’.",Vidhu Bhardwaj,"Vidhu Bhardwaj, an IT lecturer and advocate for women in technology, discusses the importance of embedding cybersecurity into business culture. She emphasizes the unpredictable nature of humans as a cybersecurity factor and shares statistics that show 90% of cybersecurity incidents are human-enabled. Bhardwaj also highlights the most common methods of deploying ransomware, which are poor user practices, weak passwords, lack of cybersecurity training, and spam phishing emails. To establish a security-minded business culture, many companies have a cybersecurity education, training, and awareness program in place. Bhardwaj encourages businesses to focus on embedding cybersecurity into their culture by addressing the human factor and implementing effective training programs.In this video, the speaker discusses the importance of embedding a security-minded business culture in companies. She mentions the use of cyber security education, training, and awareness programs, and encourages companies to critically analyze their current program to ensure it is engaging and effective. The speaker advises that training should be customized to the company's needs, delivered in small chunks, and inclusive of all employees. She also emphasizes the importance of having a simple reporting system and regular reminders. The speaker suggests using tools such as cross-departmental talks and e-newsletters to keep employees informed and set an example by staying aware of cyber security.The speaker discusses the importance of implementing a customized cyber awareness program in a business culture. They suggest various ways to make the program inclusive and engaging, such as using e-newsletters, setting an example, and gamification. The speaker emphasizes the importance of testing the program and providing constructive feedback to employees. They also suggest acknowledging and rewarding employees for identifying potential threats. The speaker concludes by encouraging the implementation of these points in existing or new cyber awareness programs."
GWDV6NqzmYo,00:00:00,Building and retaining an amazing team,,Andrew Harcourt,"Andrew Harcourt discusses the importance of building and retaining an amazing team. He emphasizes the value of shared experiences and stories in learning and retaining information. He also highlights the importance of identifying and hiring amazing people for a team. He notes that in the technology industry, there is a need to search for the best people possible and to strive for diversity in the team.The speaker discusses the importance of hiring the best people in the technology industry, and emphasizes the need for diversity in the hiring process. They suggest using simple tests, such as identifying the type of triangle, to filter out unqualified candidates. The speaker also encourages taking responsibility for the lack of competent people in the industry and working to persuade great candidates to work with the company. Ultimately, the goal is to hire people who make the team excited to work with them.Persuading great people to work with us is harder than identifying them in the first place. Amazing people have a lot of options and want to work with other talented individuals. To persuade them, we need to tell them a story about something cool we built and show them our organizational mission and values. Once we have convinced them to join us, we need to retain them by creating a culture that fosters growth and development. This is especially important in industries where talent is scarce and competition is high.The speaker discusses the challenges of building a team of amazing people in organizations that do not have unlimited budgets like Premier League football teams. He emphasizes the importance of investing in people who show promise and treating them well to retain them. The speaker also highlights the importance of happiness in the workplace and encourages organizations to allow their employees to prioritize their happiness. Trusting the people hired and allowing them to solve problems creatively is also crucial for building a great team.The speaker discusses the importance of trust and inspiring people in an organization. They emphasize that if someone cannot be trusted to do the right thing, collective punishment should not be used. Instead, trust should be demonstrated and people will surprise you. The speaker also stresses the importance of going the extra mile and caring about the mission and people in the organization. They give an example of a company with broken toilets and how the problem was not properly addressed, leading to employees learning the wrong lesson. The speaker suggests that when great people in an organization point out a problem, it should be taken seriously and addressed properly.The speaker discusses various issues related to managing employees in a company. They emphasize the importance of learning the right lessons from problems and challenges, rather than just finding quick fixes. They also stress the importance of diversity and treating employees with respect, and warn against setting unrealistic expectations or exposing employees to ridicule. The speaker advises companies to prioritize taking care of their employees and not to engage with companies or individuals who are not aligned with their values. They also caution against insulting employees or lying to them about pay and conditions. Overall, the speaker emphasizes the importance of building a strong team of talented and motivated individuals and treating them well.The speaker discusses the importance of policies in the market and how they can affect a company's reputation. They also mention the need to pay employees what they are worth, especially experienced individuals who may have other commitments. The speaker emphasizes the importance of trust in hiring and dealing with potential mistakes. They also discuss the Dead Sea effect, where only the best employees are retained and supported, leading to a lack of diversity and potential issues. The speaker encourages breaking away from the ""we've always done it this way"" mentality and emphasizes the importance of maintaining and retaining talented individuals.The video discusses the importance of maintaining a positive image and reputation in the workplace. It emphasizes the need to avoid making others look stupid and to approach firing employees with compassion and consideration. The speaker also encourages investing in employee development and learning from each other's experiences. The video includes a story about a team that successfully improved a pricing system by writing automated tests.The speaker discusses the importance of writing tests for traditional legacy systems and the value of having confidence in the code. They use the example of abstracting time away in order to check for different scenarios. The speaker also shares a story about a comment they made in a code base that led to the creation of a clock factory and how it became a key point in a conference. They emphasize the importance of having a great team and promoting collaboration.The speaker emphasizes the importance of having a great team and constantly striving to improve. They suggest that if you have a team of amazing people, you should expect them to always try to make things better. The speaker also suggests that it's important to address non-performance kindly and compassionately, while also investing in the team. Seeking feedback from peers and colleagues is also important, and the speaker suggests embracing grumbles and telling stories to help people learn and grow. Finally, the speaker addresses a question about how to stitch together a team of individually great people, suggesting that a shared mission is key.The speaker discusses how to create a high-performing team with individuals who may have different identities. They emphasize the importance of a shared mission and getting everyone to believe in it. Providing tools for collaboration and developing trust among team members is also crucial. Celebrating successes and setting an example of saying thank you and taking responsibility for mistakes helps build a sense of team culture and shared responsibility. The speaker suggests getting people to meet and interact with each other to build relationships and reduce uncertainty. Overall, creating a successful team requires a shared mission, collaboration, trust, and a positive team culture.The speaker suggests that to make new connections, one should initiate conversation and encourage others to do the same. This can lead to positive relationships and potential future encounters. The speaker also mentions the importance of repetition in achieving success."
9HOy0I_l3Yk,00:00:00,Random Failures of Architecture I Have Committed,,Colin Scott,"Colin Scott gave a talk about his failures in architecture and how failure is a great way to learn. He talked about his experiences working on different systems and projects, including his time working with classic ASP. He emphasized the importance of being self-critical and admitting areas where improvement is needed in order to grow as a developer. He also thanked his sponsors and joked about being dared to give the talk.The speaker reflects on their past experience as a junior developer and how they made the mistake of blindly following a Microsoft example project, which involved building business systems using a business layer and a data access layer component. They realized that this approach added no value to the project and made the development cycle longer. The speaker emphasizes the importance of not blindly following experts and their architectures without considering if it is applicable to the project. They also acknowledge that junior developers make mistakes and it is the responsibility of senior developers to guide and correct them without crushing their enthusiasm. The speaker shares an example of a successful project they worked on for a government department, but reminds the audience to not just focus on the happy client award and move on, but to also reflect on the process and learn from it.The speaker discusses a project they worked on that had a lot of potential areas for improvement. They implemented a web font observant Yui and had separate webinar creation services for minimal security benefits. However, this introduced unnecessary network latency and risk of failure. They also had issues with their API design and found that using a database was more secure, performant, and flexible than their current setup. The speaker then discusses their use of a custom ORM they wrote themselves, which required a lot of custom code for each map entity and didn't support custom queries well.The speaker discusses their experience with a custom mapping project that required a lot of manual coding and did not support custom queries. They also discuss issues with a workflow engine that required registration and caused friction in the development process. The speaker acknowledges that they ignored feedback from their coworkers and that this caused significant issues. They recommend being intelligent about leaving boundaries between different areas of functionality and not using frameworks unless necessary. They also suggest using a data access object (DAO) for mapping data, as it is more efficient and less error-prone.The transcript discusses the importance of carefully considering the need for frameworks and alternative solutions in software development. It emphasizes the need for consistency in data types and the potential cost of not selecting appropriate architectures. The speaker also shares personal experiences with implementing Kerberos and messaging systems, highlighting the importance of considering scalability and decoupling components. The transcript stresses the importance of working well in a team and the potential consequences of not acknowledging errors.The speaker discusses the problems with synchronous submission of commands in a system, such as polling or notifying users by email, which can be expensive and not always appropriate for business processes. They also mention the use of XML configuration files, which can be difficult to modify and debug, particularly when specifying generic types. The speaker advises testing architecture early and in a realistic environment, rather than relying on a single machine. They also suggest considering alternative approaches if a solution is not working, rather than continuing to invest time and effort in it. The speaker shares their experience of finding a solution to a security propagation problem, which took a lot of time and resources, and suggests that there may have been more effective ways to accomplish the client's objective.The speaker discusses a solution to a security propagation problem that took a lot of time and resources to solve. They suggest that the time could have been better spent focusing on satisfying the actual business requirements. They also discuss the use of messaging to improve robustness and decrease coupling, both horizontally and vertically. The speaker suggests using type scanning for DI configuration and avoiding data stores as much as possible. They also discuss the challenges of building a system with hundreds of services and the need for different architectural styles to capture the requirements of each element. The speaker initially built a simple domain model with transaction scripts but found that it did not produce clear business concepts and instead resulted in procedural code.The speaker discusses the importance of using appropriate domain models in software development and the potential pitfalls of using overly simplistic or complex models. They suggest that using microservices can be helpful in creating services that are appropriately sized for their purpose, but caution against over-reliance on specific tools or frameworks. The speaker also acknowledges their own past mistakes in overusing certain tools and emphasizes the importance of considering the specific needs of each project when making design decisions.The speaker discusses their experience with writing code and using tools such as SQL queries and API. They mention the importance of efficient coding practices, such as lazy loading and minimizing database operations. They also caution against overusing mocking frameworks and creating overly complex inheritance hierarchies. The speaker emphasizes the value of consistent coding conventions and the challenges of creating reusable libraries.The speaker discusses the importance of using reusable libraries and maintaining code in a way that is easy to use and maintain. They caution against relying too heavily on platform vendors and suggest that it is better to copy code between projects than to extract it into a third project that may not be maintained. The speaker emphasizes the importance of taking feedback from coworkers and ensuring that every element of an architecture is justified. They also suggest that it is important to be open to suggestions for improvement and to consider consolidating similar projects. The speaker concludes by discussing the importance of appropriate organization and ownership of code.The speaker discusses the importance of open sourcing in organizations, but notes that it may not be suitable for all companies due to contractual agreements. However, many organizations are becoming more open to the idea of open sourcing and are reporting non-sensitive information. The speaker also mentions that open sourcing can lead to a community of people maintaining the code, but it should not be done arbitrarily."
EqniemG4ME0,00:00:00,What to do with our unconscious bias.,"Upgrade your skills on how to identify your own unconscious bias, when to challenge it, how to communicate it and best deal with the environment that doesn't match your perfect world scenario.\n\nA journey into a critical and hysterical investigation of the speakers own personal unconscious bias across childhood experiences, education and careers.\n\nYou don’t need to be a manager help create safe space to question bias in your organisation.",Ming Johanson,"Ming Johanson discusses the importance of identifying and challenging our own unconscious biases. She shares personal stories from her childhood, education, and career to illustrate how biases can be formed and internalized. Johanson emphasizes that creating a safe space to question bias is not limited to managers and encourages everyone to upgrade their skills in identifying and communicating bias. She also discusses the negative impact of holding onto limiting beliefs, such as scarcity, and how they can hinder personal and professional growth. Johanson concludes by sharing her own experiences with PTSD and anxiety, encouraging others to not let biases hold them back from taking action.The speaker discusses biases and how they can affect our actions and beliefs. She shares a personal experience of internalized racism and how it affected her self-worth. She also emphasizes the importance of being aware of our biases and challenging them, as well as surrounding ourselves with people who will challenge our beliefs in a safe space. The speaker encourages operating above the line, focusing on outcomes rather than being reactive, and relying on others for support.The speaker discusses the importance of being above the line in communication and focusing on results rather than dwelling on negative emotions. They share a personal experience of dealing with grief and how it taught them patience and understanding towards others. The speaker also mentions reframing unconscious biases and finding the right people to talk to for advice. They encourage the audience to have more patience and understanding in conversations and to give feedback."
Pacp8NUFst8,00:00:00,Let&#39;s grow some feature trees,"DevOps and Jira backlogs mostly fail at providing developers, designers and product owners with a holistic view of how user stories relate to each other, in context of a broader project or product roadmap.\n\nEnter... feature trees!\n\nFeature trees are used as a companion artefact to the product backlog that visualises the relationship between between epics, features and stories in a simple way and shows what has been delivered, what's being worked on and what is coming up next.\n\nA well organised feature tree also acts as a versatile and strategic communication tool. You can use it to find gaps in your backlog, organise your backlog in a clearer way, onboard new developers, and highlight the features and stories of an MVP or upcoming release. They can even be used in a funding request or proposal to communicate your product vision.\n\nIn this talk I want to share with you how to create a simple product feature tree and why it should be used in every delivery project.\n\nMostly intermediate\n45 mins\nLeadership/Management\nCornel is a Service and Experience Designer that loves creating clarity through research and experimenting to bring products to life.",Cornel Steyn,"Cornel Steyn discusses the use of feature trees as a tool to provide a holistic view of how user stories relate to each other in the context of a broader project or product roadmap. Feature trees are used as a companion artifact to the product backlog that visualizes the relationship between epics, features, and stories in a simple way. They can be used to find gaps in the backlog, organize it in a clearer way, onboard new developers, and highlight the features and stories of an MVP or upcoming release. A well-organized feature tree also acts as a versatile and strategic communication tool that can be used in a funding request or proposal to communicate the product vision. Cornel shares tips and tricks on how to create a simple product feature tree and why it should be used in every delivery project.The speaker discusses the concept of a feature tree, which is a way to organize the features and functionality of a product or app. The tree represents the end goal or visualized product, with the roots representing the features that make up the functionality. Each feature is broken down into specific details, such as what is being built, what is in progress, what has been completed, and what is not being built. The feature tree can be organized by columns or rows, and can be used to navigate the product and see what features are available or coming up. The speaker uses the example of a grocery shopping list to illustrate the concept of organizing a list to navigate a store. The feature tree can be a useful tool for product design and development, and can be made public to show accountability and transparency.The speaker discusses the concept of using a shopping list as a map or compass to navigate a grocery store, and applies this metaphor to the use of a feature tree in product development. They explain that a feature tree can act as both a map and compass, providing a visual artifact to negotiate new functionality and communicate with multiple teams. The speaker provides examples of a product backlog for Jira and emphasizes the importance of having a summary piece to surface and prioritize tasks. Overall, the speaker highlights the usefulness of using metaphors to simplify complex concepts in product development.discusses how a feature tree can help designers gain a deeper understanding of the problem they are trying to solve. It allows them to see the bigger picture and how their design fits into the overall product roadmap. This can lead to better design decisions and a more cohesive user experience.

The second bullet highlights how a feature tree can help designers prioritize their work. By visualizing the backlog and the dependencies between features, designers can focus on the most important tasks and ensure they are delivering value to the user.

Finally, the third bullet discusses how a feature tree can help designers communicate their design decisions to stakeholders. By presenting a clear and concise visual representation of the product roadmap, designers can help stakeholders understand the reasoning behind their design choices and build consensus around the product vision.The speaker discusses the value of going through a thorough design process, rather than just creating a pretty prototype. This process allows for gaining context, discovering gaps, and having a seat at strategy discussions. From a development perspective, it can be helpful for onboarding new team members and navigating uncertainty. Visualizing progress and scope can also be useful, but it's important to avoid oversimplifying the process.a feature tree as a tool to help organize and visualize your backlog. It can be especially useful when onboarding new team members or when trying to reflect how a team likes to work. By reorganizing your backlog into a feature tree, you can empower autonomy and facilitate conversations about what's next in focus. Product owners love feature trees because they allow for a visualization of everything being worked on, including color coding to indicate progress and upcoming work. This can be helpful for budget cycles and estimating resources needed for the next 12 months. Overall, a feature tree is a useful tool for organizing and visualizing complex projects.The speaker discusses the benefits of using a feature tree to organize and visualize the development of a product. They suggest using color coding to set expectations and allow for easy communication between teams. The feature tree can also link directly to a product backlog and allow for questions and input from team members. The speaker recommends using a feature tree in a consulting context or when onboarding a new team to a product.The speaker discusses the process of onboarding a new team to an existing product and building intuition about it. They suggest creating a feature tree to organize thoughts and replay understanding to others. The speaker also recommends using a knife for story slicing to answer difficult questions about functionality. They suggest using physical Post-it notes to write out user stories and then conducting a card sorting activity to group them into sets of features. The resulting groups can form the headers of a feature tree. The speaker advises stealing from what's real by navigating through the existing product to inform the feature tree.The speaker provides tips on how to create a feature tree for a product. They suggest starting with organic and intuitive groups of features that emerge over time, and stealing from existing products to create headings. The speaker advises focusing on one feature at a time and asking if it makes sense, while also cutting out any unnecessary elements. They recommend involving representatives from different teams to build context and suggest staggering focus sessions for each feature. Finally, the speaker discusses prioritization and organizing the feature tree from top to bottom and left to right based on the user journey or highest value features. The audience is not specified.The speaker discusses how to create a feature tree and emphasizes the importance of starting small and being mindful of the audience and level of detail. They suggest using easily editable tools like Miro or Fig Jam and caution against having a single person own the document. The feature tree can be useful in agile ceremonies and showcases for broader stakeholders.The speaker discusses the use of Post-it notes in agile ceremonies to showcase progress to stakeholders. They then introduce the concept of the five E's of service design, which is a construct used by service designers to navigate a user journey. They provide an example of a problem they solved for an insurer, where they designed an experience for users to cancel their insurance policy online. They go through the different features of the experience, such as access, view policy details, cancellation reason, date, refund, editing details, and confirmation. The speaker emphasizes the importance of prioritizing features and presenting information in a simple and relevant way.The speaker discusses the user journey for a refund process and how they used the five ease of service design to create a feature tree for their backlog. They start with the second pillar, ""enter,"" which is the entry point for the user experience. The next four pillars are ""engage,"" which includes all the features the user interacts with, ""exit,"" which includes planned and unplanned successes and failures, ""guide,"" which includes back of house manual processes, and ""extend,"" which includes ways to attract more users and automate processes. The speaker emphasizes the importance of starting with the beginning, middle, and end of the user journey and then answering the questions of what comes before and after. They also discuss the use of color-coded Post-it notes to indicate different stages of the process and the creation of a roadmap for the feature tree.The speaker discusses the use of a feature tree to map out product vision and create a backlog. The smaller Post-it notes on the tree are color-coded for different reasons, such as still needing discovery or being blocked by a platform. The speaker suggests creating a roadmap for the core piece of functionality and subsequent releases. The backlog can be tagged with feature flags and color-coded. The speaker provides a PowerPoint template for creating a feature tree and suggests using Excel or online whiteboarding tools for creating the tree. The speaker emphasizes not letting the tool block the process and suggests choosing an easy tool like Miro. The speaker invites questions and offers to chat at the Telstra purple Booth.The speaker advises not to let the tool block you when working online. They suggest using easy tools like Miro instead of more complicated ones like Excel or PowerPoint. They also mention a fast feature in Excel where dragging cells over to mirror creates Post-it notes. The speaker encourages trying this feature and dragging stories into whiteboarding tools. They end by thanking the audience and offering to answer one more question before morning tea."
DZEN_SxwkUw,00:00:00,Doodling and Drawing - Expressing ideas and concepts through visual communication,"If you were handed the marker and asked to conceptualise an idea or concept for that next big project, how would you go? Perhaps you have Maikbanphobia, the fear of whiteboards?\n\nVisual facilitation in meetings and workshops can:\n  * Increase engagement\n  * Improve comprehension\n  * Increase retention rates\n\nDrawing does not have to be scary or hard. Some very simple techniques can make all the difference when it comes to putting pen to paper, whiteboard or digital tablet to drive a conversation or solidify a design.\n\nIn this talk, I'll take you on my own journey towards escaping the comfort of Powerpoint and making the digital whiteboard my primary method of visual interaction.\n\nNo experience necessary\n45 mins\nCore/Non Technical Skills\nPhil Wild is an IT professional with experiences across a wide variety of industries and organisations in Australia. He is currently employed as a Solutions Engineer with Confluent.",Phil Wild,"Phil Wild, a Solutions Engineer with Confluent, gave a talk on the benefits of visual facilitation in meetings and workshops. He discussed how drawing and doodling can help express ideas and concepts through visual communication. Phil shared his personal journey towards using digital whiteboards as his primary method of visual interaction, and how he tries to avoid using PowerPoint. He demonstrated simple techniques for drawing symbols, such as fire, factories, and sharks, which can be useful in conveying ideas quickly during a whiteboard session. Phil emphasized that drawing does not have to be scary or hard, and that anyone can learn to use it effectively.is still quite basic and not very refined. However, I found that using visual aids in my work helped to convey ideas and information much faster and more effectively than just using words. It also helped to remove ambiguity and make communication more efficient. As an architect, I found that using pictures and diagrams was much more effective than trying to explain things through text. Over time, I have developed a library of symbols and images that I can use on a digital whiteboard, which has made the process much easier and faster. While some people may feel intimidated by the idea of drawing on a whiteboard, it is a valuable skill that can greatly enhance communication and collaboration in the workplace.The speaker discusses their experience with using digital notes and tablets for drawing, starting in 2012 with an Android tablet and stylus. They found that their drawings on the tablet were worse than on a whiteboard. However, with the shift to remote work due to the pandemic, they found that using a tablet with a pen became very useful for virtual meetings. They then started working for Confluent, which provided them with an iPad and the app Concepts for drawing. They attended a two-day workshop on visual facilitation by a company called The Humble PM, which helped them improve their drawing skills. They recommend using a Samsung tablet with a stylus for note-taking and using a screen protector with a matte finish to emulate writing on paper. The Concepts app is also recommended, with good support from the small team.The speaker recommends a screen protector from Belmond for the iPad that gives a matte finish and feels like writing on paper. They also suggest using the Concepts app, which has good support from a small team in California. For presenting from an iPad, they recommend an airplay receiver running on a MacBook. 

For paper, the speaker recommends the Newland refillable pens, which come in many colors and have large tips for shading. They are good for agile facilitation and drawing on paper. For whiteboards, they suggest using Newland markers with rectangular tips that can be used for both wide and narrow lines. 

The speaker then demonstrates how to draw simple shapes and symbols using the Newland pens. They recommend drawing the words first before drawing the box around them when drawing containers.In this video, the speaker discusses techniques for drawing symbols and diagrams quickly and effectively. They recommend drawing containers around words rather than the other way around, and demonstrate how to draw architectural diagrams and people using simple shapes and shading. They also discuss the Becablo style of writing, which is more compact and readable than traditional handwriting, and explain how they have created their own font to use in digital drawing programs. Overall, the video provides useful tips for experts looking to improve their drawing skills.The speaker discusses their process for handwriting diagrams and notes using a tablet and pen. They mention creating their own font to save time and using Lucidchart to import hand-drawn fonts. They also discuss the benefits of using visual aids for memory retention. The speaker shares examples of their diagrams and notes, which they use repeatedly for presentations. They also mention using slides in meetings to document agendas and problems.The speaker discusses their use of a digital whiteboard app called Concepts for creating presentations. They use hand-drawn images and slides to convey their ideas and stories, often importing reusable company icons and images. They start with a flow and then draw out the bits and pieces they want to talk about, crossing them off as they go. The speaker also demonstrates the app's layering and presentation mode features. They mention that they get ideas from presentations, YouTube videos, and their role in data warehouse modernization. Overall, the speaker emphasizes the efficiency and ease of use of the app for creating engaging presentations.The speaker discusses their use of the Concepts app for drawing diagrams and using double tap for undo and triple tap for redo. They mention potentially using Prezi for pre-configured views but find it difficult to use in meetings. They also discuss their process for cleaning up relations between things and using Miro for online collaboration. After presentations, they export their drawings as a PDF and share them through LinkedIn or other means."
mYnfRsyaug4,00:00:00,ASX Trading vs. Machine Learning – ML Ops by accident,"Trading shares is a complex proposition. There is potentially an enormous volume of information to consider, news articles, announcements, economic indicators, world events and even the time of day. How can anyone distil all of that into a successful trade? What if there was a way to “consider” data and determine if it was tradeable, that is, can be used to make profitable share trades? Enter machine learning!\n \nIn this talk, we will explore how to use machine learning models to decide what shares to trade and when while wading through a daunting array of disparate data types. With this base level of shared understanding established, we will explore techniques of how to run machine learning at scale as well as practical techniques to automate the creation, development, scoring and deployment of machine learning models. Hope to see you there!\n\n--\nDavid Martin is currently the Technical Lead for the Covid-19 response for the WA Health Department. He's been solving problems in the Public Health System for the last 17 years. More recently he has been focused on mixing his financial qualifications with his IT ones, resulting in Machine Learning projects with a FinTech flavour. Who knows, he just might make a few dollars along the way.",David Martin,"David Martin discusses the use of machine learning in trading shares. He explains the complexity of considering various types of data, such as news articles, announcements, economic indicators, and world events, to make profitable trades. Martin shares his experience with the New York City taxi fare prediction project, which allowed him to experience machine learning with C-sharp in an easy and comfortable way. He then built a tool called Data Shark, which could dynamically change and optimize data sets and machine learning parameters to find the most optimized solution. Martin tested Data Shark with healthcare data but found it more successful in fintech, which is his passion. He discusses practical techniques to automate the creation, development, scoring, and deployment of machine learning models. Martin is currently the Technical Lead for the Covid-19 response for the WA Health Department and has been solving problems in the Public Health System for the last 17 years.A healthcare data expert with experience in cancer models pivoted to fintech and combined IoT with finance to develop a trading strategy using machine learning to predict trades in advance. The strategy focused on ASX announcements, which are documents that companies are obliged to notify the market of certain events. The goal was to predict when an ASX announcement would move the share price up by a certain amount, which was turned into a binary machine learning model. The data used to support these decisions included announcement metadata, sentiment scoring, and Twitter data. The key part of the talk was ML Ops or machine learning operations, which focused on how to deploy and use hundreds of thousands of models at scale and automatically.The speaker discusses various factors to consider in their modeling, including sentiment analysis of Twitter data, economic indicators, trading data derivatives, and short positions. They also touch on machine learning and the use of a confusion matrix to measure a model's accuracy. The speaker then introduces their tool, Scarborough Fare, which automates the deployment and disposal of models based on set criteria, such as a minimum confidence score.The speaker has created a marketplace called Scarborough Fare, which has market rules and a confidence score as a minimum criteria for machine learning predictions. The speaker has named the continuous delivery component of the marketplace Market Maker, and the continuous deployment component CD Plus. The speaker has also created a backtester to test models and dispose of them if they do not meet quality standards. The speaker has built a Twitter account to track the deployment and disposal of models, as well as predictions made by the models. The speaker has also created a trading desk screen.developing a fully automated trading system, I have made significant progress in building a machine learning model that can predict successful trades with a confidence score of 0.8 or higher. I have also built a trading desk that displays all the models in production and their corresponding true positive, false positive, false negative, and true negative values. While it took me two months to deploy the first model that met my criteria, I eventually discovered that the model had learned to identify a particular concept known as a ""speeding ticket"" in the trading world. This is when a company moves outside its normal price and volume parameters, and the ASX writes a letter to the board of the company to inquire about the anomaly. The model learned that when this letter is published, the price will move, although unfortunately, this is not a tradable opportunity. Nonetheless, this discovery was a significant step forward in my research, and I am continuing to work towards my ultimate objective of developing a fully automated trading system.A machine learning model was able to discover that when a certain document is published by a company, the price of the stock will move. However, this discovery is not a tradable opportunity as the document is released after the price has already moved. This discovery is a positive sign that the model is on the right path towards achieving the ultimate objective of successful trading on the ASX. The speaker provides resources on calculations and MLOps."
NOhVrVM1hEw,00:00:00,Building a 6 million request per second web server,"And to be clear this is not a cluster of web servers.  This talk is about a single web server servicing 6 million requests per second.\n\nI'm the author of a web server that is ranked in the top 20 of the TechEmpower benchmarks.  These benchmarks performance test various web servers built in any technology.  All the web servers are pitted against each other and the results published yearly.  While some might question the value of performance testing, Microsoft supports these benchmarks after having been called out to improve their IIS performance.\n\nThis talk goes into the engineering of how to service 6 million requests per second.  This is definitely a technical presentation, as we deep dive into performant software on multi-core hardware. If you want warm and fuzzy soft skills, I highly recommend going elsewhere.  This is a hard skill technical presentation that will enable even junior developers to obtain an appreciation for the engineering required for high performance applications.\n\nWhat you get out of this talk is an appreciation for what high performant software looks like.  It will highlight key bottlenecks you can avoid in your everyday software practices to improve the performance of the systems you build.  It will also debunk much of the thinking about how to write performant software.  I hear so many developers concerned about certain performance aspects of software, missing simple key things that are significantly more important.\n\n--\nAuthor of OfficeFloor: using office patterns to improve software design and founder of OfficeFloor (http://officefloor.net).   My focus has been on improving Software via taking patterns from the Business (rather than the typical forcing \",Daniel Sagenschneider,"Daniel Sagenschneider, the founder of OfficeFloor, discusses the engineering behind building a single web server that can service 6 million requests per second. He is the author of a web server that is ranked in the top 20 of the TechEmpower benchmarks, which performance test various web servers built in any technology. In this technical presentation, he deep dives into performant software on multi-core hardware, highlighting key bottlenecks that can be avoided in everyday software practices to improve system performance. He also debunks much of the thinking about how to write performant software, emphasizing the importance of simple key things that are often overlooked. The talk is suitable for junior developers and experts alike, and provides an appreciation for what high performant software looks like.The speaker discusses their experience with optimizing the performance of their software, Office Floor, which is written in standard Java with non-blocking IO. They emphasize that programming languages have nothing to do with performance and that hardware deals with speed, while software deals with efficiency. To improve performance, they focus on getting data to the CPU as quickly as possible. They use a camping analogy to explain the difference in performance between accessing data from registers or caches versus RAM, disk, or network calls. The speaker has submitted their results to the Tech and Power benchmarks and has improved their ranking to the top 10.The speaker discusses the performance differences between accessing data from disk versus network calls, with network calls being much slower. They advise against writing small chatty networking and making lots of separate requests, as this adds overhead and reduces efficiency. The speaker also explains threading and how it can impact performance, with setup time and processing time being important factors. They caution against using multiple threads under high concurrency, as it can tie up CPUs and reduce throughput. Finally, they touch on thread coordination and the use of locks.In this video, the speaker discusses the impact of high concurrency and parallelism on CPU performance. They explain that adding more threads can actually tie up CPUs and reduce throughput, as there are more setups going on. Thread coordination, such as locks, can also create overhead and slow down processing. The speaker suggests using atomic operations instead of locks to reduce overhead. Thread scheduling can also create overhead, as threads go to sleep and other threads move in, causing contention and setup costs. The speaker recommends using thread affinity to bind threads to a single CPU or group of CPUs to reduce overhead. They also mention a non-standard Java library that allows for setting up thread affinity. The speaker concludes by discussing the threading model used by Office to achieve six million requests per second, which involved running a single thread per CPU and using callback threads.about - optimizing memory usage. One way to do this is to minimize the number of threads and connections in your database pool, as this can lead to contention and slow down throughput. It may seem counterintuitive, but reducing the number of connections can actually improve performance. Additionally, it's important to write readable code that can be optimized by the compiler, rather than trying to outsmart it. Memory management is also crucial, as applications should only take what they need from memory in order to avoid overloading the CPU.The lower layer of memory is physical memory, from which applications take buffers as needed. The compiler types the memory, assigning byte sizes to different data types. Object-oriented programming adds another layer, with private types accessed through methods. Functional programming avoids mutation and creates new data instead, reducing the need for locks and contention. In high-performance programming, functional code is preferred, but memory can be used to advantage. Bit twiddling is a technique that can reduce the number of operations needed for certain tasks, such as parsing HTTP requests. Universities offer resources on bit twiddling and other bitwise tricks.The speaker discusses the concept of bit twiddling, which involves optimizing code by reducing the number of operations and checks required. This technique can be useful for improving the efficiency of repetitive processes. However, it is important to note that compilers can often optimize code for you, so bit twiddling may not be necessary in all cases. The speaker emphasizes the importance of understanding hardware and designing efficient code, regardless of the programming language used. They also suggest minimizing the number of threads and database connections, and using algorithms that utilize atomic operations rather than critical sections. Finally, the speaker recommends considering functional programming practices, which can help with scaling across multiple CPUs."
H0KWUtHInMM,00:00:00,Building Great Teams,"How do you build your dream team and ensure it continues to thrive? \n\nIn this talk I will run through the life cycle of growing, developing and retaining a great team. Starting with strategies to create a great culture within your existing team, tips for interviewing to ensure you hire the right people and lastly practical ways to manage or influence behaviour and have \",Donna Edwards,"Donna Edwards, an experienced IT professional, shares her insights on building and maintaining a high-performing team. She emphasizes the importance of creating a great culture within the team, hiring the right people through effective interviewing strategies, and managing behavior to ensure team success. Donna draws from her personal experiences, including growing up in a cult and surviving domestic violence, to underscore the importance of valuing and empowering team members. She provides practical tips for team leaders and senior developers to build a solid foundation for their teams, including defining values, vision, and engagement strategies. Overall, Donna's talk offers valuable insights for experts looking to build and maintain successful teams.about but it's worth exploring and there are also more traditional methods like bonuses and promotions. As a leader, it's important to have an engagement strategy in place that includes values, vision, collaboration, communication, and reward. This strategy should be tailored to the specific needs and preferences of your team members. Regular and transparent communication is key, as is creating opportunities for collaboration and connection. Verbal praise is the most effective way to show appreciation, but there are also other options like Yama's praise feature and LinkedIn's kudos feature. It's important to recognize and reward individuals and teams based on behaviors that align with the organization's values and vision.The speaker discusses the importance of implementing a reward and recognition program in a company to enhance the culture and boost employee morale. They suggest various ways to recognize and reward employees, such as verbal praise, recognition apps, awards, and rewards. The speaker emphasizes the need for clear communication channels and a visible recognition wall to promote gratitude and positivity in the workplace. They also suggest changing the language from ""culture fit"" to ""culture add"" when hiring new employees to enhance the company culture.discussing the importance of finding and attracting great technical talent. As a team leader or senior team member, you can make a difference in three areas: where to find talent, how to conduct interviews to assess culture fit, and contributing to your employer brand to attract the right talent. Finding great technical talent can be challenging, but you can help your recruiters by providing information on where to find potential candidates, such as meetups, conferences, and LinkedIn or Reddit groups. Encouraging your company to sponsor events and promoting your team and projects on social media can also help attract talent. Referral programs can be highly effective, with the most successful teams having a referral percentage of 70%. When creating job adverts, focus on selling your organization and its benefits rather than listing every skill required. Use gender-neutral wording and tools like Textio to avoid creating objections and encourage more people to apply. Overall, as a technical expert, you can play a crucial role in finding and attracting great talent to your organization.When creating a job advertisement, it's important to focus on the purpose and vision of your company, as well as the value you add to customers and society. Avoid using too many bullet points and instead focus on selling the benefits of the role and how the candidate can contribute to the team. Consider offering a confidential chat option for candidates who may be concerned about their current employer finding out they are applying for a new job. When conducting interviews, keep the process streamlined and consistent to ensure fairness. Be transparent with candidates about the number of interviews and the types of people they will be meeting.effective communication, you can ask questions like ""Can you give an example of a time when you had to communicate a difficult message to a team member?"" This will help you assess if the candidate's values align with your company's values. Additionally, you can ask situational questions to see how the candidate would handle certain scenarios that may arise in the workplace. It's important to remember to be transparent, consistent, relevant, and objective in your interview process. Providing training on how to assess candidates and unconscious bias can also help ensure fairness. Lastly, make sure to have a diverse group of interviewers and create a safe and comfortable environment for the candidate to perform at their best.group, we empowered them to make decisions and take ownership of their areas of expertise. This not only helped us scale quickly but also allowed for a more collaborative and innovative environment.

Development is also crucial for building a great team. Providing opportunities for growth and learning not only benefits the individual but also the organization as a whole. This can be done through training programs, mentorship, and encouraging employees to attend conferences and events.

Lastly, leadership plays a vital role in building a great team. Leaders should lead by example, communicate effectively, and provide support and guidance to their team. It's important to create a culture of trust and transparency where employees feel comfortable sharing their ideas and concerns.

Overall, building a great team takes time and effort, but the benefits are immeasurable. By hiring the right people, nourishing and empowering them, and providing opportunities for growth and development, organizations can create a culture of success and innovation.Empowering a team is the fastest way to scale and succeed. In the speaker's last role, they had 80 direct reports and collaborated with the team to put together a leadership group. Each person in the team was empowered to own and drive different initiatives, resulting in hitting their growth target and retaining 95% of employees. Empowerment works collaboratively by setting goals with the team and letting individuals come up with their own KPIs. It's important to balance the strengths areas within the team and consider the different hats needed, such as a scrum master or risk management focused person. Autonomy is important, and it's essential to find the problems that the team loves and give them those problems to solve. Building a great team involves enabling objective career development.As a leader, it's important to find the problems that you and your team love and give them those problems to solve. Creating an objective career pathway is also crucial, and the speaker recommends using the SFI framework. It's important to have transparent processes for salary reviews and promotions, and to explain how decisions are made. Enabling employees to continue learning and developing is also important, whether through formal PD plans or quarterly catch-ups. As a leader, it's important to have good self-reflection and a growth mindset, and to be open to feedback. The speaker notes that many employees leave companies because of poor management, and the biggest complaint is that managers don't listen. When employees come to managers with problems, it's important to avoid simply solving the problem for them or giving defensive reasons for the issue.The speaker discusses two common ways people respond to problems or complaints: trying to solve it for the person or giving reasons for the issue, both of which are not effective. Instead, the speaker suggests listening and acknowledging the person's concerns and using questions to help them come up with solutions. The speaker also emphasizes the importance of having courageous conversations, being honest and transparent with empathy. Giving constructive feedback can strengthen relationships and build trust. The speaker presents a feedback model called ""OURS"" which stands for telling your truth, seeking to understand their truth, recommending behavior change, and asking for support.The speaker discusses techniques for building a great team, including giving clear feedback and setting expectations with consequences if necessary. They emphasize the importance of being honest and clear with team members, as it is the kind thing to do in the long run. The speaker also suggests eliminating bullet points in job descriptions and focusing on the overall description of the role and what the team is looking for. They acknowledge that this may result in more applicants, but it is worth it to find the right fit for the team. The speaker encourages leaders to have courage and practice these techniques to help team members live their best lives and love what they do. They offer to connect with attendees on Twitter or LinkedIn and answer any questions.The speaker discusses the challenges of finding exceptional technical applicants and suggests that job postings should focus on the most important criteria rather than overwhelming applicants with a long list of requirements. They also recommend using LinkedIn profiles as a way to apply for jobs and suggest that referrals are the best way to find top candidates. In response to a question about how introverts can be effective in influencing team culture, the speaker advises that it's important to work with others and find those who are passionate about the same goals.As a team leader or senior person, it's important to bring others together to achieve success, regardless of whether you're an extrovert or introvert. Identify those who are passionate about the team's culture and goals, and work with them to grow it within the team. The best leaders the speaker has met have been introverts. However, some companies may only value loud and salesy individuals, which can be a challenge for introverts. Overall, it's important to find a company that values and supports your strengths."
-g2Ay7yaBco,00:00:00,Experience from the trenches - Sameer Chauhan,"What are the some of the problems software delivery teams experience? Is there a way of working that will allow software delivery teams to overcome these problems?\n\nSoftware delivery teams face challenges with productivity, code quality, team health, and knowledge sharing and code ownership. There are many ways of working that allow a team to address these issues. The challenge is to find the right way of working that helps to address these issues quickly.\n\nIn this talk, you will learn how Pair Programming is one such way of working that will help address these challenges. You will learn the mechanics of Pair Programming, things to watch out for and tips to successfully set up a pair programming session.\n\nLearning outcomes:\nWhat is pair programming?\nWhat are the benefits of pair programming?\nWhat things to look out for?\nWhy some people find it hard?\nWhen not to pair program?",Pair Programming,"In this talk by Sameer Chauhan, the challenges faced by software delivery teams are discussed, including productivity, code quality, team health, and knowledge sharing. Pair Programming is presented as a way of working that can help address these challenges. The talk covers the mechanics of Pair Programming, benefits, things to watch out for, and tips for successful sessions. The learning outcomes include understanding what Pair Programming is, its benefits, when not to use it, and why some people find it difficult. The talk is aimed at experts in the field.N/A (This transcript does not contain any spoken words or information that can be condensed for experts.)"
cPHADbOwVsY,00:00:00,Creative Coding and the JavaScript Canvas,"Software development is often thought of as a hard science, rather than a creative pursuit.\n \nIn this talk, I'm planning to challenge that assumption. I'll be giving a practical demonstration of how to use the JavaScript canvas to create artistic visualizations on the fly, using real time data - including human brain activity. I'll also be discussing the creative process behind making art using unconventional tools, and how we can use some of these concepts to our advantage when working with technology. \n \nNo artistic (or technical) talent is required to enjoy! \n\nAlice is a Perth based software engineer, who's also a part time artist and part time stand-up comedian. I started mucking around with JavaScript visualisations when I was about 11, and never really stopped. Currently, I work at Readify as a developer/consultant, doing a mish-mash of fullstack things - currently, I'm focusing on .NET development, but overall I like to stay language agnostic. In broad terms, the main focus of my work is making apps look nicer and do the things they're supposed to do.",Alice McCullagh,"Alice McCullagh, a software engineer and part-time artist, challenges the assumption that software development is solely a hard science and not a creative pursuit. In her talk, she demonstrates how to use the JavaScript canvas to create artistic visualizations in real-time using data, including human brain activity. She also discusses the creative process behind making art using unconventional tools and how these concepts can be applied to technology. Alice emphasizes the idea that art and technology are not mutually exclusive and can be closely related. She provides a basic introduction to the JavaScript canvas and demonstrates how to draw shapes and lines and change their colors.This video discusses the basics of using the canvas element in HTML to create simple illustrations and animations. The speaker explains that the canvas can be used to draw shapes and lines, and that animation can be introduced by using time and requesting frames from the browser. They caution against using a loop to request frames, as it can cause performance issues for the user. The speaker also demonstrates how to add constraints to keep an animation within the bounds of the canvas. They discuss the use of sine and cosine waves to create more engaging animations, and suggest that learning how to create engaging illustrations and animations can be useful in web design. The video concludes by discussing the importance of clearing the canvas between frames to avoid strange patterns.The speaker discusses using the canvas element in JavaScript to draw simple illustrations and clear the canvas every frame. They explain that using a fill style can programmatically decide on the color and position of the element on the screen. The canvas element is cheap to draw rectangles, allowing for up to 60,000 different objects per second. The speaker notes that mucking around with coding can be valuable and introduces visual elements and play into programming. They then demonstrate an application where they use a headset to take readings of EEG data and project it onto the canvas using the same techniques. The speaker acknowledges that this is a prototype and that there are versions of this technology that give a more precise reading.The speaker discusses a prototype headset that measures emotions through EEG technology, but notes that it is not precise enough for scientific use. The purpose of the headset was to engage children in computer science and illustrate the idea that combining different skills can lead to interesting results. The speaker believes that diverse skill sets can be combined with programming to create unique applications. They also discuss their work with a platform that educates children about climate change and sees technology as a way to engage young people in coding and software development.young people in general are already thinking deeply about technology and its impact on society, including topics like climate change and AI. However, there is no one-size-fits-all approach to getting kids interested in coding. One effective method is to show them how coding can be used to address important global issues or to create something they can use in their daily lives. The speaker also believes in the power of collaboration between artists and programmers to create engaging and innovative projects.The speaker discusses their plans to teach creators how to use programming to bring their ideas to life. They express interest in running workshops and inviting individuals from various artistic communities to dip their toes into programming. The goal is to make programming more approachable and encourage people from different backgrounds to try it out. The speaker emphasizes that they do not want to force computer programmers to become more artistic or musical, but rather make programming accessible to all."
1kXGLJDhI-0,00:00:00,Refactoring Components,"As much as we all like working on greenfields projects, most of the work we actually do is on existing codebases. And existing codebases have technical debt. Technical debt makes code hard to modify. Being hard to modify slows down to development.\n\nSo, how do we deal with this? We refactor!\n\nBut, refactoring is an inherently risky process. It's very easy to break things in any complex system, especially if the test coverage is less than ideal. Worse, it's possible to ruin users' experience by accidentally fixing bugs that their workflows had come to rely on. To combat this we need to ensure that our refactor doesn't change the existing behaviour in any way, while also leaving us free to add new functionality.\n\nWe're going to have a look at how to decide when we actually should refactor, and how we can use tests to ensure we maintain the existing behaviour. We'll have a look at our options for testing JSX, and the pros and cons of snapshot tests. And we'll finish up with a demo, putting it all together.\n\nMostly intermediate\n45 mins\nFrontend Development\nErin is a Google developer expert with over ten years experience in a variety of languages, from JavaScript to Model204 (no, nobody else has heard of it either). She is currently a senior web developer as CashApp. She is an active member of the Melbourne developer community, and has spoken at conferences around the world. If you see her at a conference, she'll probably have knitting needles in hand.",Erin Zimmer,"Erin Zimmer, a Google developer expert with over 10 years of experience in various languages, discusses the importance of refactoring existing codebases to combat technical debt and slow development. Refactoring is a risky process that can break things in complex systems, so it's crucial to ensure that the existing behavior remains unchanged while allowing for new functionality. Erin explains how to decide when to refactor and how to use tests to maintain existing behavior. She also discusses testing options for JSX and the pros and cons of snapshot tests. The talk concludes with a demo. Erin is a senior web developer at CashApp and an active member of the Melbourne developer community who has spoken at conferences worldwide. The talk is suitable for intermediate-level frontend developers and lasts for 45 minutes. The slides are available at refactortractor.ez.codes.The speaker discusses the concept of refactoring, which involves changing the implementation of code without changing its functionality. Refactoring can make code easier to understand, test, and change. The benefits of refactoring include faster future development and fewer bugs, while the biggest cost is time. The speaker recommends considering the trade-off between the benefits and costs of refactoring before deciding when to do it. They also suggest checking out Martin Fowler's book on refactoring for more detailed information. The talk includes live examples and tools for working with JSX.The speaker discusses the trade-off between refactoring code and building new features or fixing existing bugs. They mention the risks of refactoring, including the difficulty of writing tests for code and the potential for breaking existing workarounds. The speaker shares a personal experience of wanting to refactor a function but ultimately deciding not to because it was working fine and didn't need to be changed. They suggest only refactoring code if it's necessary for another change or if multiple people are involved in the process. The speaker then discusses a specific refactor they are planning to do, switching from moment.js to date-fns for handling date and time in their codebase.The speaker discusses the need to switch from the Moment library to Date FNS for managing dates and times in JavaScript. They outline a three-step approach to refactoring the code, starting with using characterization tests to determine the current behavior. Characterization tests involve writing a test with no expectations and changing the expectations until the test passes. The speaker demonstrates this approach by writing tests for the format date function, starting with the simplest case of passing in nothing and gradually adding more complex scenarios. The goal is to ensure that the new library behaves the same as the old one.The speaker is discussing testing scenarios for a function that formats dates. The function can take in a date, string, or number as input. The speaker tests each scenario, including passing in a valid date string, an invalid date string, a string that is not a date, a positive number, a negative number, and zero. The speaker notes that passing in a negative number or zero results in a bug in the code, where the function returns an unexpected value.world scenario and it ended up breaking a bunch of things because people were using it in unexpected ways. So in that case, having a comprehensive set of tests would have saved a lot of time and effort in the long run. Additionally, by using a well-established library like date-fns, we can ensure that our code is more maintainable and less prone to bugs in the future. Overall, investing time in writing tests and refactoring code can pay off in the long run by improving the quality and maintainability of our codebase.a discussion about testing in software development, specifically regarding how many tests to write for a function and how to test JSX components. The speaker explains that the number of tests needed depends on the function's usage and importance in the codebase. For JSX components, the speaker suggests using either text content expectations or snapshot tests, which generate a text representation of the component and compare it to a previous version. The latter is particularly useful for complex components or those with varying behavior.Snapshot tests are a useful tool for testing React components. They generate a text representation of the component and compare it to a previously saved snapshot. If the snapshots match, the test passes. If they don't, the test fails and shows the difference between the two. Snapshot tests have some limitations, however. They can be less clear than traditional tests and may not contain all the information needed to fully test a component. Additionally, they cannot be used for test-driven development (TDD).Snapshot tests have limitations, such as not testing anything if the component is empty and not being suitable for TDD. However, they are useful for testing large components and presentation logic, such as tables. The Old Farm Shop app is used as an example to demonstrate implementing new requirements, starting with the label before the radio button, to allow for incremental changes. The component used in the app is shown.The speaker discusses making changes to a component that renders a webpage. They focus on a label component and the need to separate it out to avoid repetitive code and enable testing. They proceed to write component tests for four scenarios, using snapshot tests to compare the expected output to the actual output. They encounter a warning but resolve it and successfully generate snapshots for each scenario.The speaker is discussing how to write characterization tests and refactor code in React. They encounter a warning related to updating component state after the test has finished, which they address by waiting for the state to update before making assertions. They then refactor the code to parameterize repeated values and improve readability.In this video, the speaker demonstrates how to refactor a label component into a number input component. They explain how to pass in the product type and count, and update the snapshot tests accordingly. The speaker also discusses the importance of testing the new component separately and integrating it with the existing code. Finally, they write a test for a new feature involving plants and update the code accordingly.The speaker discusses the importance of refactoring and how to do it safely. They demonstrate how to write characterization tests and substantial tests to ensure that refactors are safe. They also show an example of refactoring a component to make it easier to work with. The speaker concludes by sharing some resources for further learning."
MDrrZucJtJo,00:00:00,Towards a welcoming Web,"[KEYNOTE SPEAKER]\n\nThe Internet is supposed to be an open, accessible platform. Unfortunately, frequently we see pitfalls in reliability, accessibility or performance stemming from a privileged understanding of connectivity, cultural and economic context. It turns out; the Web can be unwelcoming to many.\n\nThis talk will set the necessary context for inclusive design practice, focusing on accessibility, performance and equality. We'll learn how to foster a user-experience focused culture, no matter whether you're a developer, designer, project or business owner. You will leave inspired to build a better Web for everyone.",Karolina Szczur,"Karolina Szczur delivered a keynote speech on the topic of creating a more inclusive and welcoming web. She highlighted the pitfalls of the internet, including issues with reliability, accessibility, and performance, which can stem from a privileged understanding of connectivity, cultural, and economic context. She emphasized the importance of inclusive design practices, focusing on accessibility, performance, and equality. Karolina discussed the negative effects of technology on mental health, particularly social media, which can lead to low self-esteem, anxiety, depression, and feelings of loneliness. She also highlighted how technology has become a platform for harassment, victimizing, shaming, trolling, and doxxing, which has driven many people away, especially those from underrepresented groups. Karolina called for a critical look at the negative aspects of technology and emphasized the need to build a better web for everyone.Technology, particularly social media, has become a platform for harassment, victimization, shaming, trolling, and doxxing, driving many people away, especially those from underrepresented groups. Personal data has become currency sold to advertisers and sometimes weaponized to alter election results. Companies have poor security practices, leading to frequent data breaches, and some have covered up incidents without alerting users. Reality can be manipulated towards commercial goals, as seen in an example from an Australian GP booking platform that altered patient reviews. The tech industry's toxic culture is actively driving people away, particularly members of underrepresented groups. The industry is facing a crisis, and it's necessary to have a hard look at how the neutral hacker culture has steered us toward a crisis of democracy and human rights. The move fast and break things mentality has contributed to this crisis, as it celebrates privilege and lack of responsibility. Disruption isn't a free card to bypass laws, freedoms, moral compass, civil rights, and human protections.The early hacker culture celebrated privilege and lacked responsibility, leading to catastrophic results in the hunger for more data and exponential growth. Technology is not neutral, as it is designed with conscious and unknown biases that impact users. The lack of ethical education in technology-oriented curriculums is troubling, with many respondents reporting no ethics training whatsoever. To build a welcoming and respectful web, we must become fluent in ethical concerns and address issues of exclusion, homogeneity, and lack of diversity. Diverse teams challenge biases, are more innovative and productive, and drive positive business outcomes. Establishing ethics in web design and development is a complex problem with no widely adopted code of ethics.violence at risk. Ethical technology should prioritize security and safety of its users, ensuring that their data is protected and not vulnerable to breaches. It should also consider the potential physical and emotional harm that its users may face as a result of using the technology.

In conclusion, the web and technology industry lack a widely adopted code of ethics, which makes it challenging to determine what is ethical and what is not. However, based on the Declaration of Human Rights and other relevant resources, there are three ethical principles that can guide us towards a better, more welcoming web: human rights and democracy, well-being, and security and safety. Ethical technology should respect and extend human rights, serve and support democracy, require minimum attention, inform and create calm, work in the background, and prioritize security and safety of its users.In Australia alone, over 700,000 people were affected by data breaches in 2014-2015, putting them at risk of financial and personal harm. Ethical technology should respond promptly to crises, eliminate single points of failure, invest in cryptography and security practices, and protect vulnerable individuals. Responsibility and accountability are crucial for tech workers and organizations, who must be liable for the potential damages their creations make on society. Social impact should be measured with the same level of scrutiny as delivering to investors or releasing new products. Ethical technology is aware of diverse social and cultural norms, creates policies for algorithmic accountability, collaborates with lawmakers to advance regulations, and complies with national and international guidelines for data protection and privacy. Sensitive data should be accessible to users, who should have full control over their data, including permanent and swift deletion. Ethical technology should only collect necessary data and have mindful storage times.Ethical technology should only collect necessary data and have short storage times. Transparency is crucial in ethical design, as it improves trustworthiness and mitigates misuse of data. Responsibility involves disclosing breaches and establishing rules for reporting and accountability. Misuse and bias awareness is important, as algorithms can reflect biases and societal inequalities. Ethical technology combats unconscious bias and tests for misuse and malice. Diversity and inclusion are crucial in building a more welcoming and ethical web.The speaker discusses the importance of building an ethical and inclusive web, highlighting the negative impact of technological redlining and algorithmic bias. They suggest resources such as books on algorithmic bias and ethical thinking workshops to guide individuals and organizations in prioritizing diversity and equity. The speaker emphasizes the responsibility of every individual in shaping the culture and technology of the web, and the need to challenge old systems of power and privilege. They conclude with a message of hope, stating that a shift towards more humane technology is possible with collective effort.The speaker emphasizes the importance of understanding the ethical challenges that come with designing and building technology. While technology can fulfill our dreams, it is important to remember that it is embedded in old systems of power and privilege that need to be challenged. The web should not be negative, oppressive, or compromise humanity. Instead, it should enhance our lives and fulfill our dreams. The speaker urges everyone in the tech industry to carefully consider their responsibilities and take action to build a better future together. The main takeaway is that everyone has a role to play in creating ethical technology that helps all of us equally. If each person does something ethical or changes their values, the industry will be better day by day. The speaker also suggests not collecting, storing, or keeping data as a simple but effective way to improve the industry."
dz5Ifj-z8Aw,00:00:00,Banning “Best Practice”,"A new toxic element has emerged within the workplace, the defence of “best practice”. This blanket term has become ubiquitous amongst many architectural design sessions and it is hurting innovation and user outcomes. The term “best practice” is often used without any context and used to justify someone’s design decisions without having to explain that justification. It is a term that is used to shutdown any discussion, and will likely be used to elevate one’s ideas without merit.\n\nI frequently push people to break down their assertion that their design decisions are “best practice”. This involves challenging people to firstly understand the goals with greater clarity:\nAre we prioritising costs, user enablement, time? \nWhat constraints are we working with? Do we have specific environments we have to work in?\nWhat problem are we ACTUALLY trying to solve?\n\nBy embracing these elements, we can actually frame our decisions in a way that enable a greater level of understanding by rephrasing “best practice” into something that is more structured. For example:\n\nAs we are trying to get our customers using {product feature} as quickly as possible, I think we should look at using {service A} with {service B} as it will allow us to get consumers on our platform using {product C} quickly. \n\nBy focusing more on the problem, the priorities/constraints, we can design solutions together that meet our needs, rather than just doing what someone else did and call it “best practice”\n\nNo experience necessary\n10 mins (lightning talk)\nLeadership/Management\nA passionate tech geek that is focused on business solutions. I work well in ambiguous environments where end goals and business outcomes are the key priorities. I am tool agnostic and comfortable working in new environments. I have many years working with data, and have worked across all stages of the data pipeline. The primary focus of my career has been focusing on data modelling, data transformations, data analysis and reporting.",Brendan Crake,"Brendan Crake, a consultant and data magician, argues that the term ""best practice"" has become toxic in the workplace and is hindering innovation and user outcomes. He challenges people to break down their assertion that their design decisions are ""best practice"" by understanding the goals, priorities, constraints, and problems they are trying to solve. By reframing ""best practice"" into something more structured, they can design solutions that meet their needs rather than just doing what someone else did and calling it ""best practice."" Brendan believes that the term should be banned from our vocabulary forever.practice, even if it may be a better solution for the specific problem at hand. This can lead to missed opportunities and suboptimal outcomes. Additionally, the overuse of the term ""best practice"" can lead to a lack of critical thinking and analysis, as people may simply default to what is considered ""best practice"" without fully understanding the context and nuances of the situation. This can result in a lack of innovation and creativity in problem-solving. Finally, the use of ""best practice"" as a shield or badge of honor can create a culture of complacency, where people are more concerned with following established norms rather than pushing boundaries and striving for continuous improvement.The concept of ""best practice"" is problematic in project management as it often leads to ignoring different ideas and creating a toxic work culture where people's ideas are not shared and valued. It also creates a lack of leadership within the project team and wider stakeholders. Instead, it is important to articulate solutions based on constraints and user needs. This approach builds trust, generates buy-in, and creates a shared vision. To achieve this, it is important to understand the problem, organizational priorities, and constraints, including navigating politics and personalities. Avoiding the use of ""best practice"" and instead focusing on solutions based on specific needs and constraints can lead to more successful project outcomes.As a consultant, navigating politics and various personalities is often necessary. However, using the term ""best practice"" can create a barrier to trust and limit exploration of options. Instead, focus on understanding the problem and constraints, and coming up with solutions that meet those goals. It's about changing mindsets and banning the term ""best practice"" to encourage actual research and planning."
3Loxg52MWRE,00:00:00,What video games have taught me about designing for motivation,"Have you ever binged watched a show on Netflix? Or kept playing 'just one more level' of your favourite video game? \nIn this session we'll look at how motivation works and simple tips for designing software to encourage intrinsic motivation. Using lessons learnt from video game design and how to apply them to other areas of software design (e.g. enterprise). \n\nNo experience necessary\n20 mins\nDesign \u0026 UX\nMegan is a PhD candidate at Murdoch University researching video games, motivation and resilience. She has a background in education and science communications. Megan is interested in how people learn and interact with technology. In her (very little spare time) she enjoys crafting and playing games.",Dr Megan Pusey,"Dr. Megan Pusey, a PhD candidate at Murdoch University, discusses how video games can teach us about designing for motivation. She explains the difference between intrinsic and extrinsic motivation and how video games are designed for intrinsic motivation and fun. In contrast, enterprise software and websites are often designed for extrinsic motivation and getting a job done. Dr. Pusey suggests that we can learn from video game design to improve the user experience of enterprise software and websites. She uses a thought experiment involving Vegemite toast to illustrate the concept of intrinsic and extrinsic motivation.The speaker discusses how video games are designed to be intrinsically motivating, with elements of autonomy, competence, and relatedness. They suggest that these elements can be applied to enterprise software and websites to make them more engaging without turning them into games. Autonomy can be achieved by giving users choice and control over the software, such as allowing them to remap buttons or customize menus. Competence can be fostered by providing users with quests, missions, and checklists that give them a sense of progress and achievement. The speaker gives examples of software that already incorporate these elements, such as the Adobe suite and Slack. They also suggest that improving accessibility for users with different types of color blindness can be a small but important way to offer choice and control.The speaker discusses the importance of using Quest logs, checklists, and progress bars in various contexts to help users feel a sense of accomplishment and motivation. They provide examples of how online courses, retail websites, and surveys can benefit from these features. The speaker also touches on the idea of building community through multiplayer games, but notes that connection to others can also be achieved through other means.The speaker discusses the topic of building connections and community through video games. They mention the genre of couch co-op games, using Overcooked as an example, where players work together to complete tasks within a time limit. The speaker also recommends the use of online collaboration tools such as Mural, which allows for real-time collaboration and features like locking down templates and summoning everyone to view the same screen. They also discuss the use of a ping system in competitive team games like Apex Legends, which allows for quick communication of important information to the team. The speaker draws a comparison to social media reactions as a way to quickly show support and build a sense of community.The use of ping systems in Esports and social media reactions are examples of how quick and efficient communication can build a sense of community. Video games like Sky and Dark Souls allow players to leave messages and items for others to discover, creating a social experience in a single player game. Asynchronous collaboration tools like Gather Content and shared documents also allow for easy collaboration without the need for real-time communication. When incorporating competitive elements, it's important to consider the potential demotivating effects on losers and to provide opportunities for them to catch up and potentially win.The speaker discussed the potential drawbacks of incorporating competitive elements in games or activities. They emphasized the importance of considering the feelings of the losers and whether there is a way for them to come back from losing. The speaker also mentioned that motivation can be tricky when making things competitive versus collaborative. They thanked the audience for attending their session and offered to answer any questions during afternoon tea or via Twitter."
QiqCxMGBssU,00:00:00,Close Toxic Developers and You,"Have you ever started your morning by worrying about “that person”, and how long you can put off having to deal with them? Do thoughts of this person and their actions occupy your mind when you should be focussing on work or your personal life? Have you been so unmotivated and anxious about work that you’ve considered quitting?\n\nToxic developers can make you doubt yourself and your abilities.  Their behaviour can be hugely disruptive to the success of individuals and ultimately teams as a whole.\n\nI will address how to identify and deal with toxic developers in the workplace by providing you with strategies you can apply day to day. My aim is to help you regain your focus by sharing coping mechanisms and healthy ways to respond to a situation, whether it is you who is affected or your teammates.\n\nThere may be others on your team who struggle and self-sacrifice in an attempt to cope with the situation. No one should leave a job they enjoy or lose their passion for their work because of one individual.",Patrik Affentranger,"Patrik Affentranger discusses the issue of toxic developers in the workplace and provides strategies for identifying and dealing with them. He emphasizes the impact that toxic behavior can have on individuals and teams, and aims to help individuals regain their focus and passion for their work. He acknowledges that he is not an HR professional, team leader, or mental health specialist, but rather a front-end web developer who cares about workplace culture. He defines toxic behavior as a combination of various traits, such as negativity, gossiping, and lack of accountability. He introduces the character of Alice, who regularly misses work and is not productive, yet has opinions about everything happening in the office.The video discusses three types of toxic developers: Alice, who lacks motivation and productivity but still offers unsolicited opinions; Bob, who is overly critical and dismissive of others' ideas while pushing his own agenda; and Charlie, who takes credit for others' ideas and dismisses their input. It is important to distinguish between difficult developers and toxic developers, as the former may simply have bad days or social anxiety. Toxic developers can negatively impact their peers, causing them to self-sacrifice by changing their work to please the toxic developer, avoiding interaction, or resorting to flattery.Toxic behavior in the workplace can have a negative impact on mental health and productivity. It can lead to self-doubt, lack of concentration, and fear of interacting with the toxic person. People may resort to avoiding interaction or flattery to maintain peace, but this can lead to a negative impact on their work. The toxic behavior can also affect the team's productivity. To deal with a toxic developer, it's important to address the behavior and not enable it. This can be done by setting boundaries, addressing the behavior directly, and seeking support from HR or a supervisor.The speaker discusses how to deal with toxic behavior in the workplace, specifically focusing on the role of enablers. Enablers are individuals who witness toxic behavior but do nothing to address it, whether they are bystanders, co-workers, or managers. The speaker advises individuals to focus on what they can control, build resilience, and prioritize their work. They should not change their approach based on one person's opinion and should choose their battles wisely. When challenging toxic behavior, individuals should ask questions and not become enablers themselves. They should also stick with their passion and surround themselves with mentors who can provide advice and support. Finally, the speaker emphasizes the importance of taking care of oneself and getting a good night's sleep while waiting for change to occur.The speaker discusses the issue of toxic behavior in the workplace and offers advice on how to handle it. They emphasize the importance of getting a good night's sleep and being a positive influence in the environment. They suggest raising issues with team leaders and managers and supporting teammates who may be impacted by toxic behavior. The speaker also encourages communication and taking responsibility for identifying toxic behavior within organizations. They conclude by stating that awareness gives us power and urges everyone to be nice to each other."
1ZurB1gCVP8,00:00:00,Every good outage starts with a queue,"Queues are bad, but software developers love them. The problem with queues is they are binary, either they're full or empty. You'd think they would magically fix any overload or failure problem. But they don't, and bring with them a bunch of their own problems.\n\nHear a war-story about how naive assumptions and over-optimism caused a near week-long ongoing outage.\n\nLearn about some of the reasons why queues are not a one-size fits all solution, and how there is no such thing as a good queue, only one that is absolutely necessary. Queues are in more places than you think, and they can bite you in ways that you wont expect.\n\nAre you building event sourced systems with process managers and read model populators? Are you working with serverless? This session is for you.\n\nI am a Software Developer with over 7 years of experience building highly-scalable distributed systems. I'm an advocate for modern design patterns and architectures such as Domain Driven Design, Event Sourcing and CQRS. I am also passionate about mentoring and volunteering my time to helping others grow.",Macklin Hartley,"Macklin Hartley discusses the problems with queues in distributed messaging systems. He shares a war-story about how naive assumptions and over-optimism caused a near week-long ongoing outage. He explains that queues are not a one-size fits all solution and that there is no such thing as a good queue, only one that is absolutely necessary. Macklin is a Software Developer with over 7 years of experience building highly-scalable distributed systems. He advocates for modern design patterns and architectures such as Domain Driven Design, Event Sourcing and CQRS. He also mentors and volunteers his time to helping others grow.Queues offer a logical separation between message publishers and downstream processes, acting as a shock absorber and providing a persistence mechanism for later data processing. In a system using queues, a message proxy was introduced to listen to messages from a third-party system and store them for later processing. However, if the message proxy fails to send a message to a tenant, there is a potential loss of data. To address this, a queue was introduced, allowing for retries without keeping requests open. Lessons learned include the importance of observability and monitoring in distributed systems. Neglecting to configure monitoring tools can lead to missed details and potential issues.The speaker discusses the importance of monitoring metrics related to the performance of queues in a system. They highlight the metric of queue depth and how it can impact response times and cause delays. The speaker also discusses the issue of throughput and how adding more queues does not necessarily equate to more throughput. They emphasize the importance of understanding external factors that can impact system throughput. Overall, the speaker provides valuable insights into optimizing system performance through effective monitoring and understanding of key metrics.The video discusses the challenges faced by a distributed system in terms of throughput and how external factors can impact it. The system used sequential queues to send messages, which limited the throughput to 30 messages per minute when the response time of the tenant increased. The video explores different solutions, including batching and fan-out, to process messages concurrently and improve throughput. Ultimately, the fan-out approach was successful in improving the system's performance.The speaker discusses the limitations and proper usage of queues in large-scale systems. They suggest monitoring queue performance metrics such as queue depth and understanding the throughput and load limitations of the system. The speaker also mentions the use of sharding to distribute messages evenly across multiple process managers. It is important to understand the behavior of external systems and not make assumptions about their behavior. The speaker works for vgw and encourages attendees to visit their coffee cart or reach out on Twitter. The talk concludes with a reminder that queues are a powerful tool but must be used thoughtfully to avoid issues.The transcript is not suitable for experts as it lacks context and content. Please provide a specific video or topic to condense."
64W8d8d3lrs,00:00:00,How to win friends and comply with the Notifiable Data Breaches scheme*,The \,Cairo Malet,"Cairo Malet, an information security consultant and lead for the Australian Women in Security Network, discusses the Privacy Amendment Notifiable Data Breaches Act of 2017. This act established breach notification obligations for entities subject to the Privacy Act, which is Australia's main privacy and data protection law. The act defines personal information as information that makes an individual person known, but this definition can be vague and subject to interpretation. The Office of the Australian Information Commission is the main enforcement body for the Privacy Act and can investigate violations of privacy through complaints from individuals or on their own accord.The Office of the Australian Information Commission (OAIC) is the main enforcement body for the Privacy Act and is empowered to investigate violations of privacy. They accept complaints from individuals or initiate investigations on their own accord. However, they are chronically underfunded and have a four-week wait time for general email requests. The OAIC has the power to take legal action against organizations that violate the Privacy Act and can issue fines of up to three million dollars. They can also enforce undertakings, which is a legally enforceable agreement that organizations will do everything the OAIC tells them to do to remediate any issues. The Notifiable Data Breach Scheme sets out the notification requirements for entities that have experienced a breach. The scheme applies to all organizations subject to the Privacy Act, including businesses, government agencies, and not-for-profit groups that collect personal information. However, there are exceptions to this, such as businesses with an annual turnover of less than three million dollars, but if they handle tax file numbers or health and medical information, they still need to comply with the scheme. The scheme is important as it allows individuals to be notified if their data has been breached and allows the OAIC to gather statistics on data breaches.The Privacy Act in Australia has exceptions, such as not applying to businesses with an annual turnover of less than three million dollars, state or territory agencies, registered political parties, and employee records covered by workplace relations legislation. However, if an organization outsources the management of employee records, it is subject to the notifiable data breaches scheme. To be eligible for notification, a breach must involve unauthorized access or disclosure of personal information that is likely to result in serious harm to the individual. The definition of serious harm includes physical, psychological, emotional, economic, financial, and reputational harm, but there is no legal definition. Organizations are responsible for determining the likelihood of serious harm, which may not account for outliers who are most vulnerable to harm, such as victims of domestic violence or those with sensitive medical histories.The speaker discusses the limitations of impact assessments in determining the likelihood of harm for vulnerable individuals, such as victims of domestic violence or those with sensitive medical histories. They also explain the exceptions for when breaches are ineligible for notification, such as when incident response activities have reduced the likelihood of serious harm or when notification would interfere with law enforcement activity. The requirements for notifications to individuals are outlined, including the organization's name and contact information, a description of the breach, and recommendations for next steps to protect oneself. If direct notification is not possible, a statement covering the breach must be published and publicized.The speaker discusses the importance of complying with breach notification laws and regulations, specifically in Australia. They mention that organizations must take proactive steps to notify individuals of a breach, even if they do not have direct contact information. The Office of the Australian Information Commissioner (OAIC) has made it easy for organizations to notify them of a breach. The speaker advises organizations to know what information they are storing, where it is stored, and how it is protected. They also suggest considering what information is collected and why, having incident response plans in place, and having a communication plan in case of a breach. The speaker invites questions and discussion on the topic."
4XC9qeLDLqc,00:00:00,Failure 101: What life lessons can teach us about better software development,"Much like software development, life is full of mistakes, mis-steps and broken ambitions; the failed career, burnt toast, the not-quite-what-I-ordered item you bought online. \n\nLet's face it, working in software development is hard and we've all been the victim of a failed development project, dissatisfied stakeholders and abandoned half-functional prototypes. And if you've ever taken part in the post-mortem retrospective of failed project, you know that sometimes it's not exactly clear where a project falls down. \n\nUsing a series of mistakes from my life, this talk will walk you through identifying three pitfalls that cause failure in software development, and how we can learn to avoid them. \n\nNo experience necessary\n20 mins\nCore/Non Technical Skills\nSarah began their career as a Medical Scientist where they explored genetic data before transitioning to the Technology industry. Since then, Sarah has worked in multiple areas including research, incident management, software development, and delivery.\n\nThis has sparked their passion in bringing people together and supporting teams to use data to drive the best outcome for customers, stakeholders and business.",Sarah McGeough,"Sarah McGeough's talk, ""Failure 101: What life lessons can teach us about better software development,"" draws parallels between the mistakes and failures we experience in life and those we encounter in software development. As someone who has worked in various industries, including incident and problem management, software development, and as a scrum master, Sarah has seen what causes projects to fail. In this talk, she identifies three pitfalls that lead to failure in software development and shares how we can learn to avoid them. Using personal examples, Sarah illustrates how small mistakes can snowball into big failures. Ultimately, the talk emphasizes the importance of learning from failure and using those lessons to improve our approach to software development.The speaker discusses the importance of avoiding assumptions and clearly communicating requirements to prevent mistakes and failures. They use a personal example from their childhood where they assumed a running race was the same as hurdles, causing a domino effect of falls. The speaker emphasizes the need to validate assumptions, ask questions, and ensure a shared understanding of requirements. They also mention examples of failures caused by assumptions, such as the failed Mars probe and building an API in the wrong language. The speaker encourages taking the time to document requirements for future reference.The speaker shares a personal experience of working on a biochemistry thesis investigating potential causes of liver disease. The liver is the body's central hub for metabolism, with about 135 pathways. The speaker's team focused on two pathways, specifically how the body breaks down fats and how the body metabolizes iron, and looked at what happens between these pathways when the liver gets stressed. They selected gene targets, determined experimental controls, and worked for three months, testing each target. They came together as a lab group to share their proof of concept, and all the gene targets they thought would be active were, and the ones they thought would be quiet weren't showing any results. They carried on with their work for the next 12 months, testing the targets many times and crunching a lot of data. However, when they came together again, they found that their results didn't line up. They had effectively failed to test everything they should have, relying on the equivalent of unit tests for their entire measure of quality and not testing the entire process end to end. This inadequate testing also contributed to the failure of TSB bank's software migration in 2018, costing them 330 million pounds and losing them 80,000 customers.Inadequate testing can lead to costly mistakes, as seen in the failure of TSB bank's software migration in 2018. To overcome a lack of testing, consult subject matter experts and consider both happy and unhappy paths in testing. The speaker, a stress baker, was asked to bake a cake in the shape of King Julien from the movie Madagascar for a friend's 21st birthday party. Despite her expertise in baking, she faced challenges when pre-ordered ingredients were unavailable and had to improvise with substitutes. She also had to deal with interruptions, such as picking up the birthday present, which delayed the cake-making process.The speaker shares a personal experience of poor planning and how it led to a subpar cake. They emphasize the importance of involving stakeholders early, planning for unexpected changes, and delivering a minimum viable product. They also highlight the impact of poor planning on projects, citing a costly example from the U.S national gas company's ERP update. The speaker encourages asking key questions to avoid failure in software projects, such as ensuring everyone is on the same page and documenting understanding.The speaker discusses the importance of learning from mistakes and failures in software development. They suggest asking three key questions to ensure success: 1) Are all team members on the same page and is their understanding documented? 2) Have all parts of development and testing been considered? 3) Is there a contingency plan in place for when things go wrong? By answering yes to these questions, one can avoid small mistakes snowballing into larger failures."
-pQAUKmN0-w,00:00:00,Everything is a Feature Toggle,"High performing teams require the ability to deploy code to production on demand, multiple times a day. Continuous delivery techniques such as trunk-based development have demanded the use of patterns that reduce batch size and deployment risk.\n\nFeature Toggles have emerged as a powerful pattern for enabling developers to deploy to production on-demand with confidence. Most developers will use the Feature Toggle pattern in some form through their journey - sometimes without being aware of it.\n\nIn this talk, I propose the question; what exactly is a Feature Toggle? What happens if we apply the definition to all code? Could the definition of a feature toggle be broader than most expect?\n\n--\nI am a Software Developer with over 7 years of experience building highly-scalable distributed systems. I'm passionate for modern design patterns and architectures such as Domain Driven Design, Event Sourcing and CQRS. I am an advocate for creating cultures of ownership, accountability, transparency and trust. I'm a strong believer in the value of Continuous Delivery, and deploying software frequently with a high degree of automation.",Macklin Hartley,"Macklin Hartley discusses the importance of feature toggles in enabling developers to deploy code to production on demand with confidence. He proposes the question of what exactly is a feature toggle and whether its definition could be broader than most expect. He emphasizes the value of continuous delivery and creating cultures of ownership, accountability, transparency, and trust. Hartley uses an image from the movie ""The Martian"" to illustrate the opposite of what we want to do in the real world, which is to prevent anything from going wrong. He highlights the real problem with the people in mission control, who have no agency to help fix the problem when an incident occurs.The video discusses the challenges faced by the characters in the movie ""The Martian"" and draws parallels to the history of software development, specifically the release of Microsoft Windows Vista. The speaker highlights the importance of testing and preparation in software development and the need for better communication and support for customers. They introduce the concept of feature toggles as a solution to these issues.The speaker discusses the history and importance of feature toggles in software development. They mention a book written by Microsoft engineers in 1995 that outlined a 10-step process for software development, which is now known as trunk-based development. ThoughtWorks also pushed for continuous integration around the same time. However, the introduction of Git and GitHub brought about distributed version control and lightweight branching, which added friction to the process of merging software into a product. This led to the development of feature toggles, which allow for the easy activation and deactivation of features in software. The speaker recommends books such as ""Continuous Delivery"" and ""Accelerate"" for further reading on the topic.experts in the field of continuous delivery and DevOps advocate for high degrees of automation, avoiding manual testing, and trunk-based development. Trunk-based development involves committing small changes to the main branch instead of keeping features to oneself and building upon them. This approach reduces the risk of collisions and enables continuous integration. Feature toggles are a software engineering technique that enables feature life cycle management with or without deploying new code.The video discusses the concept of feature toggles, which are a software engineering technique for managing the lifecycle of features in a software application. The video provides a code example of a feature toggle and discusses the various aspects of its implementation, such as where the value of the toggle is stored, when it is evaluated, and how long it is meant to last. The video also highlights the limitations of an interface in describing the behavior of a feature toggle and suggests an implementation approach for a feature toggle service called ""always off.""The speaker discusses the concept of feature toggles, which are used to turn on or off certain features in software. They demonstrate how to implement a feature toggle service called ""always off,"" which always returns false. They then refactor the code to remove unnecessary code and create a ""static toggle,"" which is a feature toggle that is persisted in code and always returns the same value. The speaker explains how static toggles can be used for ""branching by abstraction,"" which allows for the replacement of old code with new code while ensuring that the new code is not executed until it is ready.can use feature toggles to safely add new features to your codebase without impacting production. By using an always-off toggle, you can ensure that the new code path is not executed until you are ready to test it. Once you are satisfied with the new code, you can switch the toggle to always-on and remove the old code. This approach is known as branch by abstraction and can be used to incrementally add new features to your codebase. 

To implement a feature toggle, you can add it in front of the new code path and default it to always-off. You can then write unit tests for both the old and new code paths and use the toggle to switch between them. Static toggles, which are always-off or always-on, can be plotted on a graph based on their longevity and evaluation. They are considered release toggles and can be used to safely add new features to your codebase.The speaker discusses different types of feature toggles, including static toggles, environment toggles, and application toggles. Static toggles are used for short-term collaboration on new code and are evaluated statically. Environment toggles are evaluated at build time or startup and are used for integration and UAT testing. Application toggles are the most flexible and can be persisted in various ways, such as a SQL database, and can be evaluated at startup or per request. The speaker also mentions the possibility of creating a user toggle with two parameters instead of one.The speaker discusses different types of feature toggles, which are used to enable or disable certain features in an application. They can be toggled on or off at startup or per request, and can be used for canary releases, A/B testing, and operational purposes. The speaker explains three types of experiment toggles: canary toggles, calculated toggles, and circuit breakers. Canary toggles are based on user identifiers and are evaluated per request, while calculated toggles use a calculation of user attributes to split traffic and are also evaluated per request. Circuit breakers are based on the system's health and are evaluated per request, and can be used to disable features if the system is not functioning properly. The speaker also mentions kill switches, which are manually managed circuit breakers used to disable entire endpoints. These feature toggles are useful for operational purposes and can last longer in the system.This transcript discusses feature toggles, which are used to control the release of new features in software development. There are three types of feature toggles: release toggles, operational toggles, and customization toggles. Release toggles are used to control the release of new features to users, while operational toggles are used to manage system performance and prevent abuse. Customization toggles allow users to opt-in to certain features. The transcript also discusses the use of feature branches in software development and how feature toggles can be used as an alternative. It is important to note that long-lived feature toggles can become irrelevant or cause conflicts, so they should be removed when no longer needed.Feature toggles should either be permanently on or off, and if they have been running for a long time, they should be removed. It is important to proactively remove feature toggles and ensure that they have an expiry date. Naming feature toggles should be specific and avoid indirection or being cutesy. It is also important to have an audit log when using feature toggles to track changes and potential issues.The speaker discusses the importance of having an audit log when using feature toggles in software development, as changes to the application can cause debugging problems. They explain the different types of feature toggles and how to use an audit log for each type. The speaker also emphasizes the importance of proactive removal of feature toggles, deliberate and descriptive naming, and drawing from past failures and lessons learned in software development. They mention the trade-offs of using feature toggles and how they can be used as a tool to plan for the unexpected. The speaker thanks the sponsors and mentions that they work for a company that uses feature toggles extensively and is hiring.The speaker thanks the sponsors and mentions that they work for a company that specializes in feature toggles. They use them frequently and experiment with different versions. The speaker also mentions that their company is hiring and encourages interested individuals to speak with them or visit their booth for more information. As a bonus, they offer free socks to those who haven't received them yet."
lRYwBQNIi7Y,00:00:00,Building Highly Engaged Teams,"Hiring and retaining good people is hard but super critical. A high performing team delivers, has fun and kicks goals.\n\nOver the years I have become known for hiring and spotting good talent. I have had compliments from senior architects and leaders on the quality of people I choose for my teams.\n\nHiring is an art form and a challenging endeavour. Get it wrong and you will pay the price.\n\nSo how do you attract top talent and maintain top class engagement scores?",Will Webster,"Will Webster, a software engineer and scrum master, shares his expertise on building highly engaged teams in this talk. He emphasizes the importance of hiring and retaining good talent, which can be challenging but critical for a high-performing team. Will shares his hiring process, which includes taking time to review CVs, conducting phone interviews, interviewing in pairs, and administering code tests for software engineers and solution architects. He also advises moving quickly when finding good talent and starting small before growing too quickly. Will's experience includes working with Bankwest during their agile transformation and presently working for BHP in the strategy and innovation department.sense of the complex and helps the team to make better decisions. The glue person, this person is the social lubricant of the team, they make sure everyone is happy, they organize social events, they make sure everyone is communicating effectively and they're the ones that will pick up on any tensions or issues within the team and address them before they become a problem. The architect, this person is responsible for the overall design of the system, they're the ones that will make sure that everything fits together and that the system is scalable and maintainable. They're also responsible for making sure that the team is following best practices and that the code is of a high quality. Finally, the product owner, this person is responsible for the overall vision of the product, they're the ones that will make sure that the team is building the right thing and that it's meeting the needs of the customers. They're also responsible for prioritizing the backlog and making sure that the team is working on the most important things first. So, if you can build a team with these different character types and make sure that they're all working together effectively, then you'll have a team that can achieve great things.The speaker discusses the importance of having a diverse team with different character types and mindsets in order to create a productive and effective team. They emphasize the value of a teacher, an energizer, and a heart in a team. The speaker also warns against the DEF March, a situation where a project becomes unachievable due to unrealistic promises and fixed pricing, leading to a loss of motivation and a negative work culture. Overall, the speaker stresses the importance of crafting a team that works well together and is able to collaborate effectively.The speaker discusses the importance of creating a work environment that encourages investment and engagement in software development. This can be achieved through clear communication of company strategy, transparency in company results, and providing reference points for team initiatives. The speaker emphasizes the importance of self-organization and creating a safe environment where team members can speak up and challenge each other. The goal is to create a team that takes ownership of their work and feels empowered to try new things. The speaker also mentions the importance of honesty and asking questions when things are not going well. Overall, the focus is on creating an effective and engaged team that feels respected and valued.The speaker discusses the importance of creating effective teams in the tech industry. They emphasize the need for team members to have autonomy, respect, and the ability to work together to solve problems. The speaker also stresses the importance of honesty and setting clear expectations for team members who may be struggling. They suggest creating team norms and holding each other accountable to them. The speaker encourages leaders to treat team members fairly and get to know them on a personal level. They also emphasize the importance of having fun and exhibiting positive, engaged, and professional behavior to stay valuable to the team and customers."
Fg65FcphRx8,00:00:00,Training a PowerPoint AI to Play Tic Tac Toe,"How does machine learning actually work? Is it something set aside from us mere mortals, only for the maths nerds with super-computers?\n\nUsing basic concepts we will go through how common machine learning algorithms work from first principles.\n\nIf someone were mad enough, they could even apply these basic concepts to build an Artificial Intelligence out of, say, a Microsoft PowerPoint...\n\nBut no one in their right mind would be crazy enough to do that.\n\nRight?\n\nBased on the Matchbox Educable Noughts And Crosses Engine (MENACE) built by Donald Michie in 1961, this talk strips the complexity and mystery from the black box that is machine learning: Proving that even a PowerPoint (mixed with a few lonely nights and almost 2,000 slides) can be taught the best opening moves of Tic Tac Toe.\n\nFinally, a truly no-code solution for machine learning enthusiasts.\n\nNo prior knowledge of Machine Learning, AI, or data science is needed.\n\nNo experience necessary\n45 mins\nAI \u0026 ML\nI am a data analytics advocate with an emphasis on generating people first insights.\n\nI come from a unique background with a Bachelor of Science majoring in Mathematics and Psychological Science, and a Master of Applied Artificial Intelligence on the way. I look for unique problem-solving opportunities and thrive in complex environments.\n\nI am passionate about all things data but have a keen interest in the development of machine learning in combination with traditional BI analytics. My role as a consultant keeps me close to the ground, giving me an insight into the technologies being used across many different domains.\n\nOutside of my role as a consultant, I help others get into the data field by teaching the Data Analytics Bootcamp at the University of Western Australia.\n\nData is a rapidly growing domain. It is my vision to spread awareness of the power that comes with taking control of data.",Brenton Adey,"Brenton Adey, a data analytics advocate, gave a talk on machine learning and artificial intelligence (AI), specifically focusing on the Matchbox Educable Noughts And Crosses Engine (MENACE) built by Donald Michie in 1961. He stripped away the complexity and mystery of machine learning, proving that even a Microsoft PowerPoint can be taught the best opening moves of Tic Tac Toe. Brenton emphasized that no prior knowledge of machine learning, AI, or data science is needed for his talk. He also discussed his background in mathematics and psychological science, as well as his passion for spreading awareness of the power of data. The talk was not about PowerPoint or Tic Tac Toe, but rather an introduction to machine learning and AI.This talk is about machine learning and its applicability to various scenarios, including PowerPoint presentations. The speaker explains that machine learning is not just for big data or large-scale computing, and it is not magic. Instead, it is a way of constructing a model that describes things about the real world without having to explicitly program every detail. The speaker uses examples from everyday life to illustrate how we transfer knowledge from the known to the unknown through learning. The talk does not delve into complex mathematics, but rather focuses on the fundamental principles of machine learning.to measure the success of our model. We need to decide what the model is trying to do and how we can score it. Once we have defined the test, we need to find a way to reward or punish the model based on its performance. This is the basic idea behind machine learning.

There are different types of machine learning, such as supervised, unsupervised, reinforcement learning, and semi-supervised learning. However, they all follow the same three basic steps.

To understand machine learning, we can use the example of predicting the outcome of a coin flip. If we have a group of people trying to predict the outcome of a coin flip, we can reward them with a cookie for every correct guess. As they make more guesses, they will start to learn the true nature of the coin. This is similar to how machine learning works.

In order to build an AI using machine learning, we need to understand these basic steps and apply them to our model. By doing so, we can create a model that can learn and improve over time, just like a student in a school.The speaker uses a metaphor of a school to explain machine learning. The school is the model and the students are instances of training. The goal is to define a test to judge how well the school performs and to determine what it means to pass or fail. Punishments and rewards are given to individual students based on their test scores. The speaker emphasizes that a model is not a machine learning model if there is no process to punish or reward it based on test scores. The speaker then gives an example of the MNIST dataset, which contains labeled handwritten digits. The goal is to create a model that can classify unseen digits as zero through nine. The simplest model is random guessing, which has an accuracy of 10%. However, this model cannot be changed based on its performance, so it is not a machine learning model.In this video, the speaker discusses the limitations of two models for recognizing handwritten digits and proposes a better approach using a neural network with a feedback propagation approach. The speaker explains that the previous models had no way to alter their behavior when they got things right or wrong, resulting in low accuracy rates of 10% and 22%. The neural network, on the other hand, has a way to reward good test scores and punish bad ones, using a cost function and stochastic gradient descent. The speaker emphasizes that while the MNIST dataset used in this example had a clear labeled objective, real-world examples may not be as clear-cut, such as transcribing piano playing into manuscript music. The speaker concludes by highlighting the importance of having a way to measure and improve model accuracy in machine learning.The transcript discusses a paper on piano transcription that attempts to accurately capture the dynamics, volume, and expression of a player. The authors claim to have discovered a new method to test the accuracy of their model, but in reality, they simply defined a test based on the average volume of the recording. The transcript emphasizes the three key principles of machine learning: defining a test, calculating a score, and providing a punishment or reward. The aim is to demonstrate that machine learning is no more complicated than any other algorithm once stripped down to its fundamentals. The transcript also mentions Arthur Samuel, who created revolutionary machine learning programs using IBM computers.In this YouTube video, the presenter discusses the process of training a PowerPoint presentation to play Tic-Tac-Toe. They explain that Tic-Tac-Toe has 255,168 possible games, but they narrow it down to training the PowerPoint to win in three moves or not lose in three moves. The AI always makes the first move in a corner, and the presenter uses reflections and rotations to ensure that the computer never makes a move that is a reflection or rotation of another state. They thank mathematician and comedian Matt Parker and programmer Tom Wilderhane for inspiring their project. The presenter argues that PowerPoint is a great tool for programming because it has text, shapes, and animations that allow for state management. The model consists of 1,830 slides, each representing a particular move from either the player or the AI. The slides contain the board and all previous steps that got them to that state.Our model consists of 1830 game states, each containing a board with the number of naughts and crosses in their relative positions to each other. We use Zoom transitions to encode all the information that got us to the state, allowing us to back propagate through each path and get to the slide that led up to it. There are two types of turns: player's turn and AI's turn. For the player, a collection of invisible shapes with hyperlinks to the relevant slide are on every single blank space. For the AI, there is also a collection of invisible shapes that blink at semi-random intervals, with only one visible at a given time. Our model currently predicts 50/50 on a coin toss, but we want to optimize it for playing Tic-Tac-Toe using machine learning. Our test is whether the AI wins or loses in three moves, and our score considers three results: pass (AI wins), neutral (neither player wins), and fail (AI loses).In this video, the speaker discusses how to train an AI to play tic-tac-toe. They explain that the number of winning games is not evenly distributed among the total number of games, and they propose a scoring system that rewards the AI for passing (winning in three moves) and punishes it for failing (losing). They use an absurd arrangement of shapes to represent the probability of moving from one state to another, and they back propagate through every state to encourage the AI to make good plays and discourage bad ones. Overall, the speaker provides a detailed explanation of how to train an AI to play tic-tac-toe effectively.This transcript discusses the use of machine learning in a PowerPoint presentation. The presenter demonstrates how an AI can be trained to make better choices in a game by learning from its mistakes. The process involves creating a PowerPoint deck with different slides representing different choices, and the AI learns which slides lead to winning outcomes and which lead to losing outcomes. The presenter emphasizes the difference between traditional control logic and the machine learning approach, which allows us to tackle problems that we couldn't possibly know how to solve using traditional methods. The presenter also discusses the importance of testing, scoring, and providing feedback in the machine learning process.The speaker discusses the use of machine learning in testing and provides an example of using PowerPoint to create an AI for playing Tic-Tac-Toe. They emphasize the importance of understanding the problem before diving into solutions and recommend resources for learning more about neural networks and deep learning. The speaker also thanks the sponsors and volunteers of the event and takes questions from the audience.The speaker discusses the different types of AI, including statistical models and natural language processing, and emphasizes the fundamental role of machine learning. They showcase a project involving training an AI to play the game Go using a PowerPoint presentation with manually inputted rewards and punishments. The speaker notes that this was a fun exploration and not something they would likely do again. They also mention the use of macros to insert slides but emphasize that this did not play a role in the actual training of the AI."
mzYKUKIQF54,00:00:00,Is there a naked Emperor in your development team?,"It's a little-known fact, but naked Emperors pose the biggest threat to Test Automation.  In this talk you will learn how to spot a naked Emperor in your dev team - and more importantly, make sure you don't become one yourself!  Embarrassing!!\n\nA thought-provoking but practical guide to the magic ingredient that will allow you to create great Test Automation.\n\nNo experience necessary\n10 mins (lightning talk)\nLeadership/Management\nDon has been an active member of the Perth IT community since the early 1990s and loves being part of the continuous reinvention that our industry offers.  If you've been to DDD before, you will have seen Don manning the coffee cart at every DDD conference.\n \nHe has a broad background across almost every area of IT, and bakes together this experience as a Principle Consultant for Planit.  His passion has always been leading people - from 1:1 mentoring, workshopping solutions with clients, through to full enterprise digital transformation. \n\nDon believes helping development teams achieve better quality, and enjoy themselves while doing it, is how he measures success.",Don Sharp,"Don Sharp's lightning talk is about the biggest threat to Test Automation - naked Emperors. He explains how to spot a naked Emperor in your development team and how to avoid becoming one yourself. Don believes that helping development teams achieve better quality and enjoy themselves while doing it is how he measures success. He tells the story of an Emperor who is fixated on his looks and wants a magical outfit that makes him look magnificent 24 hours a day. The two developers he hires to create the outfit are so good that they are thought to be magicians. Don uses this story to illustrate the importance of not being blinded by the hype and buzzwords in the industry and to focus on practical solutions for successful Test Automation.In this story, two talented craftsmen are tasked with creating a magnificent outfit for an emperor who wants to look magical and magnificent 24/7. However, they are locked away in a room with no fabric to work with. They come up with an idea to create an outfit that is so spectacular that only loyal subjects can see it. The emperor falls for the trick and parades around town in his ""magical"" outfit, but one man calls out the truth, embarrassing the emperor. The story is used to illustrate the importance of honesty and transparency in test automation, as developers can sometimes create impressive-looking systems that are actually flawed.The speaker discusses the importance of having a strong foundation, or ""fabric,"" when building test automation. Without good tests, the automation is essentially useless. The speaker emphasizes that testers are a specialized breed and that while many testers have some coding experience, it does not make them developers. Similarly, developers should not be expected to be professional testers. Professional testers have a different mindset and skill set, and have spent years training and learning in their profession. The speaker stresses the importance of recognizing and respecting the different roles and specialties within a team.The speaker discusses the importance of professional testers in creating great test automation. He explains that testers have a different mindset than developers and have spent years training in their profession to create effective tests. The speaker also warns against being a ""naked Emperor"" by asking developers to do things without the necessary fabric or tools. He encourages individuals to call out environments lacking in great fabric to avoid being exposed and embarrassed. The talk provides two key takeaways: the importance of professional testers in creating great test automation and the need to speak up when lacking necessary tools."
K-TfDaxh1Ac,00:00:00,"Mobile App Development - Crossing the platforms, dotting the notation","Mobile app development has come a long way since it first burst onto the scene. In this talk we’ll look at the lay of the land, focusing largely on the current landscape and the tools which are available to the modern mobile developer.\n\nAs developers we currently have many different routes to realise our applications on mobile devices. From native languages, cross platform development tools such as React Native and the new “app like”, Progressive Web Apps.  We’ll delve into exactly what these differing platforms are, their strengths and weaknesses and in which circumstances each may be appropriate to use.\n\nOriginally from Scotland, I moved to Perth 4 years ago to enjoy the much sunnier climate!  Having worked in a variety of programming roles across a wide breadth of industries for nearly 20 years, I finally fell into mobile development in 2011 and never looked back.  I currently work at Adapptor in the Perth CBD who are a mobile focused development team who I've been with for a year and a half.",Dave Cumming,"In 2008, Apple released Xcode with the iOS SDK built in, allowing developers to create apps for the iPhone. They also launched the App Store, which now has over 2.2 million iOS applications. Google released Android in late 2008, which uses the portable Java language and has its own Play Store with 2.6 million apps. Apple released Swift in 2014, a cleaner and more modern programming language, while Android still uses Java but some developers are moving towards Kotlin. Developing for both platforms requires two different teams or finding a developer who is skilled in both. Apache Cordova, previously known as PhoneGap, allows developers to use web technologies such as HTML5, CSS, and JavaScript to create apps that can run on any device with a web browser. However, this approach has limitations in terms of accessing device hardware and performance. Parcel solutions are used by some companies to streamline development.discusses the use of native rendering applications and the benefits of having an app that looks the same on both platforms. The speaker then introduces the use of parcel solutions, including Swagger and Squid DB, to connect a web API, perform business logic, and store data in a database in a cross-platform manner. The speaker also discusses the popular framework React Native, which uses native APIs to render truly native front ends and implements a flavor of flexbox for layout. To demonstrate the time-saving benefits of cross-platform development, the speaker built an app about their cat in Swift, Android, and React Native, with React Native requiring only 52 lines of code for the same functionality.Cross-platform development is a set of tools or frameworks that reduce the overhead of writing for multiple platforms. It can be useful if it delivers what you're looking for and provides a saving. React Native is a popular cross-platform development tool that allows developers to write code in a single language, JavaScript, and avoid duplicating code. Flutter is another tool developed by Google that uses its own programming language, Dart, and renders its own components to a canvas. Progressive Web Apps (PWA) are websites on steroids that work on every browser and device, and are always up to date and instantly available. PWAs are not a framework, but a set of technologies bundled together under this title. They are bound by what you can do on the web, but are becoming more powerful over time.Cross-platform development is a set of tools or frameworks that reduce the overhead of writing for multiple platforms. It can be useful if it delivers what you're looking for and provides a saving. However, if you don't get the performance you're looking for, it's probably not worth it. For standard type apps, it's a good thing to do if you're going to deploy to both platforms. The solution that's right for you depends on your specific use case. If you want cutting edge and the best performance, pure native is still a great choice. If you're already building native apps, parcel solutions can help do some of the heavy lifting for you. If you've got a web-based team already, one of the web-based frameworks such as Flutter, React Native, or Cordova might be your answer. Xamarin is great if you've got a C-sharp/.NET team. PWAs might be your answer if you want a quick and easy solution, but it's never going to look like a native app. The answer is really in figuring out what's important to you and matching it with the solution that fits your specific use case. Cross-platform development is not always the answer, and it can be difficult in some cases. For example, rendering two maps on a single screen was working perfectly in iOS, but on Android, the second screen wasn't rendering correctly. We had to delve down to the native code and tweak it. If you don't have those skills, you wouldn't be able to do that. If you're relying on a web developer as your solution to get on a native platform, you can hit those kinds of issues."
7xTrVqtU0to,00:00:00,This Talk Has Been Disabled,"Depending on who you ask, 15-20% of the world's population has some form of disability. Despite this, the vast majority of software isn't fully accessible. Building truly accessible systems starts with asking questions. What does it mean to be disabled? How do we know whether people can use our website? And what if our users have access issues that we don't know about?\n\nMany of these core concepts are covered by the Web Content Accessibility Guidelines, which are the governing standard for web accessibility. However, some scenarios require us to dig a little deeper. We'll look at situations where you might need to think beyond the guidelines, and some of the resources and tools that you can use to help you do so.\n\nFinally, we'll learn how to meet a variety of different accessibility requirements by breaking down a series of real-world case studies. We'll take a magnifying glass to a large tech company's user interfaces, time travel back to the GeoCities era, apply some concepts from emergency press conferences to online content delivery, hack a life-saving medical device, and attempt to navigate technical events (and stairs). By the end of the talk, you should understand why it's important to evaluate the accessibility of your software, what goes wrong when assessments don't happen, and how to apply these lessons to design systems that work for everyone.\n\nNo experience necessary\n45 mins\nDesign \u0026 UX\nDawn likes to tinker with cloud infrastructure and security, and regularly goes down rabbit holes in a futile search for ways to develop systems that are both reliable and impenetrable. As well as accidental accessibility advocacy, Dawn can regularly be found sharing knowledge within the Melbourne cloud infrastructure and DevOps communities.\n\nOutside work, Dawn is an occasional author, kitchen alchemist, and raging sportsball fan.\n\n'This recording is licensed under the Creative Commons BY-NC-SA 4.0 license (https://creativecommons.org/licenses/by-nc-sa/4.0/legalcode).  References for the images and other content used in this talk can be found at https://github.com/lisushka/tthbd'",Dawn E. Collett,"The talk is about web accessibility and the fact that the majority of software is not fully accessible to people with disabilities. The speaker discusses the importance of asking questions about what it means to be disabled and how to ensure that websites are accessible to all users. The Web Content Accessibility Guidelines are mentioned as the governing standard for web accessibility, but the speaker also discusses situations where it may be necessary to go beyond these guidelines. Real-world case studies are used to demonstrate how to meet different accessibility requirements. The speaker also acknowledges the traditional owners of the land where the talk is being presented. The talk is approximately 45 minutes long and is suitable for those with experience in design and UX.The speaker begins by acknowledging the traditional owners of the land and the importance of stories taught by Aboriginal and Torres Strait Islander mentors. She is an engineer at a Melbourne consultancy that solves devops and cloudy type problems. She is also an occasional author and sports fan. The speaker is an accidental accessibility advocate, which she explains through examples of inaccessible facilities in the UK, New Zealand, and Melbourne. She defines disability as a continuing condition that restricts everyday activities, accessibility as the degree to which an activity can be done by everyone, and adaptive technology as tools that disabled people use to improve access.In this video, the speaker discusses adaptive technology and its importance in improving accessibility for disabled individuals. They explain that adaptive technology includes tools such as screen readers and augmentative communication devices. The speaker also discusses the two different ways of defining disability: the medical model and the social model. The medical model views disability as a problem that needs to be cured, while the social model focuses on changing the environment to make it more accessible for disabled individuals. The speaker provides examples of websites that are poorly designed for accessibility, such as ongrand.net, and a successful car leasing business, Ling's Cars, which uses distinctive design elements. Overall, the video emphasizes the importance of considering accessibility in design and technology.The transcript discusses the design considerations for creating an accessible website. It highlights the importance of alt text, avoiding background issues, and using clear and simple language for those with intellectual and cognitive disabilities. The speaker provides examples of good design, such as GitHub, and recommends resources such as the Web Content Accessibility Guidelines and the U.S. Federal Plain Language Guidelines. The talk also mentions the use of Braille keyboards and haptic touch features on the iPhone for accessibility. The Ax Core Accessibility Testing Library is recommended as an open-source tool for accessibility testing.The video discusses various resources for accessible design, including the AX Core Accessibility Testing Library, the Color Oracle Desktop Filter for color blindness, a list of basic screen reader commands from the Patch Yellow Group, and the Photosensitive Epilepsy Analysis Tool from the University of Maryland. The speaker emphasizes that while guidelines are important, they do not cover all accessibility issues and may even be misleading in some cases. The speaker also shares an example of a mistake made in Atlassian Confluence, where the create page button was cut off for some users. Overall, the video provides insights and resources for experts in accessible design.The speaker discusses accessibility issues with the Confluence website, specifically the inability to create pages due to the button being cut off at the bottom of the screen. This issue was resolved by making UI elements scrollable and testing pop-up windows for accessibility. The speaker also shares a personal story about a friend's grandmother who became blind and used the Pathos website to stay connected with her religious community. The website underwent a redesign in 2017-2018, resulting in accessibility issues such as obnoxious pop-ups and auto-playing videos that made navigation difficult for visually impaired users. The speaker recommends testing websites with visually impaired individuals to identify and address accessibility issues.Pop-ups and auto-playing videos on websites can be a major accessibility issue for screen reader users. These elements can talk over the screen reader, making it difficult for users to navigate the website. Some pop-ups and videos may not have a dismiss button that works without a mouse, and some may take the screen reader into a new container, causing confusion. To improve accessibility, designers should let users decide whether they want to play videos and make it easy for keyboard navigators and screen reader users to ignore or close pop-up elements. Safari and other browsers have reader mode, which strips out everything on the website except for the text and images, making it easier for blind or visually impaired people to navigate. Designers should also check that their HTML is properly formatted and that reader mode works as expected. It's also recommended to use a screen reader yourself to test accessibility.make are to reduce the contrast and to reduce the frequency of the effect. This will help to minimize the risk of triggering seizures in people with photosensitive epilepsy. Additionally, it's important to ensure that your website is accessible to people with disabilities, including those who are blind or visually impaired. This means properly formatting your HTML and testing your website with a screen reader. Finally, while it may be tempting to incorporate elements of the geocities era into your website design, it's important to be mindful of the potential risks, such as triggering seizures in people with photosensitive epilepsy.The video discusses photosensitivity and colorblindness in relation to web design. It suggests avoiding flashing, flickering, and strobing effects, and using low contrast and small elements if they are necessary. It also recommends giving users the option to disable animation. The video then discusses a case study in esports, specifically League of Legends, where a new character introduced a mechanic called gray health, which was difficult for colorblind players to distinguish from regular health. This caused issues for professional players who needed to be able to see this information to do their job. The video emphasizes the importance of considering accessibility in all aspects of design, including in the world of esports.The video discusses the importance of designing for colorblindness in professional gaming, as it is crucial for players to be able to distinguish between colors and contrasts. The use of contrast checkers and designing for different types of colorblindness, including blue and no color vision, is emphasized. The video also touches on the importance of accessibility in general, including sign language interpretation and captions for the deaf and hard of hearing. The use of automated captioning solutions is cautioned against, as they may not always be reliable. Overall, the video stresses the importance of user acceptance testing and designing with meaningful icons and information to ensure accessibility for all.The video discusses the importance of providing transcripts for any spoken audio on websites and captioning videos for accessibility. It highlights the issues faced by text-reliant individuals, including those with hearing impairments, sensory processing disorders, and ADHD. The video also mentions the importance of human review for automated transcription software and provides examples of good and bad practices in this area. The video then discusses a case study involving a security flaw in Medtronic mini-med insulin pumps, which allowed individuals to hack into the device.Recently, there have been advancements in medical technology such as the constant blood glucose monitor and the Medtronic MiniMed insulin pump. However, the insulin pump had a security flaw that allowed hackers to modify the amount of insulin delivered to the user, potentially causing harm. The FDA issued an alert and Medtronic eventually recalled the vulnerable pumps. This highlights the importance of considering security and other issues as accessibility problems in medical devices. To improve this, companies should conduct thorough security testing and promptly respond to vulnerabilities. Additionally, there have been cases where unintended users capitalized on security flaws to produce secure insulin pumps. It is important to stay informed about accessibility issues and continue learning from them.The speaker attended an event on web accessibility and noticed that the venue was not accessible for people with disabilities. There were multiple sets of stairs to get to the lift, which was the only way to access the event. The speaker pointed out the irony to the accessibility consultant giving the talk. The speaker emphasized the importance of making events accessible for everyone, including providing wheelchair accessibility, disabled bathrooms, quiet spaces, and adaptive technology like sign language interpreters and hearing loops. The speaker also stressed the importance of including people with disabilities in discussions about accessibility and listening to user feedback. Thorough testing is crucial, and it's best to have adaptive technology users test software themselves. Overall, accessibility benefits everyone, and it's essential to build accessibility into design principles from the start.The speaker emphasizes the importance of thorough testing for software accessibility, and suggests involving adaptive technology users in the testing process. They also encourage developers to consider the needs of disabled users and to listen to all user feedback. The speaker thanks colleagues for their contributions and provides contact information for further discussion. The talk was well-received by the audience."
jlpLSN9A_X4,00:00:00,Return code - human error,"In a world where ransomware can be bought for a couple of dollars and we stand in the throes of a global pandemic, we now learn that over 70% of us are comfortable with restricting peoples’ freedoms to keep Australia safe.\n\n“Quite an experience to live in fear, isn't it?” Is it inevitable that we hand over our agency or can understanding human performance help save us from cyber crime?\n\n--\nHannah is a multi-award-winning Cyber Optimisation Principal \u0026 DevSecOps Manager at Telstra.\n\nIn 2019 she won the prestigious honour of Australia’s Female Secure Coder of the Year.\n\nHer background in Cognitive Science gives her a strong understanding of people and technology; enabling her to bridge the gap between IT and Business, facilitating clear communication between the different groups.\n\nHannah's experience encompasses the software industry spectrum, from solution architecture, development, deployment to front-end users, and now Cyber Security.",Hannah McKelvie ,"Hannah McKelvie, Cyber Optimisation Principal & DevSecOps Manager at Telstra, spoke at a developer conference about the intersection of human performance and cybersecurity. She highlighted the fact that over 70% of people are comfortable with restricting freedoms to keep Australia safe, and questioned whether this is inevitable or if understanding human performance can help prevent cybercrime. Hannah has a background in Cognitive Science, which gives her a strong understanding of people and technology, and she has experience in solution architecture, development, deployment, front-end users, and now Cyber Security. She shared her personal journey, including working at IBM in the UK and Singapore, traveling to different countries, meeting her husband, and having two children.The speaker discusses her personal and professional journey, including meeting her husband on a blind date in Singapore and experiencing a military coup in Thailand. She then explains her transition to focusing on blockchain and cybersecurity, specifically devsecops and application security. She expresses her passion for breaking down barriers between security and development teams. The speaker also shares alarming statistics about cybercrime, including a 500% increase in ransomware since 2018 and a projected cost of over 250 billion globally in the next decade. She mentions the pandemic intensifying cyber attacks and the concept of a cyber pearl harbor, which has been around for nearly 30 years. The speaker concludes by discussing the human tendency to look to leaders in challenging times, referencing a leadership course she attended with guest speaker Tyson Jonker Porter.The speaker discusses the human tendency to look to leaders in challenging times and give up agency. They mention the increase in cyber crime and the possibility of a critical infrastructure attack. The speaker notes a shift in Australian sentiment towards giving up personal freedoms for the greater good. They express feeling overwhelmed by the scale of the challenges facing humanity but emphasize the importance of belief, positivity, and focus in moving forward. The speaker also introduces the catastrophic theory of reform, which involves a catastrophe followed by outcry and lagging regulation.The catastrophic theory of reform suggests that a catastrophe followed by outcry leads to regulation. This pattern has been observed throughout history, with some regulation being valuable while others are questionable. The media frenzy around incidents can lead to regulation being pushed through society. This trend is also observed in cybersecurity, with the recent Colonial Pipeline ransomware attack leading to the Transport Security Administration issuing directives for pipeline owners. Western Australia is vulnerable to cyber attacks due to its highly interconnected critical infrastructure, complex supply chain, and unique geography. The Australian government has produced a cybersecurity strategy, invested in law enforcement capability, and is focusing on critical infrastructure. They are also proposing a bill that requires notification to the ACSC prior to making any ransomware payments. The ASD 37 and Essential Eight provide guidelines and regulations for critical infrastructure industries. The ASD can also lend their expertise during critical attacks with national significance.The speaker discusses the importance of regulation in the cybersecurity industry, particularly in critical infrastructure. They also explore the concept of human and organizational performance (HOP) and its five core principles, emphasizing the need to challenge the notion of ""human error"" as the root cause of incidents. The first principle acknowledges that humans are fallible and make mistakes, and suggests ways to reduce the need for human involvement in certain processes. The second principle highlights the predictability of error-prone situations and the importance of improving design to mitigate them. The speaker also briefly touches on the DevSecOps infinity loop and the various security services offered at different stages. The third principle emphasizes the influence of individual behaviors and the need to create a culture of safety and accountability. The speaker concludes by urging the audience to adopt best practices and continue learning and improving in the field of cybersecurity.The speaker discusses four principles related to human and organizational performance in the context of security. The first principle is that humans are fallible, and therefore, manual and automated code reviews are necessary to identify errors. The second principle is that individual behaviors are influenced by beliefs, attitudes, and exposure, and presenteeism is a common behavior in the workplace. The third principle is that operational upsets can be avoided by designing resilient IT systems, modeling cybersecurity risks, and engaging cybersecurity professionals. The fourth principle is that emergency planning is crucial to contain and control catastrophic events. The speaker emphasizes the importance of planning for disaster scenarios, documenting every step, printing and laminating contact details and processes, and running tabletop exercises to increase familiarity.The speaker discusses the principles of Human and Organizational Performance (HOP) and how they can be applied to cybersecurity. HOP involves planning for emergencies, documenting every step, and running tabletop exercises to increase familiarity. The speaker emphasizes the importance of taking a forensic snapshot after an incident to gain insight into how the system was compromised. The fifth principle of HOP is management response to failure, which involves learning and improving rather than blaming and punishing. The speaker suggests running learning teams to explore potential high-severity events and near misses. Management buy-in is critical for these events, which can run for two days to allow for creativity and thoughtful solutions.topic of learning teams and how they can be used to improve processes and prevent incidents from recurring. The concept of ""soak time"" is discussed, which refers to taking a break from a situation to allow for more creative and thoughtful problem-solving. It is important to gather a diverse group of individuals with related and tangential experience to the process being examined. A third-party facilitator can help create a safe space for discussion and reduce fear of blame and reprisal. The two-day process of a learning team involves discussing anything except the actual event on day one, creating a safe space for individuals to express their concerns and opinions. Day two focuses on the actual event and mapping out how each person does their job in real life. The outcomes of a learning team include identifying how the job can be done better, acknowledging that people will drift away from defined processes, and sharing learnings to reduce the likelihood of reoccurrence.The speaker discusses the challenges faced in the cybersecurity industry, including the increasing threat of ransomware and the potential for a cyber pearl harbor. They suggest that humans tend to look for a leader in times of crisis and may hand over their agency to someone who appears to have all the answers. The speaker also explores the role of regulation in cybersecurity and the limitations of blaming and shaming individuals for human error. Instead, they propose creating safe spaces for learning and collaboration, where diverse perspectives are welcome and the focus is on improving processes and reducing the likelihood of incidents. The speaker encourages individuals not to give up their agency and to work together towards a safer cybersecurity landscape."
Im-PgWfRyF8,00:00:00,You. Are. Awesome.,"You. Are. Awesome.\nYou may not realize it, but you are awesome. You have the power to change the world. Regardless of your job title or amount of experience, I firmly believe you have amazing potential to impact the people around you in powerful and meaningful ways. My goal is to help you realize the awesomeness you already possess and be encouraged to unleash it!\n\nDavid is a family man, software developer, musician, illustrator, and Microsoft MVP living in North Georgia, USA. He is currently a Senior Developer Advocate for Okta. David runs on a high-octane mixture of caffeine and JavaScript, and is made entirely of bacon.",David Neal,"David Neal, a Senior Developer Advocate for Okta and Microsoft MVP, spoke at a conference in Perth, Australia. He expressed his belief that everyone has the potential to impact the world in meaningful ways, regardless of their job title or experience. He also shared his experiences with Australia, including playing the game ""Ty the Tasmanian Tiger"" with his sons and learning Australian slang from the game's characters. He also taught the audience some southern slang. Overall, he was impressed with the conference and the hospitality of the people in Perth.In this video, the speaker discusses Southern American slang and colloquialisms, such as ""y'all,"" ""fixin to,"" ""over yonder,"" and ""dang."" They also touch on various technology topics, such as serverless computing, IoT, and machine learning. However, the main message of the video is to encourage the audience to have a fresh perspective on their lives and careers, reminding them that they are born with fantastic skills and tools, and to not let lies and comparisons hold them back.programming or any other skill, drawing requires practice and dedication. The speaker encourages the audience to embrace their unique qualities and to stop listening to the lies that hold them back. They remind the audience that mistakes are a natural part of life and that they should not be defined by them. The speaker also emphasizes the importance of creativity and imagination, which can be developed through practice. They share their personal experience of discovering a passion for drawing and how they have improved over time through practice and dedication. The speaker encourages the audience to invest time in their passions and to never stop learning and exploring.The speaker reflects on their journey in drawing and emphasizes the importance of investing time and effort in pursuing one's passions. They believe that determination, practice, and patience are essential ingredients for success in any field. The speaker encourages the audience to recognize their own awesomeness and to maximize their strengths, but also emphasizes the importance of leaving a positive impact on others and the world around them. They believe that every encounter and situation is an opportunity to make a difference and inspire others.The speaker discusses the importance of leaving a positive impact on others and being aware of how one's actions and character are perceived. They acknowledge that people have different personalities and experiences, and that technical skills alone may not be enough to succeed in the industry. The speaker shares their personal experience of overcoming their fear of public speaking and the valuable lesson they learned about the power of community. They encourage others to develop their public speaking skills as a way to share their knowledge and inspire others. The speaker emphasizes the rare and precious reward of having someone understand and be inspired by one's message. Public speaking can open doors and opportunities.The speaker discusses the rewards of public speaking and encourages others to share their knowledge and experiences with others. They acknowledge the common feeling of impostor syndrome but emphasize that everyone has unique experiences that can be valuable to others. The speaker also shares a personal story about working under a bad boss and how it led them to adopt a philosophy of not staying in a workplace that doesn't align with their values. They encourage others in the technology industry to take advantage of their high demand and not settle for a job they don't enjoy.The speaker shares their experience of feeling unhappy at work and constantly looking for new job opportunities. However, their perspective changed when their wife asked them if they had done everything they could to make their current job successful and if they would have any regrets if they left. They declined a job offer and committed to making their team successful, which resulted in a productive year and leaving the job with no regrets. The speaker emphasizes the importance of taking ownership and responsibility in toxic work environments and the positive impact it can have on others. They also share an experiment they conducted where they posted tributes to colleagues every Friday, which resulted in positive feedback and appreciation. The speaker concludes that respect is the most fundamental principle in agile development.The speaker emphasizes the importance of respect in agile development and process improvement. Encouragement is highlighted as a way to reinforce positive behavior and create a cascading effect of positivity in the workplace. The speaker shares personal experiences of learning to be more encouraging and provides examples of how to give effective encouragement to coworkers. The speaker also shares a personal story about a Thanksgiving gathering in 1982 where they discovered a TRS-80 computer in their cousin's bedroom.The speaker recounts a personal story of how his aunt and uncle's gift of a TRS-80 computer launched him on a journey of careers and a love for technology. He emphasizes the importance of investing in others and the potential for small acts of kindness to have a significant impact on someone's life. He encourages the audience to continue learning and growing, and to share their talents and awesomeness with others. He challenges them to maximize their potential and be courageous in inspiring others."
2oakOtVlFcM,00:00:00,From imposter life to imposter moments: Tips from a Psychologist turned Engineer,"Have you ever felt like you don’t actually deserve your success? Like you don’t belong, and everyone is going to discover you’re a fraud? If so, you’re in good company.\n\nA whopping 58% of tech workers report experiencing imposter feelings currently in their career, including employees from Apple, Google, Facebook and Uber. And when I started as a software engineer, I quickly became one of them. \n\nSo why do so many of us feel like we’re undeserving of our success? What’s the cause of this industry-wide lack of self-confidence? And what can we do about it?\n\nI needed answers. Because as a former-psychologist, I should be able to fix this in no-time, right? (wrong…)\n\nIn this talk, join me on my journey of changing careers and navigating through a new industry while feeling like an imposter. Find out why you can’t (and shouldn’t have to) ban out imposter feelings on your own, and get the tools and insights you need to turn an imposter life into imposter moments.\n\nNo experience necessary\n20 mins\nCore/Non Technical Skills\nA psychologist turned software engineer, currently navigating her way through the world of technology. After a short (but intense) journey of self-learning, Cristi landed a job as an Associate Engineer at VGW and started passing along her knowledge as mentor at She Codes Australia. 6 months later, she got promoted to Engineer, still battling imposter feelings. She's passionate about helping others get into tech, solving exciting coding problems, and cheese.",Cristi Middag,"Cristi Middag, a psychologist turned software engineer, discusses the prevalence of imposter syndrome in the tech industry, with 58% of tech workers reporting experiencing imposter feelings. She shares her personal journey of feeling like an imposter and offers insights and tools to turn an imposter life into imposter moments. Cristi emphasizes the importance of acknowledging and normalizing these feelings and encourages others to share their experiences. She is passionate about helping others get into tech and solving exciting coding problems.The speaker discusses their personal experience with imposter syndrome in the tech industry. They define imposter syndrome as feelings of self-doubt and personal incompetence that persist despite education, experience, or accomplishments. The speaker shares common imposter thoughts, such as feeling like a fake or not deserving success. They cite a study that found 58% of people in the tech industry experience imposter feelings, including those at companies like Amazon, Google, and Facebook. The speaker suggests that the complexity of the industry and difficulty in explaining it to others may contribute to imposter syndrome.Imposter syndrome is a common experience in the tech industry, affecting both newcomers and experienced professionals. It can be triggered by external pressures, such as unrealistic project timelines or the need to keep up with rapidly changing technologies, as well as internal expectations and self-doubt. Underrepresented groups may also struggle with imposter syndrome due to a lack of role models or empathetic leaders who look like them. The COVID-19 pandemic has added new challenges, such as working from home while parenting or teaching. While imposter feelings can be nerve-wracking, they are normal and can even be healthy if they push you to improve. The goal is not to eliminate imposter moments entirely, but to develop tools to talk yourself down faster. It's important to recognize your accomplishments and how far you've come, rather than focusing solely on what you don't know.The speaker discusses their experience with imposter syndrome and how they have learned to appreciate their progress. They suggest focusing on mentoring others as a way to gauge one's own knowledge and setting appropriate goals to avoid feeling overwhelmed. They also advise against comparing oneself to others and instead looking to them as role models or seeking their help. The speaker, who is also a psychologist, shares two exercises that have been helpful for themselves and their clients in dealing with imposter syndrome.brief, the speaker discusses two exercises from cognitive behavioral therapy that can help with imposter feelings: cognitive restructuring and dysfunctional thought record. These exercises involve challenging negative thoughts and finding alternative, positive ones. The speaker also emphasizes the importance of leaders identifying and addressing imposter feelings in their team members, as it can impact job performance, satisfaction, and burnout. Negative self-talk should also be monitored and addressed.The speaker discusses the issue of imposter syndrome in the workplace and how it can affect team members' performance. They suggest that managers should be attuned to negative self-talk and encourage team members to try new things. To create a safe environment for team members to discuss their feelings, managers should show empathy and vulnerability by sharing their own experiences. The speaker recommends organizing appropriate mentoring and getting feedback from team members about the work environment. Celebrating wins and giving praise in a way that team members feel comfortable with is also important. The speaker emphasizes that it is okay to ask for professional help in dealing with imposter syndrome."
LXjqIIesDCY,00:00:00,The limits of my [programming] language mean the limits of my world,"Programming languages are the expressive medium with which we create our software systems. In a sense they are thought-multipliers that enable us to give real-world expression to pure ideas. So we might also ask, are badly-designed ones potentially thought-inhibitors? We've come a long way from punched cards and machine language, but how smug should we be about the programming languages in common use today? Are they part of the reason why software projects are still notorious for running over time and over budget and often ship with costly flaws?\n\nIn this talk, we'll take a journey through some of the highlights and lowlights in the development of our programming language ideas. We'll critically examine some of today's common practices. And we'll consider the promise of future developments to make it easier to translate our ideas into great, reliable software.\n\nMostly intermediate\n45 mins\nBackend Development\nTroy is a software engineer with broad industry experience, currently developing games at VGW. He also maintains and contributes to several open-source projects, and is a mentor at CoderDojo. Troy is interested in what makes software great, not just for the user, but also for the team maintaining it.",Troy Gerwien,"Troy Gerwien, a software engineer with broad industry experience, delivered a talk on the limits of programming languages and their impact on software development. He questioned whether badly-designed programming languages could be thought-inhibitors and contribute to the notorious issues of software projects running over time and budget and shipping with costly flaws. Gerwien took the audience on a journey through the development of programming language ideas, critically examining common practices and considering the promise of future developments to make it easier to translate ideas into reliable software. He emphasized the importance of creating great software not just for the user but also for the team maintaining it.This talk is about the influence of programming languages on the ability of programmers to produce correct programs within a reasonable period of time. The speaker initially struggled with the breadth of the topic but decided to cover it broadly by giving a keynote talk. The two key factors in programming are convenience and correctness, which refer to the ability to build a solution in a reasonable amount of time and with few defects. The speaker uses the metaphors of dragons and rabbit holes to describe the challenges of avoiding bugs and finding ways to express problems in a language. Overall, the talk emphasizes the importance of choosing the right programming language for a given task.are just one aspect, but they are important because they can either multiply or divide our powers as programmers. Convenience and correctness are the two overarching themes in programming language design. Convenience is about how quickly and easily we can come up with a good solution and how maintainable it is. Correctness is about the safety of expressing things in a program and avoiding subtly wrong solutions. Programming languages are for humans, and their design matters because software is eating the world and there are huge risk and reward multipliers in the global economy. Improving convenience and correctness in programming languages can give a competitive advantage and reduce hacks, exploits, and failures.Programming languages can have a significant impact on software productivity, reliability, and security. While people and processes are also important factors, programming languages can help prevent bugs and exploits. The cost of software failures in the US alone is estimated to be around two trillion dollars per year. One example of a software failure was the Thorac 25 medical device, which caused injuries and deaths due to a race condition triggered by a programming language that didn't protect against it. Microsoft found that 70% of their security bugs were memory safety issues, which can be attributed to the use of memory unsafe languages like C and C++. There will never be one programming language to rule them all, as there are countless programming languages with varying levels of influence and history.The transcript discusses the lack of consensus in programming languages despite efforts to create a universal language. The current candidate for a universal language is JavaScript, but there are competing goals in programming language design that make it difficult to create a language that satisfies all needs. For example, there is a trade-off between real-time performance and automatic memory management, and between safety with memory and speed of development. The lack of convergence in programming languages is not new, as evidenced by failed attempts in the past. The transcript also includes a reference to the tc39 committee, which decides what proposals will make it into the next version of JavaScript.discusses the concept of essential and accidental complexity in software systems. Essential complexity refers to the necessary components of a program that cannot be eliminated, such as requirements specified in the project's specifications. Accidental complexity, on the other hand, refers to the unnecessary barriers that make it difficult to express a working solution. Examples of accidental complexity include manual memory management, managing dependencies, and managing versions. Choosing different tools can affect the amount of accidental complexity in a project. Domain-specific languages and visual programming languages can reduce essential complexity by allowing developers to state things at a higher level, sacrificing generality for a specific job. However, this trade-off is not always possible, and general-purpose languages are often necessary.The speaker discusses the concept of accidental complexity in software development, which refers to the unnecessary barriers that get in the way of writing code. These barriers include managing memory, concurrency, dependencies, and versions. The speaker references Brooks' view that high-level languages have solved the accidental complexity problem, providing a five times productivity boost. The speaker then gives examples of what software development was like before high-level languages, including typing in games byte by byte and filling out punched cards. The lack of protection from errors made software development a challenging and error-prone process.This video discusses the lack of protection from errors in low-level programming languages due to the absence of an interpretation step. The speaker provides examples of accidental complexity in the 6502 CPU and the use of regex as a write-only language. The focus then shifts to the importance of designing programming languages with the human user in mind, as programming languages are meant for people, not machines. The speaker emphasizes that the source code of programs is for humans and discusses the scarcity of software production.The use of high-level programming languages and sophisticated tools to translate code to machine language is due to the fact that source code is designed for humans. The production of software is not expensive in terms of raw materials such as RAM, memory, and CPU cycles, but rather in terms of human ability. Humans have limited working memory, cognitive powers, and reliability, which can lead to software bugs. Programming languages that adapt to human limitations can empower programmers and reduce the rate of bugs. For example, raising the level of abstraction can reduce the semantic gap, and using visual layout and keywords can help with pattern recognition. Control flow constructs, such as loops and conditionals, are essential for writing non-linear logic programs. The goal of programming languages should be to optimize understandability, not necessarily to minimize code length.control flow constructs can impact our ability to understand and work with code. The video discusses the four common control flow constructs: loops, conditional statements, switch statements, and the lesser-known ""if condition go to label"" construct. The latter allows for jumping to a labeled line of code based on a condition, effectively replacing all other control flow constructs.

The video demonstrates how a prime number generator can be transformed using only the ""if condition go to label"" construct, resulting in a simpler but longer program. However, the speaker argues that the original program with multiple control flow constructs may be easier for humans to understand and work with, as it allows for visualizing loops and conditional statements.

The video highlights the importance of considering the human side of programming languages and how control flow constructs can impact our ability to comprehend and work with code.The video discusses the importance of designing programming languages with the human in mind. It suggests that if a programming task can be described as a set of mechanical transforms, the programming language should be designed to fully automate it, rather than relying on humans who are fallible and prone to making mistakes. The speaker introduces the concept of the ""human compiler anti-pattern,"" where programmers take pride in manually creating complicated code that could be automated by programming language tools. The video provides an example in JavaScript of a function that returns the number of files in a given directory, highlighting the use of async/await and the evolution of asynchronous programming in JavaScript.Type systems are an important tool for reducing errors in software development. Asynchronous programming with callbacks can lead to errors if not managed properly, and design patterns may not always be necessary or effective. The cost of repairing defects in software increases as bugs are discovered later in the development process, with bugs discovered in production being the most costly. Type systems can help prevent bugs by making invalid states unrepresentable, reducing the likelihood of errors and improving the overall quality of the code.strong link between the concept of ""shift left"" testing and the use of static type systems in programming languages. Catching bugs earlier in the development process is cheaper and more efficient than catching them later, and type systems can help catch bugs before they even go into production. The use of type systems can provide benefits such as error messages during the build process, red squiggles in the IDE, and suggestions for valid options before typing. There are many types available in programming languages, including classic types like classes and interfaces, as well as newer types like sum and product types, and more complex types like linear and affine types.The video discusses various types of functional languages, including sum and product types, linear types, and affine types. The focus is on making illegal states unrepresentable, which means using the type system to catch errors early on in the development process. TypeScript is highlighted as a language that has made advanced types more accessible and mainstream. It is described as a domain-specific language for checking types, with no side effects and Turing complete. The benefits of using TypeScript include the ability to catch errors before running the program and setting up specific static checks.Type systems in programming languages allow for specific static checks that can catch errors before running the program. However, rich type systems can have unfamiliar syntax and require learning two sets of constructs. TypeScript is an example of a language with a rich type system that mirrors the syntax of the runtime code. A type-level function can be used to compute the same calculations statically as the program does dynamically. This allows for catching errors at compile time, such as typos or incorrect property names, before running the program.The speaker discusses the benefits of using TypeScript, including catching errors at compile time and the flexibility of not having to set up separate types for every object. They also briefly touch on the debate between object-oriented and functional programming paradigms, but note that it's a complex topic that they don't have time to fully explore. The speaker emphasizes the importance of convenience, correctness, and embracing trade-offs in programming language design. During the Q&A, a question is asked about why some people are emotionally attached to certain paradigms or languages, and the speaker notes that it can be a sensitive topic and compares it to religion.The speaker discusses the emotional attachment that some people have to certain paradigms or languages, which can be compared to religion. It can be difficult to accept new ideas or admit that one's own way of doing things may be flawed, especially if one has invested a lot of time and effort into it. Resistance to change and fear of the unknown can also play a role. The talk ends with an announcement that lunch is served."
e_ATZWVWJzU,00:00:00,Rise of the Tech Influencer,**PS Sorry about the audio/video**\n\nKeeping your head down and working hard is not enough anymore. If you want to move onwards and upwards in this world you have to make sure the world knows your name. This can be hard when all you care about is the code and you don't want to look like a dick.\n\nAs Microsoft's #1 Social Seller on LinkedIn Globally - I have more influence and engagement across that platform than Mark Russinovich. I will share all my tips and tricks to help raise your profile with very little effort - so you can keep your focus where it counts.,Michelle @ Microsoft,"Michelle, a Microsoft employee and the number one social seller on LinkedIn globally, shares tips and tricks on how to increase your profile without sacrificing your focus on your work. She emphasizes the importance of making your name known in the industry and offers practical advice, such as using the LinkedIn app to connect with like-minded individuals at events. Michelle also mentions a fun game called ""Speaker Bingo"" and encourages attendees to participate for a chance to win prizes. She briefly mentions a personal experience with a keynote speaker and how it impacted her.Lars gave a personal Lucknow talk at a developer conference that inspired the speaker to think about how to position oneself in the market to achieve the desired lifestyle. One can either work for a company or set their own hours and travel the world like Lars. To position oneself in the market, it is important to have a clear and self-explanatory LinkedIn profile. The speaker recommends reading ""Clean Code"" by Uncle Bob Martin and using automation tools like Twitter to showcase oneself. The speaker provides examples of LinkedIn profiles and emphasizes the importance of standing out from the crowd.LinkedIn profiles can be customized to stand out from the default blue banner. Adding a personalized banner can lend credibility to one's brand and visually communicate their expertise. For example, a chalkboard filled with technical symbols can indicate that the person is a teacher of technical subjects. A picture of the Redmond campus with a Microsoft logo can indicate that the person is backed by the might of Microsoft. Adding videos or articles that demonstrate one's expertise can also enhance credibility. Recommendations on LinkedIn are like references in a blockchain, allowing one to follow a chain of recommendations to verify a person's credibility. This is important because there are false profiles on the internet. Overall, LinkedIn profiles can be customized to communicate one's expertise and enhance credibility.The speaker advises checking references thoroughly by following the chain of recommendations to ensure they are real. They emphasize the importance of recommendations on social media profiles, as they provide a clear idea of who the person is and what it's like to work with them. The speaker suggests spending only 15 minutes a day on social media to be number one in the world, and commenting on posts that link to your field of expertise. They also recommend sharing personal experiences and being authentic in your posts to engage people. The speaker mentions being the number one social seller for Microsoft and living in Perth, the most isolated city in the world.The speaker discusses the power of social media and how it can break down barriers and connect people from all over the world. They share their experience of becoming the number one social seller for Microsoft in the world, despite being from a small city in Australia. They attribute their success to the power of their network and the support of their followers. The speaker encourages people to be authentic and share their own personal spin on content, even if they feel they don't have anything interesting or credible to say. They suggest adding a personal touch to shared content to increase engagement and reach a wider audience.The speaker emphasizes the importance of linking one's name to a field of expertise to increase credibility and visibility. She shares an example of a LinkedIn post that gained 37,000 views by showcasing a real-life moment of a colleague holding his baby while working at Microsoft. The post provided insight into the company's work-life balance and generated interest from viewers. The speaker encourages sharing personal experiences and moments to give people a glimpse into the workplace and the industry.The speaker discusses the importance of sharing personal experiences and stories in the workplace, citing examples such as visiting tree houses at Microsoft and receiving annotated copies of a book from the CEO. They also emphasize the power of thought leadership through writing articles and establishing oneself as an expert in a particular field. The speaker encourages individuals to start writing and not worry about initial low readership, as it takes time to build a following. Ultimately, positioning oneself as a thought leader can lead to greater career opportunities and the ability to choose where to work.The speaker encourages writing articles even if you don't have many followers, as it allows you to iterate on conversations and topics that interest you. She suggests setting a goal to write one article per week and not overthinking it. Writing about failures and rejection can be useful to others. The speaker also mentions tweeting out extra links and content during the presentation. She briefly mentions the AC Magic Bus, an autonomous bus by RAC, and how companies like RAC, Bankwest, and Congress link themselves to innovation and community through their posts on LinkedIn.RAC is a company that is well-linked to innovation and community, and they post content that is associated with these values. Other companies like Bankwest and Congress also do this well. It is important for companies to post content that their employees would like to be associated with, as this makes it easier for them to share and advocate on behalf of the company. Some companies do not allow their employees to post anything on social media about the company, which is unfortunate as it limits the potential benefits of social media enthusiasm. The speaker also shared a strategy for networking at conferences, which involves creating a collage of pictures of the speakers you want to meet and tagging them in a post about the conference. This creates social currency and makes it easier to connect with them at the conference.The speaker discusses the benefits of using social media to network and make connections at conferences. By connecting with speakers and attendees beforehand on social media, it accelerates the connection and makes it easier to make friends and network at the conference. The speaker also emphasizes the importance of reaching out and making connections with people in the industry or companies you want to work with. By posting about others and hitching your credibility to theirs, it can help raise your profile without coming across as big-headed. The speaker gives examples of how they have done this in the past, such as posting pictures of all the conference speakers. Finally, the speaker shares their experience of becoming the chairman of the AC and how they highlighted their entire branch executive committee instead of just themselves.Michelle Sanford, the chairman of the Australian Computer Society, emphasizes the importance of using social media to promote oneself and one's team. She shares a personal experience of attending a gala dinner where she was anxious about networking with high-level executives. However, she was relieved when one of them recognized her from her articles on LinkedIn, which had established her credibility from a distance. Sanford believes that social media is a powerful tool for individuals in the technology industry to access all areas of the business and influence others."
LoiZeuwSo6Q,00:00:00,100% Remote Working - Better than you Dared to Dream,"You've seen seen people talking about it, even had friends doing it, but is remote working really as good as they say it is?\n\nIn August 2018 I took the plunge and discovered developer nirvana, a re-invigorated soul, and a desire to never work in open-plan offices ever again.\n\nIn this talk I'll share my experiences working 100% remotely for a company in a different time zone.  I'll cover the techniques and the tech I use (both hardware and software), the challenges I face, and the peace I have found.\n\nThis talk is for introverts who struggle in their current work situation, for developers desperate to get work done, and for people wanting to level-up at communicating.\n\nCarl believes anyone can do anything and lives by this philosophy.  He believes pigeon holes serve only as convenient labels, not unsurpassable boundaries. \n\nCarl values patterns and practices across multiple disciplines.  His thirst for knowledge and experience is insatiable.  When challenges arise he brings an endless stream of ideas to bear. \n\nCarl thinks with empathy and critically, and is effective as a designer and as a software engineer.  His leadership style is to share knowledge and to teach by doing.  He achieves goals on his own or in a group.\n\nHis side projects include constructing tiny houses and building computer games.",Carl Scarlett,"In this talk, Carl Scarlett shares his experiences of working 100% remotely for a company in a different time zone. He covers the techniques and tech he uses, the challenges he faces, and the peace he has found. Carl believes that anyone can do anything and lives by this philosophy. He values patterns and practices across multiple disciplines and his leadership style is to share knowledge and teach by doing. Carl also discusses the downsides of open-plan working environments and how they only work positively for about half the human population. He references a theory from the 1920s by psychologist Carl Jung, which categorizes people's personalities between introversion and extroversion.The video discusses the popular trend of open-plan working in modern workplaces and how it can negatively affect introverted employees. The personality trait continuum theory, which categorizes people's personalities between introversion and extraversion, is explained in detail. The video highlights that up to 40% of the population identifies as introverts and that they may struggle in open-plan working environments due to feeling drained by social interaction. The speaker shares their personal experience of struggling with anxiety and stress in an open-plan working environment and how they eventually had to leave their job. The video concludes by emphasizing the importance of employers providing adequate working conditions for all employees, including introverts.The speaker discusses their decision to find a job that aligns with their values and what makes them happy at work. They found a remote job with a company called Drawboard, where they have control over their workspace and have established a strong digital presence. They emphasize the importance of evaluating what works and what doesn't work in their workspace, having a comfortable and functional setup, and using collaboration tools effectively. They also stress the importance of acquiring the right technology, such as a stable internet connection, a quality computer, multiple screens, and a good keyboard. Overall, the speaker's proactive approach to remote work has led to success and personal happiness.The speaker discusses the importance of having a stable internet connection and a good quality computer with multiple screens and a good keyboard for productivity. They recommend using a Surface Pro 5 for development tasks and video editing. For collaboration and communication, they suggest having a high definition camera, a good quality directional microphone, and noise cancelling headphones. The speaker also recommends using virtual desktops to eliminate digital distractions and to control the flow of information. They emphasize the importance of communication and sharing successes and failures with colleagues, and suggest recording and posting videos to showcase work. The speaker encourages using emojis, memes, and animated gifs to show personality in communication, but also emphasizes the importance of being respectful.The speaker discusses the benefits of remote working, including the ability to express oneself through text communication using emojis, memes, and animated gifs. They emphasize the importance of being respectful and taking breaks away from the screen. It is also important to document work and maintain a work-life balance by only working during designated hours and taking lunch breaks. The speaker is grateful for the opportunity to work remotely and has found joy and balance in their work. They hope the audience can apply these lessons to their own lives.The speaker is receiving applause for their confidence."
M3b1WniuUec,00:00:00,Service Meshes - Powering the next wave of microservice architectures,"Microservices and containers have transformed application design and deployment patterns. Modern cloud native architectures - which underpin many of the world's groundbreaking tech companies such as Uber, Netflix and Airbnb - afford unparalleled levels of agility and scale but are not without trade-offs. In applications comprising hundreds of services (and thousands of service instances), concerns such as security, operability and observability pose significant challenges. Supporting compensating capabilities such as circuit breakers, retry policies and service discovery in each microservice adds undesirable code bloat and impacts our ability to choose the best language for the problem at hand should the required libraries not be available. \n\nIn this session, we will take an in-depth look at the service mesh pattern; the benefits that a decentralized microservice management approach brings; the best practices that have evolved; and most importantly what you need to know to effectively leverage a service mesh in your architecture:\n\n- How to determine the suitability of a service mesh for your application context. Don't just drink the cloud native Kool-Aid!\n- Disambiguate the overlapping responsibilities of an API gateway and service mesh in a modern architecture and demonstrate how they can be used in harmony.\n- How a service mesh enables choosing the best tool or language for a given service without being constrained by the availability of libraries for each platform. Effectively it's a weight loss plan for your microservices.\n- What techniques to apply when transitioning to a service mesh based architecture.\n\nAdditionally, we will take a hands-on look at what is involved to build and manage a microservice architecture leveraging Kubernetes and Istio, a leading open source service mesh. By the end of the session, you will not only understand the concepts underpinning the service mesh pattern but also have the knowledge to put them into practice.",Rob Crowley,"Rob Crowley discusses the challenges posed by modern cloud native architectures, which can comprise hundreds of services and thousands of service instances. These challenges include security, operability, and observability. Supporting compensating capabilities in each microservice adds undesirable code bloat and impacts the ability to choose the best language for the problem at hand. Crowley introduces the service mesh pattern as a solution to these challenges. He discusses the benefits of a decentralized microservice management approach and the best practices that have evolved. He also provides guidance on how to effectively leverage a service mesh in an architecture, including how to determine its suitability for a given application context, disambiguate the overlapping responsibilities of an API gateway and service mesh, and apply techniques when transitioning to a service mesh-based architecture. Crowley takes a hands-on look at building and managing a microservice architecture leveraging Kubernetes and Istio, a leading open source service mesh. By the end of the session, attendees will have a deep understanding of the service mesh pattern and the knowledge to put it into practice.The transcript discusses the challenges of distributed computing and the need for various capabilities such as reliability, observability, traffic management, service discovery, access control, and request routing. The speaker highlights the importance of advanced distributed systems and the ability to individually control each request. They also discuss the challenges of latency and tracing, and the need for circuit breakers and timeouts to ensure reliability. The transcript mentions the shift from application tier to networking tier for handling concerns such as delivery retry, and the use of enterprise service bus for interoperability between services. The speaker emphasizes the importance of pushing concerns down to a centralized location to simplify complex systems.The video discusses the evolution of service-oriented architecture (SOA) and the challenges faced in building distributed systems. The traditional approach involved using enterprise service buses (ESBs) to connect different systems, but this became complex and difficult to scale. The emergence of microservices architecture addressed these issues by breaking down the system into smaller, independent services that communicate with each other through APIs. This approach allows for greater agility and flexibility, as well as easier maintenance and scalability. The video also discusses the importance of DevOps culture, automation, and data-driven decision-making in implementing microservices architecture.The video discusses the concept of a service mesh, which is a dedicated layer for managing communication between microservices. This layer includes circuit breakers, discovery, and retry policies, and can be implemented using sidecar proxies. The sidecar proxies allow for communication between legacy services and services written in different languages. The control plane of the service mesh sits outside of each individual microservice and allows for centralized management and policy enforcement. The video also mentions the Istio service mesh from Google, which includes a data plane and a control plane with components such as Pilot for pushing out travel policies and enforcing policy checks. The video emphasizes the importance of having a mature application before investing in a service mesh and ensuring that the problems it aims to solve are relevant to the application.The control plane in this system consists of three components: a pilot, which handles travel policies and routing concerns; telemetry gathering, which collects data on utilization and performance; and a component called Galley, which validates user-defined configurations and provides an abstraction between SPO and underlying platforms. Testing and production has evolved to include integration testing, shadowing, and traffic mirroring, which allows for safe testing of code in production without affecting real traffic. Shadowing involves duplicating a sample of traffic from one service to another, allowing for real-time testing of new releases without affecting production traffic.Service mesh is a tool that helps manage traffic between microservices. It allows for quick insight and feedback into how services perform before sending all traffic into it. Traffic management policies can be easily updated through the control plane, without having to change deployments. Service mesh also allows for infrastructure scaling and can be wrapped with a sidecar without the application needing to change. However, introducing service mesh into an architecture requires specialized skill sets and unrealistic expectations can bring down the service mesh.Service mesh is a valuable tool for optimizing inter-service communication in a microservices architecture. However, it is important to have realistic expectations and start with a single capability before trying to roll out everything at once. Instrumentation is also important for providing feedback and identifying issues in distributed systems. Continuous learning and improvement is critical for DevOps culture, and service mesh can help with operability and fleet management. While service mesh is currently focused on optimizing the organ see flow, there is potential for it to be applied to async message flows as well. Traffic shaping can be used in conjunction with auto scaling and Kubernetes deployments, and policies can be sent from the service itself. Overall, service mesh is a valuable tool to have in your toolbox, but it is important to have expertise in maintaining diversity of line and realistic expectations.The speaker discusses deploying layer 7 policies within an application based on policies sent from the service. They mention controlling ingress/egress and preventing resource consumption. The speaker also mentions a tool in the UK that can reject services based on behavior. In response to a question, they suggest creating an active policy rather than just a passive one."
1WEKv7W4K8k,00:00:00,Super Hero Layouts,"Modern CSS layout techniques opened a world of possibilities. Layouts previously thought impossible become possible. A great way of mastering techniques is through play, so I turned to one of my favourite hobbies - comic books.\n\nTaking well known layouts, how could elements be built in a browser, such as uneven shapes, ever changing layout and many expansions? This talk is going to dive into using modern CSS layout techniques to recreate elements of comic books with CSS Grid, writing mode, CSS shapes and more. Come along to see CSS layouts at play.\n\nMostly intermediate\n45 mins\nFrontend Development\nAnton is a Front-End Developer, speaker and community organiser. He is passionate about clean, structured code, web standards, accessibility and optimisation. He prides himself on delivering robust, high quality and beautiful solutions. Anton co-organises Fenders Front-End Developer meetup and DDD Perth. Anton has also volunteered as a mentor introducing others to the world of coding.",Anton Ball,"Anton Ball, a front-end developer, speaker, and community organizer, gave a talk on using modern CSS layout techniques to recreate elements of comic books with CSS Grid, writing mode, CSS shapes, and more. He discussed the four ages of comics and how they relate to web layout, and demonstrated how CSS techniques can be used to recreate these layouts. He also encouraged the audience to reimagine these techniques for use in their own projects. While he did not cover responsiveness in depth, he noted that it is possible to make these layouts responsive.The speaker discusses the evolution of layout on the web, comparing it to the evolution of comic book storytelling over 70 years. They note that while the web is relatively young, it has progressed through many ages of layout, from basic HTML to CSS Grid. The speaker introduces themselves as a full stack team lead at Doist and a fan of comics, specifically Action Comics #1, which introduced Superman and a layout consisting of rows of squares and rectangles. They demonstrate how to achieve a similar staggering effect using CSS Grid. The speaker also mentions the concept of intrinsic layout, which allows devices to define the layout, and notes that with CSS Grid, the current age of the web may be considered its modern age.The speaker discusses using grid template rows and columns to create a staggered comic layout. They calculate the number of columns based on the smallest panel size and use repeat and grid gap to create the grid. They rely on the implicit grid to handle the rows and use panel spanning to create a modern layout. They also discuss the use of layout in storytelling, specifically in Spider-Man 121 where the panel spanning multiple rows adds to the sense of height and danger in the scene.The speaker discusses the use of grid in creating comic book layouts. They explain how they determine the panels and use implicit grid to span multiple rows. They also mention the power of a nine panel grid, which was used in Watchmen. They recreate a panel from Watchmen that features the same image running across three panels, but with a gap in the middle. To achieve this effect, they use subgrid to inherit rows from the parent element and set their own rows. They also use a pseudo element to create the gap while maintaining the image and grid layout.The video discusses the use of subgrid in CSS for aligning items without setting the height across multiple panels. The speaker demonstrates how to maintain the image while simulating a grid gap using subgrid. They also explain how subgrid allows for the flexibility of expanding rows while maintaining the semantic relationship of each element. However, subgrid is not widely supported by browsers yet, so the speaker suggests using display content as an alternative. The video also touches on the trend of layering panels in modern comics to achieve flow and depth.In the Modern Age of comics, artists began to use layering panels to achieve a flow and depth that hadn't been seen before. Display grid and grid template columns made it easier to layer in predictable ways. To determine the number of rows and columns needed, the height and width of the artwork can be divided by a base fraction unit. Using fractions instead of percentages allows for more flexibility when making everything responsive and maintaining aspect ratios. Grid row and grid column values can then be used to layer panels over the top where needed. Negative grid lines can be used to adjust the placement of panels without having to update everything if the design changes later on. Most browser Dev tools will show these numbers.The video discusses the use of layering in web design and layout, which allows for breaking out of traditional box layouts. The speaker demonstrates how to use layering with CSS grid to create interesting depth and visual effects. However, the speaker also warns about the potential negative impact on accessibility if the source order is not maintained. The video suggests structuring the HTML document correctly and maintaining order when using layering techniques. The speaker also discusses the limitations of grid in creating non-box shapes, but suggests combining boxes with other techniques to create the illusion of any shape. The video provides examples from comics to illustrate the use of layering and creative layout techniques.In this video, the speaker discusses using clip path and grid to create complex shapes and layouts on the web. They explain how to use position relative, overflow hidden, and absolute positioning to overlap images and cut away parts of them using clip path. The speaker also demonstrates how to use the dev tools in Firefox to adjust the clip path values and create the desired shapes. They acknowledge that this technique requires manual management of the grid gap and may involve some trial and error to get the shapes just right. The speaker provides examples of recreating comic book layouts using this technique, including one with perspective and rotation to create a dynamic effect. Links to code pen versions of the examples are provided for further exploration.we can achieve with CSS shapes. By using clip path and shape outside, we can create interesting and unique shapes for our web designs. We can use polygons, ellipses, and circles to create shapes, and even have text wrap around them. With the help of dev tools, we can easily adjust and resize these shapes in real-time. Additionally, we can use alpha masks to create more complex shapes, such as wrapping text around an image of a cat. Overall, CSS shapes offer a creative and dynamic way to enhance our web designs.In this YouTube transcript, the speaker discusses how to use CSS grid to create comic book layouts on the web. They demonstrate how to use shape outside and alpha masks to create unique shapes for images, and how to use grid to create layouts that work for different reading directions, such as right to left for manga. The speaker encourages viewers to think about how they can apply these techniques to their own projects and take advantage of the flexibility and power of CSS grid.The speaker discusses the benefits of using CSS grid for layout on the web, including the ability to create depth and interest by staggering content and layering panels. They also mention the upcoming CSS grid level 2 spec, which will allow for better alignment across multiple panels and more creative layouts. The speaker emphasizes the importance of making projects accessible to a wide audience, and provides resources for learning CSS grid, including code pens and blog posts. They end the talk with a reference to Stan Lee's catchphrase, ""Excelsior,"" which means ""ever upwards,"" and encourage attendees to apply what they've learned to their own work. During the Q&A session, the speaker suggests linking CSS grid with something enjoyable to learn it effectively.The speaker mentions that people are probably looking forward to eating."
rfRvI_In1lE,00:00:00,YOW! Night,"Demystifying functional programming and what that means for learning \u0026 teaching\n\nDid you ever wonder: Is functional programming hard? Do you have to be a math whiz? What about the jargon? This talk has answers.\n\nFunctional programming is sometimes perceived to be unapproachable, with unfamiliar jargon, obscure concepts, and bewildering theories. This seems counter to its main aim, namely to simplify programming and to make programming more widely accessible. In this talk, I like to argue that there is nothing inherently unapproachable or complex in functional programming, at least not beyond the complexity inherent in programming in general. Instead, we need to critically analyse our teaching strategies and ensure that they are appropriate for a broad range of developers. In my experience, the most common pitfalls are (1) to start with abstract concepts instead of with concrete examples and (2) confusing the historic development of a concept with a pedagogically appropriate teaching strategy. A good example of the latter problem is any attempt to explain the use of functors and monads in functional programming by appeal to category theory. Explaining an unfamiliar idea with an even more alien idea is generally a futile endeavour.\n\nWe avoid the first problem by leading with concrete examples, which we use to infer recurring patterns of computation and to motivate more abstract language features — for example, by demonstrating how higher-order functions facilitate the removal of duplicate code. We avoid the second problem by focusing on the concrete computational reasons for using a particular concept or language feature; that is, we place the why before the how. For instance, in sample code that requires maintaining shared state, a state transformer monad helps us to remove error-prone plumbing code.\n\nNevertheless, we have to acknowledge that moving from imperative, object-oriented programming to functional programming requires more effort than learning yet another object-oriented language. The key here is to clearly distinguish new concepts from known ideas that are just presented differently. Some concepts simply have different names (such as structs versus product types), some have different syntax (such as functional application without parenthesis in Haskell), and some are expressed differently (such as while loops versus tail recursive functions). In all cases, we can help learners by establishing a correspondence between the known and the superficially new.\n\nPutting all of this together, teaching and learning functional programming is surprisingly straight forward. Still, we can do even better. Given the importance of working from examples and for students to experiment by quickly exploring a design space, ideas from live programming tighten the feedback loop and provide a distinct improvement for teaching over the classic REPL (read-eval-print loop) introduced with Lisp. I will demonstrate these improvements using Haskell playgrounds in the Haskell for Mac IDE, but the same applies to Swift playgrounds in Apple’s Xcode IDE and the Swift Playgrounds iPad app.\n\nThe material presented in this talk is informed by the experience that Gabriele Keller and I accumulated over a decade of teaching Haskell in a variety of courses at UNSW (University of New South Wales) to thousands of students spanning from absolute beginners to experienced developers in postgraduate courses. We experimented with a variety of approaches and performed student surveys to refine our approach over time. We wrote a textbook providing an introduction to computing for first years students and more recently an online Haskell tutorial including screencasts that feature live coding.\n\nVisit NIGHT PHOTOS: https://www.flickr.com/photos/yowconference/sets/72157664691839807\n\nMANUEL CHAKRAVARTY\n\nManuel M T Chakravarty works with Tweag I/O as a functional programming evangelist, and he is the indie developer behind the interactive development environment Haskell for Mac — one of the first Swift apps on the Mac App Store. His interests span from functional programming, novel compiler technology \u0026 programming language theory over high-performance \u0026 distributed computing to blockchain technology. He used to be an associate professor at UNSW Australia and contributed to both the design and implementation of the Haskell programming language as well as several Haskell tools and open source libraries, including multiple systems for data parallel programming of multicore CPUs and GPUs. Over the last three years, he has focused on making functional programming more broadly accessible and on exploring its role in app development in Swift. Most importantly, he believes in the fruitful combination of theory and practice.",Manuel Chakravarty,"Manuel Chakravarty discusses the perception that functional programming is unapproachable due to unfamiliar jargon, obscure concepts, and bewildering theories. He argues that there is nothing inherently complex in functional programming beyond the complexity inherent in programming in general. To make functional programming more accessible, he suggests starting with concrete examples and focusing on the concrete computational reasons for using a particular concept or language feature. Moving from imperative, object-oriented programming to functional programming requires effort, but learners can be helped by establishing a correspondence between the known and the superficially new. Chakravarty also suggests using live programming to tighten the feedback loop and provide a distinct improvement for teaching over the classic REPL. His approach is informed by a decade of teaching Haskell in a variety of courses at UNSW, where he and Gabriele Keller experimented with a variety of approaches and performed student surveys to refine their approach over time.Manuel M T Chakravarty is a functional programming evangelist who works with Tweag I/O and is the developer behind Haskell for Mac. He has contributed to the design and implementation of the Haskell programming language and has focused on making functional programming more accessible and exploring its role in app development in Swift. In his talk, he discusses the adoption of new technologies and how functional programming is currently in a transition phase between early adopters and early majority. He emphasizes the importance of understanding the mindset of different groups of people when promoting a new technology.The speaker discusses the different groups of people who adopt technology and innovation for different reasons and in different ways. The innovators are the ones who design and standardize programming languages, write compilers, and create the initial tools. They are willing to take risks and have a background in programming language theory and math. The early adopters are the ones who have good connections to the innovators and are willing to invest time and effort to upskill themselves. They are happy to read research papers and understand the math behind it. The early majority is the rest of the team who want to solve a problem and use technology that is ready for production. The speaker then discusses how to make functional programming attractive to the early majority and mentions the upcoming Lambda Cap conference in Sydney, which is aimed at intermediate to advanced level attendees.Lambda Tram is an intermediate to advanced level conference for early adopters of functional programming. The conference aims to help attendees who have a basic understanding of functional programming to take their skills to the next level and introduce it to their team. The conference also includes a Welcome to FP day, which is a day of workshops designed to introduce people who are interested in functional programming but have little experience with it. The speaker, Tony Morris, is an experienced functional programming teacher who has taught Haskell to thousands of people at the University of New South Wales. He believes that one reason why functional programming is mysterious to many people is because the communication about it has been between innovators and early adopters who tend to speak in their own language. He suggests that programming languages should be taught in a more holistic way rather than focusing on individual language constructs.The transcript discusses two reasons why programming concepts can be difficult to understand. Firstly, programming languages are often taught in a way that focuses on language constructs rather than concepts, which can be unhelpful. Secondly, innovators often focus on the historical journey of how a language or concept was developed, rather than explaining the goal of the journey. This can make it difficult for students to understand the concepts. The transcript also mentions the use of category theory in programming, but emphasizes the importance of explaining concepts in accessible terms rather than relying on historical explanations.The speaker discusses the challenges of teaching functional programming to different types of learners. They argue that it is important to start with concrete examples rather than abstract concepts like category theory or parametric polymorphism. Early adopters may be more willing to invest time in learning abstract concepts, but they still need concrete examples to understand how they work. The speaker believes that the biggest contribution of functional programming to software development is bringing math and software development closer together, but it is not necessary for everyone to be a mathematician to apply these concepts to software engineering. The speaker mentions the Bootstrap program, which teaches math through exciting software development projects to children in lower socioeconomic regions.A group of universities developed a curriculum for teaching coding and math principles to children in grades 6-12 using a language called Racket. This program has been successful in lower socioeconomic regions and has led to the introduction of algebra courses in many schools. The use of technical terminology in programming languages is important and should not be changed as it is necessary for learners to become experts and communicate effectively with others in the field. Examples are a powerful tool for teaching abstract concepts and guidance is important in functional programming. Development tools and visualizations can also aid in understanding. Recursion is a common concept that causes trouble for learners in functional programming.Visualizations are a powerful tool in functional programming, particularly when dealing with concepts like recursion. While recursion can be difficult to understand, even for experienced developers, a constructive approach can make it more accessible. For example, when writing a function to add all the numbers from n down to zero, we can start with a simple program and gradually build on it, noticing patterns and reusing code where possible. This approach can be applied to more complex forms of recursion, as well as other abstractions like high order functions and type classes. By introducing abstractions in a constructive manner, we can gain a deeper understanding of how they work and how to use them effectively.The speaker discusses the use of polymorphism and type classes in functional programming, which allows for the introduction of abstractions in a constructive manner. They also discuss the importance of design patterns in functional programming, particularly in regards to recursion, and suggest providing guidelines for different types of recursion to make it easier for programmers to get started. The speaker also emphasizes the importance of a tight feedback loop in functional programming, allowing for continuous feedback while writing code. They provide an example of this in a screencast from an online tutorial.The video discusses the benefits of tight feedback loops in programming, particularly in functional programming. The example used is a recursive function in Haskell, where the feedback loop allows for immediate testing and debugging. The video also touches on the visualization of recursion through fractal trees, which can be easily implemented in functional programming due to the lack of side effects. The video emphasizes the importance of tools and techniques that make it easier to learn and understand functional programming.important for designing and understanding the program, not just for checking it. Type systems can be viewed as a design tool, not just a constraint. The approach taken in the ""How to Design Programs"" book, which uses the variant of Scheme called Racket, involves writing out examples, writing a type signature in comments, and then writing the code. This approach emphasizes the importance of understanding and designing the program, not just checking it with a type system.The speaker discusses the benefits of using type signatures in programming, particularly in languages like Swift and Haskell. They explain that writing down the signature before writing the code can help with program design, and that a powerful type system can provide even more benefits. The speaker also addresses the issue of type errors and compiler annoyances, arguing that this is a problem with the tools and not a fundamental issue with type systems. They use an example in Haskell to demonstrate how type errors can be caught and fixed, and emphasize the importance of being able to run the rest of the program even if there is a type error in one part.The speaker discusses the importance of using types to design programs, not just to avoid compiler errors. They demonstrate how the compiler can help guide the programmer through the process of writing code by providing error messages and suggesting solutions. The speaker also mentions the usefulness of running programs with type errors for debugging and testing purposes. They argue that programming tools should continue to evolve and improve, and reference Brett Victor's website as a source of innovative ideas for programming environments.Brett Victor, a former Apple employee and Y Combinator researcher, has proposed innovative ideas for programming environments. One example is an experimental programming system that provides immediate feedback on intermediate values and call trees when changes are made to the program. Apple has also introduced playgrounds for Swift, which allows for immediate feedback and has developed a curriculum for teaching Swift using the app. The speaker emphasizes the importance of starting with concrete examples and introducing design patterns to guide users. He also suggests that tight feedback loops and visualization can be helpful in learning. While there are not many resources focused on teaching pure functional programming to children, the speaker has used Swift playgrounds with his own children and found it effective, although he notes that the approach is very state-driven in the beginning.The speaker likes a certain app for teaching programming, but doesn't like the state-driven approach. They mention that there is not a lot of material available for teaching Haskell to children, but they have some notes on their GitHub repository. They also discuss the use of functional programming languages for data processing and how it can work well for big data sets and searching for things. They mention that there are different Haskell libraries available for accessing relational databases and that it can be used for data science. The speaker is skeptical about using programming for business examples and mentions the difficulty of creating variations on a GUI.The speaker discusses the challenges of documenting and teaching functional programming, particularly at the intermediate level. They mention that while there is a lot of beginner material and high-level material available, there is a gap in the middle. They suggest that conferences and talking to people who use functional programming in production can be more convincing than just reading about it. The speaker notes that functional programming is being used in a variety of domains, including distributed systems, numerical computing, data science, biopharma, investment banks, and the blockchain space. They believe that we are in the transition from early adopters to mainstream adoption of functional programming. The speaker thanks the community partner for the event."
-qx6uDyA-8I,00:00:00,Stop writing tests,"Writing tests is one of the best ways to build confidence in releasing our software. It's so useful that many people advocate for test-driven development (TDD) where you write the tests before writing any code. So why would I suggest not writing tests at all?\n\nThe tests we write now aren't good enough -- we miss things or make mistakes, so for the same reason we've automated so many other processes, it's better to let a computer do it. In this talk we will go over some ways to use formal methods like finite state machines that allow tests to be generated, rather than hand-written and how that will save you time and result in better tests and more confidence in your releases.\n\n--\nBen is a consultant at Telstra Purple, where he helps teams solve their business problems. He is interested in all aspects of web development, and how we can learn from other industries to build better software. He has presented on various topics, from TypeScript to reactive programming to web authentication.",Ben Lowry,"Ben Lowry, a consultant at Telstra Purple, suggests that instead of writing tests by hand, we should start generating tests using formal methods like finite state machines. This will save time and result in better tests and more confidence in software releases. He acknowledges that writing tests can be difficult and time-consuming, and maintaining them can be a challenge. Additionally, it can be hard to find edge cases and bugs, and even with tests, bugs can still occur. Lowry's approach aims to address these issues by automating the testing process.Model-based testing is a technique that allows you to describe a system in a way that a computer can understand and test for you. The first step is to create an abstract model, which is essentially a diagram that shows the different states of the system and how they are connected. This diagram can be used to show others how the system should behave and can be used to write tests. The diagram can be used to model user interfaces, business logic, and business rules. By modeling the system as a finite state machine, you can identify edge cases and find bugs that may not have been found through traditional testing methods.Model-based testing is a technique that allows you to create an abstract model of your system and then use that model to generate tests. You can model anything from user interfaces to business rules or even dogs. One way to represent these models is through graphs, which can be generated using tools like Mermaid or XState. Once you have your model, you need to fill in the actions and assertions that the computer will use to test the system. This can include clicking buttons in the user interface or calling APIs and checking the results. There are several tools available for model-based testing, including GraphWalker, AltWalker, and XState.In this video, the speaker discusses how to generate tests from a picture using a model-based testing approach. They use an example of a machine with buttons and actions to demonstrate the process. The speaker explains that the model can be plugged into a tool like XState to generate tests automatically. They also discuss the importance of maintaining tests and updating them when things change. The speaker suggests using a table to uncover gaps in the model and define the behavior for edge cases. Overall, the video provides insights into how to use model-based testing to generate tests efficiently and effectively.The speaker discusses the process of model-based testing, which involves creating an abstract model of the system being tested and generating tests based on that model. They use the example of a stopwatch to demonstrate the process, showing how the model can be refined as new states and functions are discovered. The benefits of model-based testing include better understanding and coverage of the system, as well as quicker and easier test writing and maintenance. However, there are also challenges, such as a learning curve and the difficulty of creating a perfect model. Overall, the speaker sees model-based testing as the logical progression from manual to automated testing, with computers now able to generate and execute tests more effectively than humans.The speaker discusses the evolution of testing methods, specifically moving from manual testing to computer-generated testing. They explain that computers are faster and more efficient at executing tests, and therefore, it is no longer necessary for humans to manually write tests. The speaker also mentions a repository they need to access."
pPh5-EducEA,00:00:00,A gentle introduction to the world of quantum computing!,"What is all this talk about quantum computers and quantum computing?  Will I have to learn a new programming language?  What does it mean for our enterprise apps?  Our startup?  My games?  My job?\n\nQuantum computing is a fascinating topic that will change the world of computing and, probably, even our world.  It can be technical but don’t worry, we will make it easy to understand what you need to know.  \n\nThis talk will give a clear and simple introduction to quantum computing and explain the current state of play, services that are currently available, and what we can expect in the future, e.g. how it will affect IT jobs.\n\nIt’s all from a developer’s perspective and for developers but it will be understandable by anyone interested.  \n\nWith an Honours Degree in Theoretical Physics, a PhD in Computer Science and Software Engineering, and many years experience in IS an IT, I have the knowledge to be able to bridge the gap between the physics, computing, and software to help you understand Quantum Computing. \nAshley is a software developer, entrepreneur, academic and professional trainer.  \n\nHe has a PhD in Computer Science and Software Engineering from UNSW and 25 years experience in the IT industry.  For his startup he's using a very distributed microservices architecture with CQRS/ES on the backend, written in Scala and quite functionally-oriented, and React/JavaScript for multiple frontend SPAs.  It's deployed within Docker containers and using Docker Swarm.\n\nHe has delivered training courses around Australia, across SE Asia and in the US and UK for multi-national computer companies like Apple, IBM, HP and others, including CBA and Woodside Energy.  He has won awards and recognition from the ICT industry, academia, the federal government, and the student community for the quality and excellence of his teaching and professional training.  \n\nHe is the co-founder of Acavista, an edtech startup, and principal for Innovately.com.au, which helps with the application of Lean Startup and Customer Development principles and practices to the commercialisation of innovation in organisations from any sector, of any size, and at any level of maturity (not just startups).  He graduated from the Founder Institute and Curtin Accelerate startup accelerators.",Ashley Aitken,"Ashley Aitken, a software developer, entrepreneur, academic, and professional trainer, gives a clear and simple introduction to quantum computing from a developer's perspective. With an Honours Degree in Theoretical Physics and a PhD in Computer Science and Software Engineering, he has the knowledge to bridge the gap between physics, computing, and software to help understand quantum computing. 

In this talk, Ashley explains the current state of play, services that are currently available, and what we can expect in the future, including how it will affect IT jobs. He gives a brief history of computing, starting with analog computing, and explains how quantum computing differs from classical computing. 

Ashley has delivered training courses around the world for multi-national computer companies and is the co-founder of Acavista, an edtech startup, and principal for Innovately.com.au, which helps with the application of Lean Startup and Customer Development principles and practices to the commercialisation of innovation in organisations from any sector, of any size, and at any level of maturity.The history of computing began with analog computing, which used properties of the classical world to calculate logarithms and exponential functions. Digital computing then emerged, which abstracted away from the physics of the system to process bits using semiconductors. However, quantum computing is the next revolution in computing, based on the quantum world and quantum mechanics. Quantum computing is different from classical computing, and its applications are becoming increasingly useful. The speaker has a background in physics, computer science, AI, and IT, and has worked with companies like Apple, IBM, and the Commonwealth Bank. They focus on innovation and have been involved in startups, including their current venture, Innovate Li, which provides consulting services for lean startup with customer development innovation. The speaker thanks the sponsors for their support of the conference.The speaker introduces a new initiative called Eco Vista aimed at changing higher education. They thank the sponsors for supporting the conference and move on to discuss quantum mechanics. They explain that quantum mechanics deals with the microscopic world and behaves differently from the classical world we live in. They describe the famous double-slit experiment, where electrons behave like waves and create an interference pattern. The pattern is a probability distribution, not a physical object. The speaker notes that electrons behave like both particles and waves, which is unusual. They also explain that when a detector is used to detect which slit the electron goes through, the interference pattern disappears.In this video, the speaker discusses the concept of quantum coherence and decoherence in quantum physics. He explains that when an electron is isolated and not interacting with the environment, it behaves like a wave and is said to be in a coherent quantum wave state. However, when it interacts with the environment, the wavefunction collapses and it behaves like a classical particle. The speaker also discusses the concept of quantum superposition, where an electron can be in two states at the same time, and the probabilities of measuring it in each state are calculated using the wave function. The speaker mentions Schrodinger's cat experiment, where a cat is placed in a box with a radioactive particle, and the absurdity of the idea that the cat is both alive and dead until the box is opened.The video discusses two important concepts in quantum physics: Schrodinger's cat and quantum entanglement. Schrodinger's cat is a thought experiment where a cat is placed in a box with a radioactive particle that could potentially kill the cat. Until the box is opened and the cat is observed, it is considered to be both alive and dead. However, in reality, when the radioactive particle interacts with the macroscopic system, the cat will either be dead or alive. Quantum entanglement is the phenomenon where two particles can be entangled and their wave functions are dependent on each other. This means that if one particle is measured, the other particle's state is instantly determined, regardless of the distance between them. These concepts are difficult to understand and cannot be explained using classical physics.Quantum physics is a complex and strange field that is difficult to understand using classical physics. It is the most accurate and tested theory in the history of science, predicting physical constants with incredible precision. Quantum computing is based on the properties of quantum mechanics, such as superposition and entanglement. Quantum bits, or qubits, can be in both the state of 0 and 1 at the same time, allowing for multiple states to be processed simultaneously. In contrast, classical bits can only be in one state at a time. With n qubits, a quantum system can be in 2 to the N states at the same time, making quantum computing a promising field for solving complex problems.Quantum computing is a fascinating field that offers incredible possibilities due to the unique properties of quantum bits (qubits). Unlike classical bits, which can only be in one state at a time, qubits can exist in multiple states simultaneously. This means that with n qubits, there are 2 to the n possible states, which is exponentially more than the number of atoms in the universe. There are two approaches to quantum computing: digital and analog. Digital quantum computing is similar to classical computing, while analog quantum computing is used to simulate quantum systems. Quantum gates, which are similar to logic gates in classical computing, are used to manipulate qubits. The X gate is similar to a knot, the Toffoli gate is similar to an end, and there are many other operations that can be applied to one or more qubits. Processing in a quantum computer involves applying these gates to the qubits over time. However, there are challenges with quantum computing, such as decoherence, which causes qubits to lose their quantumness and become more classical, leading to high error rates. To make reliable quantum computing possible, quantum error correction is necessary. Despite these challenges, quantum computing offers incredible potential for solving complex problems that are beyond the capabilities of classical computers.Quantum computing involves using quantum bits (qubits) to perform calculations. However, qubits are prone to errors due to interactions with the environment, so quantum error correction is necessary to ensure reliability. To make one qubit reliable, about a thousand extra qubits are needed for redundancy. Quantum computers can perform bounded error quantum polynomial time calculations, which are believed to be more efficient than classical computers. There are two types of quantum computers: ion traps and superconducting circuits. The latter is commonly used and involves cooling a silicon circuit to nearly absolute zero to exhibit quantum properties. A quantum computer chip contains qubits and circuitry to interact with them. Cryostats with multiple layers are needed to keep the chip at near absolute zero temperature and isolate it from vibrations.Quantum computers are still in their early stages and require a lot of infrastructure to function properly. The quantum chip needs to be kept near absolute zero and isolated from vibrations and electromagnetic fields to maintain its quantum state. A cryostat is used to cool the chip down and a control processor layer is used to control the electronics that affect the chip. Traditional computers are used to program these control systems. Companies like D-Wave and IBM have built quantum computers with thousands of qubits, but they are not very high quality and decohere quickly. Programming a quantum computer involves using a DSL like Microsoft's Q# to control the electronics and transform the qubits. There are issues with coherence, input/output, and decoherence time that need to be addressed. Overall, quantum computers are still in their early stages and have a long way to go before they become widely used.Quantum computing is a rapidly advancing field that is attracting significant investment from companies like IBM, Microsoft, and Google, as well as governments like the EU, US, and China. While quantum systems are difficult to measure and have a short time of decoherence, recent breakthroughs have shown that qubit operations can be performed very quickly before decoherence occurs. The largest digital computer currently is IBM's Bristlecone processor, which has 72 qubits. Quantum computers are problem-focused, and can help solve problems in simulation of quantum systems, search, factorization, and optimization. For example, simulating electrons in a molecule for chemistry is very difficult with classical systems, but quantum computers can help solve this problem.Quantum computers are capable of simulating quantum systems, which is a difficult task for classical computers due to the exponential increase in memory required as the number of states increases. With quantum computers, simulating quantum systems is exponentially faster, making it possible to understand and build materials and chemicals for the pharmaceutical industry. Quantum computers can also perform searches much faster than classical computers, with an algorithm that can search through n numbers in the order of square root of n. This has implications for problems such as the traveling salesperson problem, which is an N factorial problem that can be solved much faster with a quantum computer.Quantum computing has the potential to solve complex problems that classical computers cannot. One such problem is the traveling salesman problem, which involves finding the shortest route between multiple cities. Quantum computers can solve this problem in the order of square root of n time, which is much faster than classical computers. Grover's algorithm is used to solve this problem, which involves applying operations to qubits to find the shortest route. Quantum cryptography is another application of quantum computing, which can be used to build cryptographic systems or crack current ones. In 1994, Shaw developed an algorithm for factoring large integers using a quantum fast Fourier transform, which can break current encryptions. However, we do not currently have a quantum computer that can do this, and it may take another ten years to develop one.Quantum computing is a new type of computing based on quantum physics. It involves operations on a number of quantum bits, and has the potential to break current encryption methods in the next 10 years. Shor's algorithm is a potential method for breaking encryption, but it has not been implemented yet. Quantum cryptography uses the idea of entanglement to share a public key privately and instantaneously. Quantum computers are good at processing systems of linear equations, which is useful for machine learning and AI. Quantum systems can perform recommendation engines algorithms using quantum operations that can perform recommendations like Netflix does. Overall, quantum computing is a complex and difficult field, but has the potential to revolutionize computing and cryptography.Quantum computing is a new type of computing based on quantum physics, not classical physics. Quantum computers are built around operations on a number of quantum bits, and they seem to be able to solve some problems much faster than classical computers. However, they are not the magical solution to everything. There are resources available to learn more about quantum computing, such as a paper by the National Academy of Science and libraries from major computer companies like Microsoft, IBM, and Google. The first major milestone with quantum computing is when we make a digital quantum computer that does something that's not really practical ever in a classical computer, which is called quantum supremacy. Quantum supremacy is coming in the next few years, and quantum computing will happen sooner than expected because technology improves exponentially. There is no reason why we can't have room-temperature superconducting devices for quantum computing."
q97D5MCFYM4,00:00:00,Things I learned from my mentors,"Technical Consultant - SheCodes Plus 2020 Alumni\nAlways interested in technology, it took until her 30’s for Kiri to make the leap into IT.\n\n--\nAfter finding someone who believed in her technical ability, at the beginning of 2020 Kiri started a clerical role in IT looking after business as usual for an enterprise system. Over the course of the year, Kiri sought additional training, and met many ‘mentors’ in the Perth Tech community that helped guide her through additional learning, with the new-found skills allowing her to reshape the role though the year, and then by early 2021 move into a new role as a Technical Consultant, building these applications.",Kiri Mews,"be able to guide you through your journey and provide you with valuable insights and advice. Kiri Mews, a Technical Consultant and SheCodes Plus 2020 Alumni, shares her experience of finding mentors in the Perth Tech community who helped her reshape her role and move into a new position. She emphasizes the importance of mentors in working smart and achieving goals faster. Kiri's journey started with a temporary position in IT, where she had to learn how to ask for help and figure out what she wanted to study. She was accepted into the SheCodes Plus program, which provided her with access to mentors and helped her gain confidence in technical conversations and problem-solving. Kiri now feels secure in her career and has recently obtained six Microsoft certifications. She defines a mentor as someone who can guide you through your professional or personal development, someone you trust and respect, and who can provide valuable insights and advice.A mentor is someone who can help with professional or personal development, whom you trust and respect, and who is open to conversation. It doesn't have to be a formal arrangement, but rather an informal connection based on their area of expertise. The mentor-mentee relationship is ultimately the responsibility of the mentee, who sets the goals. Some basics that beginners may need to be taught include time boxing, realizing that no one knows everything, and focusing on foundations first. It's important to stick with a goal and not jump ship when encountering difficulties, as the principles learned will carry over to other areas. Writing things down is also important.Python programming skills are transferable to other programming languages. Indentation errors can be useful as they provide error messages that help identify the problem. Documentation is crucial in technical roles, and it is essential to store notes in a place that can be accessed anywhere, such as OneNote or Notion. Creating checklists for tasks with more than three steps is helpful, and writing notes in a way that can be shared with others is appreciated. Meaningful comments in code and commit messages are essential. Bookmarks are not practical for storing information, and using Notion to index links and add tags is helpful. Consider publishing notes online to help others. Rubber ducking, or describing code line by line to a ""duck,"" can help debug code. Typing out questions or messages can also help solve technical problems.The speaker discusses various tips and tools for problem-solving in coding, including the use of a rubber duck as a sounding board, writing in pseudocode, and utilizing keyboard shortcuts and extensions. They also emphasize the importance of helping others while still learning, as it can solidify one's understanding and lead to new perspectives on problem-solving. The speaker provides links to their favorite resources on Github for easy access.recommend starting with a basic exam, even if you're aiming for a higher level certification. Online training days are often free and can provide valuable preparation tips. It's important to look at the learning materials provided by the exam provider and understand how the exam is weighted. Setting a date and time frame for the exam, as well as knowing the cancellation and rebooking policies, can help with preparation. Building projects is a great way to learn new technologies and get a portfolio of work. Talking to other developers and being a ""rubber duck"" can also help with problem-solving. Finally, certifications can help validate knowledge and bridge the gap between self-study and work experience. Microsoft certifications are discussed in more detail, but the advice can apply to other technology certifications as well.share some tips for those looking to advance their career in IT. Firstly, it's important to book your exam date and set a timeframe for when you want to attend the exam. Make sure to also check the cancellation and rebooking window and set a reminder before it expires. Next, find the resources for the exam contents and focus on the weighted areas. Delete what you know inside out and flag what you don't understand. Review and focus on your learning. Online proctoring is available but be aware of the exam conditions. They only allow one screen and only water is allowed. Celebrate and share your certification on LinkedIn. 

When planning your next steps, talk to people who have hired before to get information on interview processes and different roles. Keep an eye on different roles and highlight transferable skills in your job applications. Understand the salaries before going into technical interviews and research salary expectations beforehand.The speaker discusses the importance of understanding salaries and having a clear idea of what you want in a job before entering salary negotiations. They emphasize the need to research and communicate salary expectations and preferences for job title, boss, team, location, and day-to-day duties. The speaker also recommends finding mentors by getting involved in the community, attending events, and seeking out friends and friends of friends for recommendations. They highlight the importance of organizations like She Codes Australia and technical meet-ups for networking and finding like-minded individuals in the tech industry.transcript discusses the importance of networking and finding mentors in the tech industry. The speaker suggests attending meet-ups and events, reaching out to friends and acquaintances, and utilizing social media platforms like LinkedIn and Twitter to connect with potential mentors. They emphasize the importance of being clear about what you're asking for and expressing gratitude for any help received. Finally, the speaker encourages celebrating successes with mentors and showing a willingness to pay it forward by helping others in the future.The speaker shares tips on how to engage with mentors and celebrate success in the technology industry. They suggest being friendly and making it easy for mentors to help, as most people are willing to offer assistance. Celebrating advancements in one's job and expressing gratitude is also important. The speaker personally celebrates giving talks at developer conferences and thanks everyone who has helped them on their journey, including friends, family, and organizations like She Codes Australia and DDD Perth. Overall, the message is to ask for help and appreciate those who offer it."
45sMGmb5iyA,00:00:00,Blockchain: More than cryptocurrency!,"Blockchain is more than just cryptocurrency; it's a complex assembly of technologies that offer practical solutions to some very challenging problems.\n\nIn this session {the speaker} will share their adventure learning about blockchain, how it works and how they developed their own. From its defining principles, its distributed nature and the magic that is consensus. I'll also explore some of the potential real world applications that aren’t just another altcoin!\n\nBy the end of the session, you will have an understanding of blockchain outside of the context of cryptocurrency and be equipped with the knowledge you need to embark on your own blockchain adventure!",Brandon Lewis,"Blockchain is a complex assembly of technologies that offer practical solutions to challenging problems beyond cryptocurrency. The speaker, Brandon Lewis, shares his adventure learning about blockchain, its defining principles, distributed nature, and consensus. He explores potential real-world applications outside of cryptocurrency. Blockchain is a collection of databases distributed across multiple nodes linked together through cryptography. It is immutable, meaning that the data in it cannot be changed, and it is trustless, meaning that you don't have to trust all the nodes in the network. There are severe drawbacks to blockchain that would rarely prevent its use, but its three key properties make it really cool.Blockchain is an immutable and trustless technology that is highly resilient due to its distributed nature. It can be public or private and can serve smart contracts, which have many use cases in industries such as insurance and finance. The technology is gaining significant attention from venture capitalists and businesses alike. Cryptography, hashing, and peering are the key ingredients that make blockchain work. Hashing is what makes blockchain immutable, as changing the data within a block would change its hash and break the entire chain. Peering provides distribution and resilience to the blockchain network.discussion of cryptography earlier. Essentially, nodes compete to solve a complex mathematical problem and the first one to solve it gets to add the next block to the blockchain. This process is energy-intensive and requires a lot of computational power, but it ensures that the network is secure and resistant to attacks. Proof of stake, on the other hand, is a newer method that involves nodes staking their own cryptocurrency as collateral to validate transactions and add blocks to the chain. This method is less energy-intensive but still ensures the security of the network. Overall, the use of distributed hash tables and consensus algorithms like Byzantine fault tolerance are key to creating a secure and resilient peer-to-peer network like a blockchain.The video discusses the concept of proof of work and proof of stake in blockchain technology. Proof of work involves computational difficulty where nodes must invest time and resources to validate their work through hashing. Proof of stake, on the other hand, requires an investment in the blockchain and involves a form of voting to determine the legitimacy of nodes. The practical applications of blockchain technology include supply chain tracking, such as the WWF's bait to plate transparency project, which addresses issues such as slave trade and unsustainable fishing. The Bind platform was used for this project, and Samantha Jones raised 1.2 million dollars in a partnership with an M.The transcript discusses various applications of blockchain technology in different industries such as fishing, apparel, real estate, and energy. The use of blockchain can help address issues such as slave trade, unsustainable fishing, unsafe work conditions, and democratizing elections. However, the technology is not without its challenges, including performance issues and the immutability of data. The presentation provides useful links for further exploration of the topic."
poJt8dZH9qE,00:00:00,Forget your passwords with the Web Authentication API,"Passwords are hard. Data breaches frequently expose poor security practices, proving that, as an industry, we're not very good at this. As developers have become more aware of these challenges, we've tried to offload password management to \",Ben Lowry,"Ben Lowry discusses the challenges of password management and the Web Authentication API as a solution. He explains that authentication is about proving identity through something you know, have, or are. Passwords are frequently used but are not secure, as data breaches expose poor security practices. The Web Authentication API helps to eliminate passwords and improve security. Lowry emphasizes the importance of sponsors, volunteers, and committee members in making the conference possible. He also discusses the limitations of passwords and the need for better authentication methods.Passwords are a common security measure used to protect user accounts, but they are often weak and easily guessed. The top ten most frequently used passwords are all simple and easy to guess, covering 1.6% of accounts. Password complexity rules, such as requiring a capital letter or symbol, do not necessarily make passwords stronger. Forced password changes every few months can lead to predictable patterns in password creation. Additionally, people often reuse passwords and struggle to remember them, leading to security breaches. Social logins and multi-factor authentication are not foolproof solutions either, as they can also be vulnerable to hacking. Overall, passwords are a shared secret that cannot always be trusted, and alternative security measures should be considered.The web authentication API is a new technology that enables password-less authentication and simplifies the use of multi-factor authentication. It delegates the responsibility for authenticating a user to their own device, eliminating the need to send a secret over the internet. The API uses external authenticators, such as Yubikeys, or internal authenticators, such as fingerprint scanners on phones, to prove a user's identity. The process involves sending a username and possibly a password to the server, which responds with a challenge and details about the website and the authenticator being used. The authenticator then responds with a signature, credential ID, and public key, which are verified by the server. This technology has the potential to improve security and simplify the authentication process for users.The video discusses the use of authentication protocols, specifically the FIDO2 protocol, which involves using a hardware authenticator to verify a user's identity. The protocol involves several parties, including the browser, website server, and the authenticator itself. The authenticator verifies the user's identity through possession, PIN number, or biometric rating, and stores a credential that is scoped to the website being accessed. The credential is an asymmetric key, with the private key stored securely on the device and the public key sent to the browser and server. The public key is used to encrypt messages and ensure that only the intended recipient can read them.The video discusses the use of public and private keys in encryption and authentication. It explains that the private key must be kept private to prevent impersonation. The web authentication API is a new tool that allows for secure authentication using public and private keys. The API is available on most browsers, but its availability varies by region. The video also provides a timeline of the API's development and adoption by major browsers.In the past year, there have been significant developments in the use of external and internal authenticators for logging into websites. Firefox and Chrome have enabled the use of external authenticators, and Safari has experimental support on Mac OS. Android devices 7 plus can act as hardware platforms with indicators, and iOS is expected to follow suit soon. While there are still some quirks and differences in browser support, the situation has improved significantly. Developers can use a JavaScript API to check for support and offer this feature to users. Overall, the adoption of web authentication is still in the early adopters phase, but it is a promising development for improving online security.The transcript discusses the use of the web authentication API for passwordless login and account management. The user verifying platform Authenticator can be used to determine if a device can act as a platform for authentication, such as with Windows Hello or Touch ID. Registration and login credential management are important considerations, as well as account recovery. The trade-off between security and convenience must be considered, and hints and messages can be used to encourage users to adopt the new system. The use of usernames instead of passwords is also discussed. However, browser support for this technology is not yet widespread.The video discusses the implementation of passwordless authentication using authenticators such as UV keys. The process involves registering an authenticator device and storing keys on it for future logins. The video also mentions the need to manage multiple devices and consider fallback options such as using a password or sending a magic link via email. The video suggests that big players like Google, Facebook, and Twitter have already implemented two-factor authentication using authenticators. The video concludes with a demo of the process.The speaker demonstrates a website login process using an Authenticator. The user logs in with their password and checks if they have a registered Authenticator. If not, they are prompted to register one. The speaker explains the code involved in registering the Authenticator, including making a request to the server, transforming data, and sending the credential to the server. The user can manage their credentials by viewing a list of registered ones and adding or removing them. The speaker notes that the demo is simplified and suggests adding prompts and success messages in a real application.The speaker demonstrates how to use a security key for web authentication, which is a more secure method than sending passwords over the internet. The security key is inserted into a USB port and prompts the user for authentication, either through a PIN or a button press. The speaker also discusses the limitations of current authentication methods and the benefits of web authentication. The security key is supported by most platforms, except for iOS, which is expected to support it in a future update. The speaker encourages the audience to consider implementing web authentication and eliminating passwords altogether."
E55ts7kffHc,00:00:00,developing resilience for a crazy future - Nigel Dalton,,"Mars, Cars, Stars and VR","Nigel Dalton, speaking on developing resilience for a changing future, discusses the need for collaboration in a world that is rapidly changing. He shares his experiences with technology, including the Microsoft Hololens and a representation of technology used in real estate. Dalton emphasizes the importance of curiosity and talent in inventing for the future. He also discusses the changing political landscape and the need to consider new rules around property, jobs, and science. Dalton concludes by highlighting the importance of adapting to a world where the rules are off and where collaboration is essential.The speaker discusses the potential impact of changing rules around property, jobs, and science. They mention the impressive feat of sending a million people to Mars and the advancements in technology that have made it possible. They also discuss the development of a network of satellites that deliver internet and the engineering behind the landing of a rocket on a platform. The speaker emphasizes the importance of staying current in the digital economy and adapting to new platforms and media. They mention their own experience in the industry and the relevance of virtual reality in today's world. The speaker concludes by discussing the resilience and motivation to technological change, citing their 15-year-old son as a source of inspiration.The speaker discusses the rapid pace of technological change and how it affects our daily lives. They mention various devices such as Pinterest, Instapaper, Oculus, and Samsung Gear, and question their usefulness. The speaker also reflects on the evolution of television, from a single black-and-white channel to the current state of media consumption. They work at a media company and emphasize the importance of partnerships in this industry. Overall, the speaker highlights the need to adapt to new technologies and embrace change.The speaker discusses the future of media and how Twitch, a platform for watching people play video games, has become a popular form of entertainment. They also mention the exponential growth of technology, such as a CPU that can manage one trillion instructions per second, and how it has changed the way we consume media. The speaker also talks about their recent visit to Singapore and the art science museum, where an artist printed out every photo uploaded in 24 hours, totaling one million photos. They discuss the potential for media revenue through platforms like Google's self-driving cars, which could allow for more media consumption while on the road. Overall, the speaker emphasizes the importance of understanding and adapting to the changing landscape of media.The speaker discusses the evolution of link design on websites, specifically on Google and Facebook. They mention the similarity in UX and UI between the two companies and how it can be nerve-racking for competitors in the real estate market. The speaker also talks about the advancements in technology, such as self-driving cars and virtual reality, and how they will all come together in a cloud of data. They reference Charles Darwin's book, ""On the Origin of Species,"" and how it was rewritten multiple times to include new information. The speaker ends by mentioning the paper clip and its association with Microsoft.The speaker discusses the concept of ""survival of the fittest"" and how it is not necessarily applicable in today's economy. He uses the example of Uber and how it disrupted the taxi industry, causing many taxi drivers to struggle to adapt. He also discusses the unintended consequences of such disruptions and how they can affect different groups of people. The speaker emphasizes the importance of resilience and adaptability in organizations and individuals in order to thrive in a constantly changing world.The speaker discusses the problem of learned incapacity among taxi drivers, who have become accustomed to not talking to passengers and driving slowly due to years of experience. However, the emergence of ride-sharing services has created new opportunities for drivers to make money, but they must also maintain a good rating from passengers. The speaker also touches on unintended consequences, such as the yellow cab of shame and the potential for public transport to become more prevalent. They also criticize a business person who failed to understand the difference between complex and simple problems in the real estate industry. Overall, the speaker emphasizes the importance of understanding the interconnectedness of different systems and being open to unintended consequences.Airbnb platform has revolutionized the property management industry, allowing individuals to lease out their properties on a short-term or long-term basis. This has caused concern for traditional real estate agencies, as the rental income from properties is being eaten away by the Airbnb platform. The future value of a real estate agency is now being calculated based on the number of rental properties managed, as it provides a stable and repeatable income. The Airbnb platform has also caused a shift in the way people think about their assets, as they can now borrow money against the future revenue of their properties. The future of real estate is already here, but it is unevenly distributed, with some areas like Kalgoorlie being left behind. It is important to keep an eye on these changes and adapt to the new industry standards.The speaker believes that the future is already here, but it is unevenly distributed. He gives an example of how real estate is being sold through a platform called Buy Sell Swap Pro, which enables people to buy and sell properties beyond their neighborhoods. He also talks about how companies like Facebook and Hi Pages are changing the way people do business. The speaker believes that the key to success is to think globally but act locally. He emphasizes the importance of building networks and communities, and how this can lead to a more sustainable and efficient way of doing business. The speaker also talks about the importance of transparency and trustworthiness in business, and how companies like Hi Pages are helping to build these values into their business models. Overall, the speaker believes that the future of business lies in building strong communities and networks, and in embracing new technologies and platforms to enable this.The speaker discusses using Facebook's mobile section called ""property within local market"" to buy ads on a neighborhood basis. They mention the large amount of cash that companies like Uber and Google have to find new business models and crush industries. The speaker also talks about the uneven distribution of income from property managers using websites and platforms like Facebook and Google. They mention the use of holographic real estate agents by a company called 10x and the potential for robots to replace real estate agents. The speaker suggests keeping an eye on these developments and being open to new technologies.Google 10x has developed a digital robot that is replacing real estate agents, causing concern among agents. The company has sold $30 billion worth of property using this model. They are also taking pictures of businesses and properties for their Business View feature. Gumtree, owned by eBay, has 67,000 property listings and is a competitor to Seek and Carsales. Snapchat is using geofilters to advertise real estate agents and is exploring a peer-to-peer platform. Ad blockers are becoming more common, with 8-10% of users having them. A mobile app with the value of every property in Australia is also being developed. The technology is advancing rapidly, and companies must adapt to stay competitive.The speaker discusses their company's involvement in technology and innovation, specifically in the real estate industry. They acquired a company called Menopause, which had a mobile app with the value of every property in Australia. They used this technology to create 3D walkthroughs of properties, which tapped into the psychology of consumers. The speaker's team faced engineering challenges, such as creating a couch that worked in the virtual walkthroughs. They also developed augmented reality experiences for museums and neighborhoods. The speaker emphasizes the importance of understanding consumer behavior and using technology to create engaging experiences.The speaker discusses the concept of turning websites into magical neighborhoods with data flowing through them. They mention the use of technology such as the HTC and the Leapfrogging of technology. They also discuss the importance of diversity in their approach and the development of robots for dementia care. The speaker touches on the implications of quantum computing and 5G technology. They also discuss the separation of inventions from innovation and encourage the engagement of the inventorship spirit in organizations.The speaker recommends fostering a spirit of innovation within organizations, particularly in businesses based in Silicon Valley."
_a6fdheHpcY,00:00:00,Inclusive storytelling with dynamic data,"Since the pandemic we've seen an uptick of charts and data visualisation shared by news, government, and health organisations. Most COVID-19 data was presented as images on social media without alternative text-descriptions, or as interactive charts that were often too complicated to understand, or didn't work with increased font size, keyboards, screen readers, and other assistive devices and settings. \n\nBecause of this, many people with disabilities or varying levels of education and data literacy were excluded from receiving important health information—discrimination with fatal consequences.\n\nWhen we think about data visualisation accessibility, we often think \",Larene Le Gassick,"Larene Le Gassick discusses the importance of inclusive storytelling with dynamic data, especially during the pandemic when there was an increase in charts and data visualizations shared by news, government, and health organizations. However, many of these visualizations were not accessible to people with disabilities or varying levels of education and data literacy. This exclusion can have fatal consequences as important health information is not received. Larene is a Microsoft MVP in accessibility and a community manager of Tech Leading Ladies Australia. She specializes in building full-stack applications with accessibility and inclusion in mind. She is also a member of The Dataviz Alley group, which aims to make data visualization inclusive for people with various disabilities. Larene is a software engineer at Intopia, a digital accessibility consultancy. She is half Chinese and half Australian and pronounces her name as Loren. She is also a guest university lecturer on digital accessibility and software architecture. Larene has written an article on databiz for a non-profit company, which will be released in December.Loren LG, a data visualization expert, is giving a talk on inclusive storytelling with data. She draws inspiration from a book called ""Storytelling with Data"" by Cole Nussbaumer Knaflic, which emphasizes the importance of good design in creating accessible data visualizations. Loren highlights the concept of inclusive design, which considers not only disability but also language, culture, gender, age, and other forms of human difference. She references a popular diagram from Microsoft that illustrates how designing for disability benefits everyone. While Loren won't cover in-depth accessibility data VIs basics, she provides resources for those interested in learning more.The speaker discusses the concept of disability as a mismatch between a person and their environment, and how designing for disability can benefit everyone. They mention Microsoft's inclusive design toolkit and the importance of providing multiple pathways for users to access data. The speaker also highlights the lack of resources for making interactive data visualizations accessible for screen reader users, using an example from Fox News during the US election. They emphasize the need for technical work to make data visualizations accessible for screen readers.The speaker discusses the importance of creating accessible data visualizations and recommends using the Highcharts JavaScript charting library with accessibility modules. They also share their experience building a dynamic chart for a logging company using d3.js, but acknowledge that it was not fully accessible and lacked testing with real screen reader users. The speaker emphasizes the need to test with actual users and avoid repetitive Aria labels that can make the experience unpleasant for screen reader users.The speaker discusses the importance of testing with actual screen reader users and highlights the accessibility features of Highcharts, a customizable chart-building library. They provide a checklist for making static and dynamic charts accessible, including ensuring a descriptive title, appropriately labeled axes, and proper number formatting. Visual testing considerations include contrast, font legibility, and providing alternative pathways for color-dependent information.The speaker discusses the importance of making charts and data visualizations accessible to all users, including those with disabilities. They suggest using legible fonts, providing alternative text for non-visual users, and including a link to the data source. They also mention the ability to add alternative text to images on social media platforms like Twitter. The speaker then discusses the HTML and JavaScript behind charts in banking and finance apps, emphasizing the importance of making this code accessible as well.The speaker discusses how to create accessible data visualizations using HTML tables and charts. They suggest starting with a table of data and determining if a chart is necessary. If so, they recommend ensuring the HTML table is accessible by adding scope to header cells and using classes to improve readability. They then demonstrate an interactive column chart and test its accessibility using keyboard navigation and focus styles. The speaker notes the importance of underlining links and using appropriate contrast for focus styles.The speaker demonstrates the accessibility features of a data visualization chart using Highcharts. They show how the chart can be interacted with using a screen reader and how the tooltip provides all the necessary information. However, they also note that Highcharts does not provide accessibility out of the box and they have added a module to make it accessible. They demonstrate how the chart can be navigated using the keyboard and how the focus outline works. They also mention other accessible chart libraries, such as the Visa chart components library.The speaker discusses two accessible chart libraries, Highcharts and Visa Chart Components Library, and praises Highcharts for its simplicity and keyboard behavior. They demonstrate how to navigate the chart using arrow keys and switch between data series using up and down arrows. The speaker also mentions the legend and how to toggle it on and off using left and right arrow keys. They highlight the library's export options, including CSV, Excel, and data table. The speaker then demonstrates the screen reader experience, emphasizing the importance of semantic HTML and ARIA roles for accessibility. They navigate the chart using the screen reader's virtual cursor and note that there is more information available when using a screen reader.Highcharts, the speaker demonstrates how the platform has made their charts accessible for screen reader users. The speaker navigates through a chart using a screen reader and describes the different elements of the chart, such as the x and y-axis, data series, and headings. They also highlight the importance of adding Aria to the parts of the SVG to give it meaning. The speaker recommends inspecting the DOM and turning on the accessibility tree to understand how Highcharts has made their charts accessible. Overall, the speaker emphasizes the importance of making charts accessible for all users, including those who may not be able to see the chart.The speaker discusses the importance of accessibility in creating interactive charts using JavaScript. They emphasize the need to add mouse and keyboard interactivity, as well as Aria to the parts of the SVG to give it meaning. The speaker also highlights the importance of visual accessibility and content accessibility, including keyword navigation and providing non-visual content to describe the chart for screen reader users. They caution against getting too creative with Aria and recommend using high charts or other frameworks that have been tested with real users as a reference. The speaker also advises against using color alone to differentiate data and suggests using monochrome palettes instead. They provide a list of resources, including Chart Ability, which is a checklist of tests for creating accessible charts.The speaker thanks Lauren for her presentation and announces that the next talk will begin shortly."
JRztg219yx0,00:00:00,Yow! Nights,"Yow! Nights - Mike Amundsen\n18 April 2018 at Bankwest, Perth, WA\nPresented by DDD Perth and Yow! Nights",Mike Amundsen,"Mike Amundsen is a speaker who recently presented at Yow! Nights in Perth, Australia. He is a member of the API Academy, a group of researchers and thought leaders who travel around the world to meet with organizations and collect ideas to share back. Mike travels extensively, visiting places like France, South America, and Copenhagen for work. He is an expert in creating great APIs and interfaces for businesses and services, and shares his knowledge with others. His talk was not technical, but focused on how to create successful APIs in a market-driven business.The speaker discusses the challenges of creating great APIs and interfaces for businesses and services. They reference the book ""Good to Great"" by James Collins, which outlines seven principles for transitioning from a good company to a great one. These principles include having level 5 leaders, confronting brutal facts, and having a culture of discipline. The speaker suggests that these principles can be applied to the world of APIs, which are often seen as a marketplace and business imperative. They emphasize the importance of using technology to accelerate growth, but caution against using it for its own sake.accelerate growth for the entire organization. This is where the level 5 developer comes in, as they are able to not only manage their team effectively but also have a deep understanding of the business and how technology can be used to drive growth. They are able to make strategic decisions and prioritize projects based on their impact on the organization as a whole.

However, it's important to note that becoming a level 5 developer is not just about technical skills, but also about leadership, humility, and a focus on the greater good of the organization. It's about being a team player and working collaboratively to achieve success.

In conclusion, using technology to accelerate growth is not just about implementing the latest and greatest tools, but also about having the right mindset and leadership to drive success. The level 5 developer embodies these qualities and is able to make a significant impact on the organization as a whole.The speaker discusses the idea of being a good manager and how it involves helping the team improve and become more effective. As one progresses in this role, the focus shifts from personal interests to the needs of customers and stakeholders. The speaker cites Spotify as an example of a company that focuses on building a community of developers and encourages humility in leadership. The speaker also mentions the importance of resolve and determination in pursuing the company's goals, even when colleagues may not understand. The speaker then discusses the ""first who then what"" rule, which emphasizes the importance of hiring the right people before determining the direction of the company. Netflix is cited as an example of a company that excels in this area.The importance of having the right people on your team is emphasized by both Spotify and Netflix. Netflix is known for hiring top talent and encourages managers to fight to keep valuable employees. They also believe in giving direction and support to their employees rather than telling them what to do. Having a clear vision is also crucial in motivating and guiding employees towards a common goal. Netflix even went as far as creating custom-built interface APIs for each device to ensure the best user experience. Confronting brutal facts is another important aspect of success. The Stockdale paradox, named after a Vietnam War prisoner of war, emphasizes the importance of having faith while also acknowledging the harsh reality of the situation. Ignoring the brutal facts can lead to failure, while confronting them can lead to finding solutions. Steve Yeager's experience at Google highlights the importance of confronting brutal facts. He was hired from Amazon and was shocked by what he found at Google, but he used this realization to make positive changes.Steve Yeager, a former Amazon employee who was hired by Google, wrote a memo about how Google was in trouble and needed to change in order to compete with Amazon. He was brutally honest in his assessment and even posted it publicly on his Google+ page. Surprisingly, Google did not fire him and instead took his advice. Yeager has since left Google but has continued to write similar messages to his former company. This honesty has become his superpower and has helped the projects he worked on at Google become successful. 

Jim Collins, in his book, talks about the Hedgehog concept, which is the idea that finding the confluence of what you are passionate about, what you can be the best at, and what drives your organization is the sweet spot that makes you unbeatable. This concept can be applied to products and organizations. 

Companies like Netflix, Amazon, Google, Microsoft, and Facebook invest in creating internal tools and processes that play on their biggest value or superpower.discussing how companies like Netflix, Amazon, Google, Microsoft, and Facebook invest in creating internal tools and processes that align with their biggest values and principles. For example, Netflix's most important principle is that their system never goes down, so they invested in creating a super resilient system using software like Chaos Monkey and Chaos Army. Amazon's value is to create as many products as possible, so they invested in a system where employees can press a button to get a new product build without asking for permission. Etsy's superpower is releasing about 40 times a day to production, so they built a system to let anyone in their company release to production with a simple protocol. The key takeaway is that every company has a superpower that can make them great, and investing in making that powerful and easy for everyone can lead to success.Twilio is a company that excels in creating a powerful and easy-to-use API for SMS messaging and other services. They understand that their secret sauce is their developers and their passion for helping them achieve their goals. Passion and discipline are key drivers for reaching greatness, and Twilio exemplifies this by creating a culture of discipline where they focus on the small details and do things over and over again. Steve Collab Nick, a great evangelist and speaker on APIs, emphasizes the importance of discipline in doing things that may not be exciting or interesting but are necessary for success.The speaker discusses the ideas of Jim Collins, particularly his emphasis on discipline and attention to detail in creating great products. He uses the example of Balanced Payments, an early open banking API, and Twilio as companies that excel in this area. The speaker also touches on the importance of technology accelerators, but cautions against picking technology for its own sake. Instead, companies should focus on what they really need and what is appropriate for their audience. The speaker notes that Amazon is agnostic about technology and focuses on what comes out of the system rather than the specific tools used to create it.Amazon's approach to technology is focused on producing interoperable results rather than specific technologies or services. They are willing to try new technologies, but only if they prove to be effective and useful. They prioritize solving problems for their customers over the use of any particular technology. They also emphasize the importance of culture over strategy and technology, and caution against becoming too reliant on any one technology or approach. Finally, they use the flywheel principle to build momentum and make small initiatives easier to push forward. Overall, Amazon's approach to technology is pragmatic, focused on results, and adaptable to changing circumstances.The flywheel principle is a concept that involves small initiatives and efforts that become easier and easier to maintain as they gain momentum. This principle is often experienced by developers who need to concentrate on their work for extended periods of time. Microsoft recognized the importance of this principle and created buildings with individual offices to allow developers to focus without interruption. Continuous delivery and continuous integration are examples of the flywheel principle in action, as they involve making small improvements frequently to make the process easier over time. This approach allows for more opportunities to get things right and reduces the risk of failure. By breaking tasks into small chunks, it becomes easier to make incremental improvements and maintain momentum.Continuous delivery is about breaking down tasks into small chunks to make it easier to manage. This approach reduces the risk of failure and makes it easier to identify and fix problems. By doing things in smaller increments, there are fewer things that can go wrong, and it's easier to back out changes if necessary. This approach also makes it easier to experiment and try new things without risking the entire company. Companies like Spotify, Netflix, Twilio, Amazon, and Etsy have all embraced continuous delivery in different ways, and have seen success as a result. The key is to focus on small, incremental improvements that add up over time.The speaker discusses the importance of tapping into passions and doing the little things to make a difference in business, using examples from companies like Twilio, Balance Payments, Amazon, and Etsy. They then introduce the concept of API pyramids, with level one being a functional but difficult to use API, and level five being an API that is not only easy to use and reliable, but also enjoyable and creates a sense of passion and expertise. The speaker emphasizes the importance of striving for higher levels of API usability and creating APIs that are unique and unmatched by competitors.discussed in this YouTube transcript are about the importance of usability, functionality, and user experience in designing products. The speaker emphasizes the need to focus on the user's perspective and how they feel about using the product. The goal is to design beyond just functional and usable products and create something that makes people feel good. The speaker also talks about the importance of being humble and doing hard work, and how this attitude can help turn something from good to great. The speaker shares an example of how Amazon allows teams to make their own decisions about technology, as long as they stay within certain guardrails. Overall, the transcript highlights the importance of user-centered design and a humble attitude in creating successful products.Amazon's culture is focused on providing teams with tools and allowing them to make their own decisions within certain guardrails. The company emphasizes a ""you built it, you own it"" mentality, where teams are responsible for their own solutions. Amazon's culture is competitive and encourages creativity, but also requires teams to meet expectations. The company allows for duplication of solutions as long as each team maintains their own copy. Understanding the problem domain is crucial before starting a solution, and Amazon's motive is to build infrastructure and frameworks for others to create solutions. CQRS is a technology that can be used to solve specific domain problems, but it is not the solution itself. Netflix, on the other hand, has a shared understanding from top to bottom and does not rely on building block systems for others to create solutions.Netflix, Twilio, and other successful organizations have a shared understanding of their business from top to bottom, which allows them to create effective solutions. However, designing a great domain or context boundary can be challenging, as the boundaries may change over time. Incrementalism is a powerful approach to learning from each release and improving the system. Netflix designs their system based on type 1 and type 2 safety, which involves removing bugs and adding more to survive any bugs that haven't been found. Reliable systems continue to operate even in failure mode, and there are many examples of this in real life, such as airplanes and nuclear power plants. Michael Nygaard's book, ""Release It,"" is a great resource for understanding these concepts.The speaker discusses the importance of designing software for resiliency and mentions Michael Nygaard's book ""Release It"" which includes stability and capability patterns to help software continue to work and protect itself from bugs. The speaker notes that designing for failure is especially important in the microservice space where there is more network time than compute time. The concept of anti-fragility is also mentioned, where systems can learn and strengthen themselves through difficulty and friction. The speaker concludes by thanking the audience and mentioning their plans to visit Rottnest Island."
FjC1pDGsbu0,00:00:00,The Mistake Everyone Makes in Google Interviews,"System Design at Google/Meta/Netflix sounds terrifying - do I need to know about Borg? Spanner? Protobuf?!\n\nIt’s actually a lot simpler than you might think!\n\nI'll go over how to approach System Design in a structured fashion as we design our own mini-Twitter together, going from REST APIs to Graph Databases!\n\nWhat I'm covering will not only help you pass System Design Interviews, but hopefully guide you in designing scalable systems based off my experience in mentorship sessions with Google tech leads.\n\n\nMostly intermediate\n45 mins\nBackend Development\nI am an Australian software developer with a decade of professional experience across a range of industries, including Mining \u0026 Exploration, Government, Medical, Gaming, Social Media, and Telecommunications.\n\nMy hot take is that programming is exactly the same as cooking.",Nicholas Sia,"Nicholas Sia discusses how to approach system design in a structured fashion, using the example of designing a mini-Twitter. He covers common pitfalls in system design interviews and the key reason people often struggle with system design. He emphasizes that his approach will not only help with interviews but also with day-to-day system design. He also discusses the interview process and how to prepare for it. Sia draws on his experience as a software developer with a decade of professional experience across various industries.The interviewee is introduced and asked to design a social media application where users can share messages with their friends. They present a standard stack with high availability, a database, and a CDN, and suggest adding Redis for caching. However, the interviewer points out that connecting Redis to the compute service is not common. The interviewee stresses the importance of understanding the problem and trade-offs, rather than just relying on technology. They warn against incomplete solutions, delays, expense, unreliability, and bugs if requirements and data needs are not properly considered.time on the critical features that are necessary for the application to function properly. Once you have identified these features, you can move on to the next step, which is defining the non-functional requirements. These are the requirements that are not directly related to the application's functionality, but are still important for its success. For example, how many users do we expect to have? How much traffic do we expect to handle? What is our expected uptime? These are all important questions that need to be answered before we can move on to the next step, which is designing the architecture.

When designing the architecture, we need to keep in mind the function and non-functional requirements that we have identified. We need to choose the right technologies and tools that will help us meet these requirements. We also need to consider scalability, reliability, and security. It's important to keep in mind that the architecture is not set in stone and may need to be adjusted as the application evolves.

Finally, we need to test and validate our design. We need to make sure that it meets all the requirements and that it performs as expected. We also need to make sure that it is secure and that it can handle the expected load.

In summary, the key to successful system design is intentional design. We need to start with a clear understanding of the function and non-functional requirements, choose the right technologies and tools, design a scalable and reliable architecture, and test and validate our design. By following these steps, we can avoid the pitfalls of unintentional design and build systems that meet the needs of our users and our business.The speaker discusses the importance of focusing on areas of an application that have high risk or offer competitive advantage. They mention that authentication is a largely solved problem and can be quickly addressed. The speaker then moves on to non-functional requirements, such as throughput, which is split into read and write throughput. They suggest starting with rough estimates of expected user behavior to get a general idea of the required throughput. For example, if there are 100 million daily active users and each user posts five messages a day, the application would need to handle 6,000 requests per second for write throughput.The speaker discusses the rough math involved in designing a messaging system for 100 million daily Apple users. They estimate that the system will need to handle 500 million messages and 100 million follows per day, as well as 2 billion reads per day. They emphasize the importance of availability and consistency in the system, and note that users should receive responses within half a second for messaging and within two seconds for following other users. The speaker also explains the difference between strong consistency and eventual consistency, and notes that eventual consistency may be feasible for certain types of systems, such as ordering systems.The video discusses the concept of eventual consistency in backend systems, which allows for more scalability in write throughput. However, it also adds complexity to the application and may result in stale data being displayed to users. The video suggests that the acceptability of eventual consistency depends on the specific use case and user expectations. Additionally, the video briefly touches on the importance of data storage and durability.In this video, the speaker discusses the challenges of storing large amounts of user data and the importance of considering the durability of the data. They provide a simple calculation to estimate the amount of data that needs to be stored and caution against exceeding the limits of the chosen technology. The speaker also briefly touches on the schema for sending information within the system and suggests being intentional about technology choices instead of defaulting to certain options. They mention alternatives to REST for communicating with services.The speaker discusses the importance of being intentional about technology choices, particularly in database design. They provide an overview of different technologies, including SQL Server, REST, GraphQL, and gRPC, and their benefits and limitations. They also discuss the trade-off between strong consistency and eventual consistency in databases, and how it affects availability and throughput. The speaker emphasizes the importance of considering data flows and pre-computation in system design.The video discusses the user and data flows in a social media application. The speaker suggests pre-computing data and using caching to improve performance. They present a basic architecture that includes a graph database for the social graph service and a database for storing messages. An asynchronous worker updates feeds when new messages are posted. The speaker emphasizes the importance of explaining technology choices and considering ways to deal with less data.The speaker discusses ways to deal with less data, such as pre-computing and sharding, and emphasizes the importance of choosing the right tool for the job while considering the team's skill set and procurement. They caution against over-engineering and remind listeners to focus on their competitive advantages. The speaker also stresses the importance of communication with the product team and designing with intent.The speaker emphasizes the importance of talking to product teams and asking questions to design with intent. He encourages designers to explain why they have chosen certain design elements and why they have not chosen others. He suggests practicing design by studying white papers, tech blogs, and videos from companies like Twitter, Instagram, and Netflix. During a Q&A session, he advises asking stakeholders what problem they are trying to solve before choosing a technology, and having an awareness of different classes of databases. He stresses the importance of learning about underlying concepts rather than just relying on technology.The speaker advises focusing on the underlying concepts that power technologies rather than just learning specific technologies. By understanding these concepts, one can better understand how new products work and what benefits they propose. When discussing products with decision makers, it's important to act in good faith and seek consensus on what problems the product is trying to solve."
NCj0xNu8f8s,00:00:00,The Structure of Software Revolutions,"[LUNCHNOTE SPEAKER]\n\nThis talk will provide a new view of the Agile and DevOps movements, through the lens of scientific and cognitive revolutions.\n\nIt will show how to make strategic choices in recruitment, organization, culture, and technology to best situate an organization for success in this brave new world.",Mike Long,"Mike Long, a speaker at the DDD conference, presented a new perspective on the Agile and DevOps movements, drawing from scientific and cognitive revolutions. He discussed how strategic choices in recruitment, organization, culture, and technology can position organizations for success in this new world. Long drew inspiration from the book ""The Structure of Scientific Revolutions"" by Thomas Kuhn, which introduced the concept of paradigm shifts in scientific progress. He argued that Agile represents a new paradigm in software, and that DevOps and continuous delivery are instrumental in this shift. Long also mentioned his work with Bank West, which is undergoing its own revolution towards agile ways of working and building a new technology stack.Scientists operate within a paradigm until a revolution occurs and a new paradigm is established. This is the normal pattern of scientific progress, according to Kuhn. During normal science, scientists work to bring nature and theory into closer agreement within a shared worldview. However, anomalies may arise that do not fit into the paradigm, leading to a crisis in the field. To resolve the crisis, a new theory and foundation for the field must be established, leading to a paradigm shift. This pattern is similar to the history of software development. The progress of science is not a bug, but a feature of the normal pattern of scientific progress.The video discusses how science progresses through successive revolutions, using the example of the shift from geocentrism to heliocentrism. The speaker then applies this concept to the field of software engineering, which began with the Turing machine in the late 1930s. In the late 1960s, the field experienced a software crisis, prompting leaders to adopt principles and practices from engineering to solve the complexity problem. This led to a successful era of software engineering from the late 1960s to the late 1990s, but the field has since moved on to new paradigms.The speaker discusses the history of software engineering from the late 1960s to the late 1990s, which was a period of great progress in the field. However, this era eventually gave way to a crisis as software failures became more common and new approaches, such as open source and XP, challenged traditional engineering practices. In response, leaders in the field came together at Snowbird and developed the Agile Manifesto in 2002, which prioritizes satisfying the customer with early and continuous delivery of valuable software. This was a revolutionary idea at the time, but it has since become widely adopted in the industry.the effectiveness of these practices? The agile manifesto was a good start, but it wasn't until the second growth of Silicon Valley that we started to see unprecedented achievements and open-ended problems being solved. Companies like Flickr were able to deploy software ten times a day, and the term DevOps was coined. However, there are still problems to solve, such as the lack of tools for continuous delivery. Just like in physics and evolution, we need both tools and data to sustain a theory and spark a revolution. Agile has the theory, but we need more tools and data to show its effectiveness in improving business outcomes.talk is about the importance of data and tools in the software engineering industry. The speaker compares the need for data and tools in software engineering to the need for data and tools in scientific revolutions. They explain that while there has been a lot of anecdotal evidence about the benefits of agile approaches and practices in improving business outcomes, there has been a lack of data to support these claims. However, in the last decade, software engineers have built a lot of tooling around continuous delivery, which has made the process smoother and more efficient. The speaker emphasizes the importance of using these tools to automate everything that happens after the software is developed and to make the process more repeatable. They also mention the importance of data in the industry and highlight the work of the DevOps research and assessments company, which has been gathering data from thousands of IT professionals through an annual survey. The data gathered from this survey is used to identify high performers and low performers in the industry and to provide guidance on what organizations should focus on to improve their performance. Overall, the speaker stresses the importance of using data and tools to improve the software engineering industry and to become more professional in what we do.a critical aspect of the State of DevOps report, which highlights the difference between high-performing and low-performing IT organizations. The report provides real numbers to help organizations determine where they fall on the performance spectrum and what they need to focus on to improve. The most important aspect of the report is a diagram that shows what is predictive of financial outcomes in an organization. The two key factors that predict positive or negative financial outcomes are whether the company is adopting lean product management practices and whether they are able to do continuous delivery. The report also emphasizes the importance of transformational leadership and technical excellence in achieving these goals. There are four key IT metrics that are predictive of business performance: deployment frequency, lead time for changes, mean time to recover, and change failure rate. These metrics can be measured from incident systems, deployment systems, and task management systems, and can be monitored manually once a month. Finally, the report highlights the importance of understanding the entire value stream from customer need to delivery, and not just focusing on the development phase.The speaker addresses developers and emphasizes the importance of considering the entire value stream, from customer need to delivery, including IT operations and compliance. They recommend mapping out the full value stream and avoiding local optimizations. The speaker also recommends the book ""Only the Paranoid Survive"" by Andy Grove, which discusses the concept of strategic inflection points and how Intel transformed from primarily a memory business to a CPU business. The speaker notes that traditional industries such as banking, manufacturing, healthcare, and insurance are also facing similar inflection points and should consider digitalization. The speaker concludes by stating that DevOps defines the new paradigm and that agile is the theory that underpins it, and encourages gathering data, adopting tools, and focusing on technical excellence. There is no time for questions, but the speaker is available for further discussion.Thank you for attending this event. I will be available throughout the day and at the after-party to discuss any of the ideas presented. Please feel free to approach me for further discussion."
lwPqhSy7IzM,00:00:00,Paying it forward,"How can you level up your own career while simultaneously helping others less experienced than yourself do the same? And how can this help us to combat the diversity problem in our industry?\n\nCould we solve both of these problems in one go? Rather than constantly struggling to hire experienced developers, could we up-skill newer developers internally instead?\n\nIn this talk I’ll walk you through what I’ve learnt from years of training new developers, including bite sized tips and tricks you can take into your next pairing session. I’ll share my experience of becoming a Senior Engineer without exclusively working as an engineer, but rather by teaching others.\n\nThis talk is open to anyone at any level in tech, but uses anecdotes and advice specific to teaching engineering.\n\nNo experience necessary\n45 mins\nLeadership/Management\nI am a developer and educator, and have been teaching others to code for as long as I have been coding myself. I am a firm believer that anyone can learn to code, and prove it by dedicating a lot of my working and personal life to helping to improve the diversity in the tech industry.\n\nI have extensive experience in writing resources and teaching workshops about Computer Science and Programming for all ages and experience levels. My ability to describe technical details in a simple manner certainly sets me apart from others in my field and makes me an asset to any team.\n\nIn my spare time I can be found teaching my dog tricks, watching Netflix and yelling at \",Hayley Stewart,"Hayley Stewart, a developer and educator, shares her experience of training new developers and how it can help combat the diversity problem in the tech industry. She suggests up-skilling newer developers internally instead of constantly struggling to hire experienced developers. In her talk, she provides tips and tricks for pairing sessions and shares her experience of becoming a Senior Engineer by teaching others. She believes that anyone can learn to code and has extensive experience in writing resources and teaching workshops about computer science and programming for all ages and experience levels. She currently works at envato where she trains Apprentice developers and prepares them for joining their first team as a fully fledged developer. Her talk is open to anyone at any level in tech, but uses anecdotes and advice specific to teaching engineering. She also acknowledges the traditional custodians on the land where the talk is being held.The speaker begins by acknowledging the traditional custodians of the land and paying respect to Aboriginal and Torres Strait Islander people. She then introduces herself as a senior engineer and developer mentor at Envato, a company that provides creative stock and supports thousands of authors around the world. She explains her role as a developer mentor, where she trains and mentors apprentice developers for nine months before they join a team at Envato. 

The speaker then talks about her career journey, which began when she was 16 years old. Her goal has always been to feel confident in her role as a developer. She discusses how teaching and mentoring has helped her become a better developer and shares tips and tricks for effective teaching and mentoring in the tech industry. The speaker also emphasizes the importance of improving diversity in the industry.The speaker has been in the tech industry for nine years, starting at the age of 16. She has had two main career goals: to feel confident in her role as a developer and to help other women get into technical roles. She has spent half of her career in education, mentoring women of various ages in tech. However, she has struggled with imposter syndrome and feeling like she is not improving her own technical skills while teaching others. She used to believe that programming was the only way to improve her engineering skills, but has since realized that teaching and other activities can also contribute to growth.The speaker, an engineer, has realized that to improve their skills, they need to spend time both programming and teaching. They were initially scared when they were given the role of senior engineer, but they realized that their career in education had prepared them well for the role. They have also noticed that engineers who have dedicated more of their career towards teaching or mentoring tend to be better engineers. The speaker believes that teaching helps them to have a deeper understanding of a concept because they need to be prepared to answer questions from their students. Junior engineers tend to ask more intense and challenging questions, which forces the speaker to understand the concept thoroughly.Teaching others has helped the speaker deepen their understanding of coding concepts and improve their communication skills. They have learned to explain things in different ways to help others understand and this has translated to better communication within their development team. The speaker also learned to walk the walk and ask questions themselves, overcoming their fear of looking stupid. Coaching others through imposter syndrome has helped the speaker overcome their own feelings of inadequacy and they now feel confident as a developer.The speaker discusses their experience with imposter syndrome and how they have learned to be more forgiving of their own knowledge gaps. They emphasize the importance of being an effective mentor and explain that simply having knowledge does not make one a good teacher. They caution against overconfidence and mansplaining, and instead suggest being open to learning and working together to find answers. The speaker shares their own teaching strategies and encourages others to become good mentors as well.The speaker discusses the misconception that those who can't do, teach, and emphasizes that having knowledge does not necessarily make one a good teacher. Instead, the speaker suggests that those who understand can teach effectively. The speaker then provides tips on how to become an effective mentor, including participating in formal or informal mentorship programs at work, pairing with less experienced developers, onboarding new team members, and giving team presentations. The speaker also shares personal experiences mentoring individuals on speaking at conferences and upskilling their knowledge of Ruby on Rails.As a mentor, there are many opportunities to help others in the tech industry, such as mentoring at work, community events, or coding workshops. The role of a mentor is to help mentees discover ideas and solve problems for themselves, rather than providing solutions. A flowchart can be used to guide the mentoring process, starting with clarifying questions to understand the mentee's level of understanding and how far back to explain concepts. The mentor should then guide the mentee through problem-solving steps, such as breaking down the problem and researching solutions. The goal is to empower the mentee to become a better problem-solver and independent learner.The speaker discusses the importance of effectively communicating with others who may not have the same level of knowledge or understanding on a particular topic. They emphasize the need to identify whether the person is lacking in terminology or concept understanding, and to meet them at their level of understanding. The speaker suggests working together to build an explanation and confirming understanding through questioning. The process may need to be repeated multiple times, and the ability to explain something in multiple ways is important.The video discusses a process for helping someone understand and solve a problem. The process involves asking questions, giving explanations, confirming understanding, and guiding the person to a potential solution. It emphasizes the importance of being able to explain things in multiple ways and not just asking if something makes sense. The video also suggests time boxing tasks to ensure progress is being made and understanding is being retained. The example given involves helping someone understand a build pipeline and connecting it to GitHub.The speaker discusses a process for helping someone learn a new skill or navigate a complex task. The first step is to time box the task and have the person read relevant documentation. Then, assess whether the person is still having fun or becoming frustrated. If they are frustrated, go back to the beginning and ask more questions, giving more hints and clues. If they are still upset, it is okay to give them the solution. The speaker emphasizes the importance of having compassion, especially for those early in their career, and remembering that everyone has struggled with new skills at some point.The speaker advises mentors to have compassion and adjust their language and pace when explaining technical concepts to beginners. They also emphasize the importance of discussing failures and learning from them, rather than hiding them. The speaker also suggests providing meaningful work with no urgent deadlines for apprentices to learn and contribute to the product without feeling pressured.Mentoring is a valuable tool for onboarding new team members, and it's important to focus on meaningful work rather than meaningless deadlines. It's also crucial to leave your ego at the door when mentoring someone, as it's not about your experience but rather what the mentee needs to learn. However, only training those already in engineering doesn't help with the diversity issue in the industry. To address this, consider taking on career changes for diversity of thought and experience, and upskilling those who are gender diverse to create more role models. At Envato, their Apprentice program only takes on people who identify as women, which may not be equal, but it is fair.The speaker discusses their company's Apprentice program, which only takes on women and not cis men. They argue that this is necessary because it is much harder for women to break into the tech industry, find role models, and overcome imposter syndrome. They suggest that companies should consider more diverse hiring practices, such as removing names from CVs, and investing in upskilling internally. They argue that teaching junior employees the habits and values of the company is an investment that can boost the company's reputation and lead to longer tenures for employees. The Apprentice program is well-recognized and has helped improve diversity in the industry.The speaker discusses their work with Envirage and their efforts to improve diversity in the industry through an apprentice program. They also reflect on how their experience as a teacher has helped them become a better mentor. The talk concludes with a call to action for the audience to consider hiring juniors who bring diversity to their teams. The speaker encourages feedback on their presentation and invites further discussion on Twitter."
66amcwsJa2I,00:00:00,Your Unique Journey,"We spend a significant portion of our lifespans focussing on our careers; a journey that is uniquely yours – your full self, and your experiences. We will reflect on things in your career that have shaped you as a person, and help you to appreciate all the things you may not have realised that you brought to the table.\n\n--\nCamille is a technologist, software generalist, and proud geek, with 11 years of experience using emerging technologies to develop 3D simulations, digital twins, immersive training, VR/AR, gaming, robotics manufacturing, and automation. She has lead multiple software teams and is a champion of good team culture.\n\nAs an avid futurist she is fascinated by emerging technologies such as VR/AR, robotics, and machine learning. She believes there is tremendous potential in these technologies and the benefits that they can impart on Earth and beyond.\n\nShe loves to encourage interest in STEM especially for the upcoming generations, and has been a regular STEM mentor for The Innovator’s Tea Party. She has also presented for the Australian Computer Society, SAE College, Female Coders Collective, CoderDojo WA, and The Design Kids, and was a founding committee member of Immerse Australia.",Camille Woodthorpe,"Camille Woodthorpe is a technologist with 11 years of experience in emerging technologies such as VR/AR, robotics, and machine learning. She is a champion of good team culture and has led multiple software teams. Camille is also an avid futurist and believes in the potential of these technologies to benefit Earth and beyond. She loves to encourage interest in STEM and has been a regular STEM mentor for The Innovator’s Tea Party. In her talk, Camille encourages people to reflect on how their careers have changed them as people and how they have changed other people's lives. She visualizes career journeys like video games, where our initial stats are determined by factors such as genetics, family background, and culture. Camille believes that appreciating the uniqueness of our full selves and experiences is important in our careers.The speaker discusses how our upbringing and experiences shape our confidence, independence, willpower, ability to overcome challenges, and values. They explain that society tends to have stereotypical views of what makes people successful in their careers, such as being confident, intelligent, hard-working, well-spoken, collaborative, and focused. However, the speaker argues that there are often many ways to achieve an outcome and that confidence is a trait that many people dislike about themselves. They provide an example of how high academic knowledge did not guarantee real-world success, while a simpler view of the world mixed with things like calmness under pressure or critical thinking was effective. The speaker also mentions that our experiences, such as moving schools, standing up to a bully, winning a scholarship, or failing an exam, can have a profound effect on shaping our stats that collectively make up who we are.The speaker discusses the value of individuals who may not have 100% confidence and tend to overthink and validate things. These individuals can be valuable in high-risk environments as they are observant and cautious, which can lead to increased safety. The speaker emphasizes the importance of having a combination of risk-takers and those who are more cautious in a team. The speaker encourages individuals to reflect on their perceived weaknesses and consider how they can be strengths in certain situations. The speaker shares personal examples of how their poor memory, anxiety, and difficulty focusing have actually led to strengths such as note-taking, attention to detail, and filtering out non-priority information. The speaker concludes by emphasizing that success and value in individuals go beyond stereotypical traits and that everyone has unique strengths to offer.In this video, the speaker discusses the importance of surrounding oneself with highly intelligent people and focusing on one's own strengths. They use the analogy of a party in a game, where different players have complementary skills and work towards a common goal. The speaker emphasizes the importance of having people with different strengths in a team to cover all the bases and face different types of challenges together. They also discuss how supporting others can actually strengthen one's own stats, such as communication, mentoring, and perception. The speaker concludes by highlighting the importance of empathy and diplomacy when working closely in a team.knowledge to help others level up in their own careers. Additionally, being a good listener and showing empathy towards your colleagues can greatly improve their morale and motivation. It's important to recognize and appreciate the efforts of your team members, and to create a positive and supportive work environment. By proactively making others' lives better, you not only contribute to the success of the team, but also have a positive impact on their personal and professional growth.The speaker discusses the importance of mentorship and acknowledgement in the workplace, as well as the concept of progressing through levels in one's career. They emphasize the need to appreciate how far one has come by looking back on old projects and keeping a log of new skills learned. The speaker also notes that challenges in the workplace are necessary for growth and development.Reflect on your career journey and the challenges you overcame to gain new skills and experiences. Consider the importance of teamwork, feedback, and understanding different perspectives. Remember that there are different ways to play the game of your career, and each way can be valuable and enjoyable. At the end of your career journey, reflect on what your career gave to you as a person and what you gave to your career. This reflection can continue throughout your career and can be applied to your personal life outside of work. Use your skills and experiences with confidence in your relationships and problem-solving.The speaker emphasizes the importance of reflecting on one's personal and professional journey and using the skills and strengths gained from it in all aspects of life. They suggest using statistics with confidence in problem-solving, communication, and relationships. Appreciating differences in people and recognizing one's own strengths are also highlighted as important takeaways from a career journey. The speaker encourages the audience to reflect on their own career journeys and how they can apply their experiences to make a positive impact on the world."
01A780iuLTI,00:00:00,Serverless Cloud Native Progressive Web Apps in Prod: Lesson from Trenches,"This talks outlines our experience in building PWA in the Cloud and how we manage to utilise most if not all of the browser API that makes a web app progressive, while doing it without hosting any server at all.\n\nTechnologies that I will touch on:\n- Notification Api in collaboration with Push Api\n- Sync Api \n- Offline Storage (local storage, IndexedDB)\n- Event Sourcing with DynamoDB stream\n- Data Lake with Kinesis Firehose and S3\n- Analytics with AWS Athena\n\nFull Title: DDDPerth2018 - William Sia - Serverless Cloud Native Progressive Web Apps in Prod: Lesson from the Trenches",Will Sia,"The speaker, Will Sia, discusses their experience in building Progressive Web Apps (PWA) in the cloud without hosting any servers. They touch on various technologies such as Notification API, Push API, Sync API, Offline Storage, Event Sourcing with DynamoDB stream, Data Lake with Kinesis Firehose and S3, and Analytics with AWS Athena. The main user of their PWA is a technician who may not have access to the internet for months, so they need to ensure that the app is reliable, fast, and engaging. They advise against writing the service worker yourself and recommend using a plugin from Google or Oakland Fagin.This transcript discusses optimizing web applications for offline use and improving user experience. The speaker recommends using plugins to sync with index DB and store cache content persistently, as well as using APIs to check if the application is ready to go offline. They also suggest using a single event to store emails in index DB with a pending state and subscribing to the event in the service worker to send emails when the network is available. The speaker also mentions the benefits of using Accelerated Mobile Pages (AMP) to ensure quick rendering on mobile devices.The video discusses various techniques for optimizing web performance. One approach is to use MP (micro-frontend) as an entry point, which loads an iframe pointing to the app and installs the necessary assets. Another technique is to use shadow DOM, which allows for easier rendering of HTML content. The video also suggests using serverless technology, such as Lambda@Edge, to pre-render dynamic content and avoid the need for a server. Pre-rendering can be integrated into the deployment pipeline using tools like Puppeteer. The video also touches on the use of web workers to improve performance when working with large objects.In this video, the speaker discusses various advancements in web technology. They mention the use of shared array buffers in web workers, which allows for the sharing of memory space between the main thread and the worker thread. This can be useful for creating a new reconciliation engine in React, where the heavy computation is done in web assembly, but the rendering is still done in JavaScript. 

The speaker also talks about the Web Authentication API, which allows for authentication using a USB key or fingerprint. The registration and login process involves a challenge and response system, where the browser forwards the challenge and origin to the authenticator, and the response is signed with a private key and sent back to the server for verification. 

The speaker briefly mentions the backend, but does not go into detail.The video discusses building a secure website and backend. The website uses a challenge-response authentication system with a public key to ensure security. The backend should use different databases and serverless functions to improve scalability and cost-effectiveness. Cloud event specifications can help with event streaming systems. Continuous bid is a beta tool that allows developers to specify their application and deployment in one language. Self-illumi is a tool that uses cloud resources to build a type-safe infrastructure as code. The video also briefly mentions building a native progressive web app with dynamic content stored in DynamoDB.The speaker discusses building a native progressive web app server using MV architecture. The landing page installs packages in the backend, allowing for quick display of content. Users can log in using a fingerprint or USB key. Dynamic content is stored in DynamoDB, while static content is stored in history. Changes made by users generate a series of events that are forwarded to Google Cloud function and stored in BigQuery for analysis by data scientists."
P-ml4cv7qvE,00:00:00,"Distributed databases - Why, What, and How?","There are an ever-increasing amount of data-stores to choose from, each promising something special. You've heard that you should \",Todd Becker,"Todd Becker, a principal software engineer at Family Zone, spoke about distributed databases at DG Perth 2022. He explained that distributed databases use more than one network computer or a cluster of computers to handle more work and data than a single computer can do. The rise of the internet and proliferation of devices has driven the development of more advanced software to handle the immense amount of data collected and managed over the past couple of decades. While traditional relational databases work well for most software, distributed databases are necessary for handling large amounts of data. Becker discussed the history of relational databases and their crucial feature of acid transactions, which provide guarantees on the correctness and reliability of data. However, as data production increased, vendors needed more powerful systems to cope with demand. Google and Amazon led the way in developing new systems that could share the load across many computers, resulting in the generation of new databases that were very scalable and did not use SQL or the relational model.In 2006 and 2007, Google and Amazon published papers on their scalable systems, which inspired the development of purpose-built data stores that did not use SQL or the relational model. These systems included key-value databases, graph databases, wide column databases, and document databases, and were designed to suit specific needs. However, they had limitations, such as not supporting asset transactions and not replacing relational databases. The CAP theorem, which states that any distributed data store can only provide two of the following three guarantees: consistency, availability, and partition tolerance, heavily influenced the design of many distributed data stores. Partitioning, which involves splitting up a data set into smaller subsets, is crucial for improving performance and managing data. The choice of partition key can greatly impact workload performance, and partitioning using a time field is a good choice for data sets that continually grow over time. Hash partitioning, which uses a hash function to determine the partition, is another common type of partitioning.The video discusses different techniques for distributing data in a distributed database. One common technique is partitioning, where data is divided into partitions based on a key. Hash partitioning is a type of partitioning that uses a hash function to determine which partition to use. Another technique is sharding, which involves partitioning data across multiple computers or database instances. Consistent hashing is a common sharding technique that assigns each node an equal range of the hash base, allowing for easy scaling up or down without moving large amounts of data. In a distributed data system, there are often multiple copies of the data on different nodes to ensure redundancy and availability. To ensure that nodes know what is going on elsewhere in the cluster, a gossip protocol can be used to share information between nodes.The video discusses the use of gossip protocols in distributed systems to reduce network traffic and keep overhead on the network and each node to a constant level. The video also explains the problem of distributed consensus and the use of the Raft algorithm to achieve global agreement on changes. The concept of eventual consistency is also discussed, where different nodes asynchronously replicate data to each other and converge on one value for any piece of data. The trade-off between consistency, availability, and latency is also highlighted, with databases existing somewhere on the spectrum. The video concludes by mentioning Amazon's Dynamo, designed to serve its shopping cart, as an example of a distributed database system.The CAP theorem, which states that a distributed system can only guarantee two out of three properties - consistency, availability, and partition tolerance - is not nuanced enough for many experts in the field. The pi theorem, introduced by Rick Houlihan, offers a more flexible approach, allowing for the choice of two out of three desirable properties - pattern flexibility, infinite scale, and efficiency. While eventually consistent systems can be a great fit for collecting mostly immutable data, some businesses have found that they can be more trouble than they're worth. As a result, a new generation of databases, dubbed new SQL, has emerged, offering higher scalability and availability without giving up the advantages of a relational database. Uber, for example, handles billions of transactions per day on their core order tracking system, originally built on the Cassandra database, which embraces eventual consistency to achieve the scale they need.The talk discusses the use of distributed databases such as CockroachDB, TiDB, and Google Cloud Spanner in handling large data sets and achieving high scalability and availability. The speaker cites Uber's move from Cassandra to a consistent store due to occasional consistency problems and complexity. He also emphasizes the importance of not giving up strong consistency without a clear reason and doing research before choosing a database solution. The talk concludes by highlighting the need to consider purpose-built data stores and not just choose based on marketing hype."
jPVDOcqQAag,00:00:00,Animation - a Whole Lottie Tools out There,Little bits of animation make websites and mobile UI \,Andy Dent,"Andy Dent discusses Lottie, an animation format that is smaller than other ways of putting animated items on web pages. Lottie is an open source project that started as a web exporter for Adobe After Effects and has become an ecosystem with alternatives to Adobe's product. Lottie files is the dominant site for downloads and has grown into a commercial marketplace. Text is important in Lottie because it allows for efficient version control and easy tweaking of colors. Lottie is useful for amusing users, distracting them during loading times, informing them about onboarding processes, and providing hints for navigation.Lottie Files is a commercial marketplace that allows you to search for different icons and animations in PNG or SVG format. It also includes a simple editor that allows you to modify the animations and export them as JSON files. Synfig is a cross-platform open source product that is more suitable for 3D movies, but can also be used for 2D animations. It is a visual editor that allows you to animate faces, bodies, and tween between positions. Key Shape is a commercial product that is available on the Mac App Store and is more suitable for creating user interface animations. Flow is a higher-end product that provides code generation and export features. Adobe After Effects is also an option, but it comes at a higher cost.Synfig Studio and Keyshape are two animation software options for 2D animation. Synfig Studio is a cross-platform open source product that allows for animating faces and body movements through tweening between positions. It has a timeline for recording animation frames and can export animations to Lottie using a plugin. Keyshape is a commercial product that is recommended for vector animation and has a plugin-based import/export system. It also has a timeline for animation frames and can import full-blown animations in JSON format.The video discusses using animation software, specifically Keyshape and Flow, to create animations. The presenter demonstrates how to change the color of an object, adjust timing curves to create more dynamic movement, and export the animation as a Lottie file. The Lottie file can then be previewed on the Lottie Files website. The presenter also mentions that Keyshape and Flow have extensive documentation and video tutorials available.Flow is a tool focused on user interface animation, with native code wrappers for Lottie that can export a workable iOS or Android project. It is expensive due to its ability to create compilable native animations, which significantly reduces the size of assets. Flow originally started importing from Sketch, where it maps the starting and ending artboards, which must be structurally identical. The tool has a timeline for editing attributes, such as opacity and position, and allows for the manipulation of timing curves. Overall, Flow is a powerful tool for creating user interface animations.The speaker demonstrates how to use visual editing tools to create animations in Lottie format. They manipulate curves and timing to create a sense of panic in the animation. They also show how to export the animation to code in Lottie web format. The speaker discusses three tools for visual editing, including Keyshape, which allows for importing and editing Lottie documents. They conclude by asking if there are any questions about Lottie or animation in general."
mgyOpZkVtQg,00:00:00,CQRS and Event Sourcing For The Win!,,Ashley Aitken,"Ashley Aitken presents on the architecture of CQRS and Event Sourcing. She explains that this architecture is important for enterprise systems and can be complex, but it is worth it. A traditional architecture has a presentation layer, business layer, and relational database, but this approach has problems with scaling and balancing. CQRS and Event Sourcing can help solve these issues by separating the read and write sides of the application and using different data stores for different models. Ashley also discusses the potential for using non-relational databases for persistence. She works in professional training and software development, focusing on applying Lean Startup techniques to enterprise innovation.discussed in terms of a two-stack approach to enterprise architecture. The traditional n-tier architecture is split into two parts: the command and query side. The command side is responsible for changing the persistence of the system, while the query side is responsible for reading from the database. This approach allows for two separate models to be used, one for the command side and one for the query side. The commands in a typical banking application include deposit money, withdraw money, change owner, and interest commands. The queries include getting balance, getting owner information, and getting transaction lists. This approach is based on the object-oriented design principle of separating properties and operations, and it allows for better scalability and flexibility in enterprise applications.The video discusses the Command Query Responsibility Segregation (CQRS) approach to banking models. The approach involves separating the read and write sides of the application, allowing for independent scaling of each side. The video also suggests using task-based commands instead of CRUD operations to better capture the user's intent. The video highlights the bottleneck in persistence with relational databases and suggests using event sourcing as an alternative method of persisting information. The example of a concert ticket purchasing application is used to explain event sourcing.Event sourcing is a solution to the problem of losing valuable data in traditional data models. In traditional models, data is represented as a model in persistence and its current state, resulting in the loss of information when records are deleted or prices are changed. Event sourcing tracks changes to the state of an application by storing events that happen, rather than just the current state. Events are immutable and stored in a persistent storage, allowing for easy rebuilding of the domain state. Events can also be used for managing processes and integration between subsystems in an application.Event sourcing is a useful technique for managing processes inside applications, signaling process states, and integrating subsystems. It allows for ordering and analytics of events, which can be used to reconstruct domain states. In the example of concert tickets, events such as ""concert created"" and ""ticket ordered"" are created instead of directly saving the status. Commands are used to initiate actions and are written in an active verb form, while events are written in the past tense and cannot be changed. Commands can be rejected, while events cannot fail. In the application, commands are first checked for syntax and then validated with business logic before being processed.CQRS (Command Query Responsibility Segregation) is an architectural pattern that separates the read and write operations of an application. The first step is to validate the command with business logic to determine if it is appropriate to process. The next step is to write the event to the event store, which is a persistence mechanism. The event store can be a relational database type store. The final step is to update the domain state based on the event. The query side of the application reads the events from the event store to produce the current state. CQRS is an architectural pattern that can be used to scale an application. It is not the architecture for the entire application, but rather a part of it.This video discusses the architecture of a system that separates commands and queries. The right side of the system produces commands, which are validated and then stored in an event store. The left side of the system is responsible for updating the website based on the events in the event store. The query side is responsible for reading information from the database and returning it to the user. The benefit of this architecture is that it allows for multiple view stores, which can be added at a later stage to improve query performance. The key takeaway is the importance of separating commands and queries to improve system efficiency.The video discusses the CQRS (Command Query Responsibility Segregation) architecture, which separates the command and query sides of an application. The command side handles updates to the application state, while the query side retrieves data from the application state. The query side can have different data sources, such as SQL, graph, or document databases, and can be tailored to the specific needs of the application. The architecture also includes a caching system to improve query response times. 

The video explains that the architecture allows for eventual consistency, meaning that the query side may not immediately reflect updates made on the command side. This requires a change in thinking about transactions and user interfaces. The architecture also allows for complex features, such as analytics and email notifications, to be added to the application.The video discusses the concept of eventual consistency in CQRS (Command Query Responsibility Segregation) and how it requires a change in thinking about transactions and user interfaces. The traditional web flow of submitting a form and receiving data in response is not suitable for CQRS, where submitting a command request only returns the command results and a separate query is needed to retrieve updated data. This can lead to issues with displaying outdated data on the user interface, which can be addressed through various options such as waiting for updates, pulling from the read side, signaling the read side, or faking the interface until the data is corrected. The video also provides examples of how eventual consistency can affect account registration and ordering at a cafe, and how CQRS handles these issues by making adjustments afterwards rather than relying on a single transaction.CQRS is a scalable and cost-effective approach to system design that focuses on handling events rather than transactions. It allows for rapid adaptation to changing business requirements and can be used for process management and subsystem integration. However, it can be difficult to understand and adds complexity to applications. The approach involves using command handlers and process managers, which listen for events and produce commands. The storage of events can be handled using tools such as Greg Young's Event Store.The speaker discusses the complexity of credit systems and how event sourcing can add extra complexity to applications. They mention the benefits of using event stores, such as the ability to store events and streams of events, and the flexibility it provides in terms of data storage and modeling. The speaker also discusses alternatives to using event sourcing, such as using a shared data model or storing data in a relational or graph database. They emphasize the importance of storing events regardless of the approach taken.The video discusses the benefits of using an event-driven architecture with event sourcing for persistence. This approach separates commands and queries and stores events instead of domain state directly. It allows for flexibility in changing the architecture as the system grows and can be used for integration and analytics. The video also addresses eventual consistency and conflict management. Overall, the event store becomes the ultimate solution for persistence.The speaker discusses the importance of event stores in managing system failures and conflicts. They emphasize the need for validation, such as checking bank balances, before performing actions and saving events to the event store. The speaker also mentions the use of a command system and the importance of checking work before saving it."
L6S7vPAe5B0,00:00:00,The Dark Side of Agile: Burnout and You,"Have you ever experienced a time where overwhelming expectations have led to extreme stress that has  impacted your health and well-being? Burnout and work-related stress is becoming all too prevalent in our industry. This, coupled with an unfortunate stigma around the topic, is having a detrimental impact on our overall well-being. The complexities of people and technology are making it increasingly difficult to estimate and frame projects in a true agile sense, consequently contributing to the increase of burnout in our industry.\n \nThis presentation will focus purely on solutions that are specific to burnout. Key solutions being; managing work-life balance, coupled with the ability to identify early indicators for yourself and those around you.  If we equip ourselves with knowledge of burnout, can we remove the stigma around it so that people can call it out early and feel safe to do so?\n\nSiobhan has specialised in People and Culture based roles within the software community for over a decade. With a love of learning, she is currently finishing her Masters of Human Resources Management and hopes to share her knowledge and passion for creating best place to work cultures.",Siobhan Avenell,"Siobhan Avenell, a specialist in People and Culture based roles within the software community, gave a presentation on burnout and work-related stress in the industry. She discussed the stigma around the topic and how it is having a detrimental impact on overall well-being. Siobhan focused on solutions specific to burnout, such as managing work-life balance and identifying early indicators for oneself and others. She provided information on what burnout is, its causes, why it is common in the industry, signs and symptoms, and prevention tips. Siobhan also provided a resource slide and URL for further reading and professional help.The speaker discusses the issue of burnout and shares her personal experience with it. She notes that it is a state of complete emotional and physical exhaustion that has detrimental impacts on health. The speaker highlights that burnout is not limited to work-related stress and can affect students and primary caregivers as well. She emphasizes that personality type is a leading cause of burnout and shares her own experience of putting pressure on herself, leading to disengagement, frequent colds, and ultimately hospitalization due to stress-induced burnout.The speaker discusses their personal experience with burnout and how they initially ignored the symptoms due to their assumption that work was not the cause. They then delve into the causes of burnout, which they break down into three categories: work-related, personality, and lifestyle. They focus on work-related causes, such as unrealistic job expectations and high-pressure environments, and suggest solutions such as pushing back on unrealistic demands and working at a sustainable pace. The speaker also discusses the role of agile methodology in burnout and speaks to an expert in the field to explore whether agile is a cause or a solution to burnout.The speaker discusses the issue of clients wanting fixed prices and unrealistic expectations and timeframes, and how it affects the sustainability of the industry. They suggest pushing back and questioning whether the project aligns with agile principles, as well as educating clients on the benefits of agile and the costs of burnout. The speaker also addresses the issue of perfectionism and the importance of prioritizing sleep to prevent burnout. They provide information on the signs and symptoms of burnout and suggest seeking help from an Employee Assistance Program, GP, or friend if necessary.Burnout can be recognized through early indicators such as lack of motivation, decreased productivity, and pessimism. It is important to seek help from an EAP, GP, or friend if these symptoms arise. Burnout can also have physical symptoms such as altered brain anatomy due to stress hormones. Prevention of burnout involves understanding the signs and causes as individuals, but also requires organizations to take psychological safety into account. Psychological safety allows individuals to show their true selves without fear of consequence, which can prevent burnout and the fight or flight response.this talk, the speaker discusses the importance of psychological safety in the workplace and how it can prevent burnout. Psychological safety allows employees to be themselves without fear of consequences and encourages them to speak up if they are feeling burnt out. Without it, employees may experience a fight or flight response, which can have negative effects on their physical and mental health. The speaker suggests actively listening, showing empathy, using encouraging language, and being real when relating to others. They also encourage leaders to talk about burnout and work-life balance and to support their employees in achieving a sustainable pace. The speaker emphasizes the importance of recognizing the signs and symptoms of burnout and questioning whether actions will lead to a sustainable pace. Overall, the talk highlights the need for psychological safety and open communication in the workplace to prevent burnout and promote well-being.The speaker discusses the importance of recognizing and preventing burnout in oneself and others. They suggest asking the question, ""will this lead to a sustainable pace?"" and sharing experiences and stories to remove the stigma around the topic. The speaker also provides resources and highlights the prevalence of burnout in the industry. They encourage looking out for each other and asking for help when needed."
dO3_C4uq_H8,00:00:00,How to design tutorials your users won&#39;t ignore,"Do you ever find tutorials annoying and think you're smart enough to figure things out on your own?\nThen after skipping the tutorial get frustrated with the website/app/game because you can't figure something out?\nHear from a former teacher about how people learn and how to use this knowledge to make effective tutorials. \nThis presentation will cover topics like:\nRepeating information in different ways\nProviding information just in time\nAttention span and working memory\n\nThese tips and tricks from cognitive science can help you design tutorials your users won't ignore. \n\n--\nMegan is a PhD candidate at Murdoch University researching video games, motivation and resilience. She has a background in education and science communications. Megan is interested in how people learn and interact with technology. In her (very little spare time) she enjoys crafting and playing games.",Megan Pusey,"Megan Pusey, a PhD candidate at Murdoch University, presented on how to design tutorials that users won't ignore. She discussed how people learn and interact with technology, and how to use cognitive science to design effective tutorials. Topics covered included repeating information in different ways, providing information just in time, attention span, and working memory. Megan explained the limitations of working memory and how grouping information together in categories with meaning or purpose can make it easier to remember. While users may still ignore tutorials, Megan provided tips on how to design products so that users can still navigate and successfully use them.The key to remembering information is to group it into categories and give it meaning or purpose. This is important for onboarding and tutorials in design, as it helps users remember information more effectively. It's also important to avoid overtaxing the memory and provide information just in time when it's needed. Reminders for repeat users are crucial, as people forget things easily. Attention spans are short, with research suggesting they are only about eight seconds. In design, it's important to grab and maintain users' attention, as demonstrated by the ""monkey business illusion"" video.The video discusses the phenomenon of inattentional blindness, where people can miss unexpected things even if they are right in front of them. This is important for designers to consider, as users may miss vital information on a screen. One way to address this is to provide information on demand, such as using question mark symbols next to fields in online forms. Another important aspect is providing feedback on user actions, both positive and negative. The video provides examples of how these strategies can be implemented in online forms and product onboarding experiences.The speaker in the video discusses three issues related to user experience: lack of feedback, bad UI, and misinterpretation. They share a personal experience of trying to enroll in an after-school club that had already closed down, but the information was not updated on the website. The speaker emphasizes the importance of providing feedback to users to avoid frustration. They also highlight the problem of misinterpretation, which can occur due to bad UI or unclear icons. The speaker suggests representing information in multiple ways, such as text, visual, and audio, to reduce misinterpretation. They stress the importance of knowing the audience and their expectations to design a better user experience.The speaker discusses tips for designing user interfaces that are easy to understand and use. They emphasize the importance of knowing your audience and conducting user testing to avoid misinterpretation. They also suggest providing information just in time, making information available on demand, and giving feedback on user actions. The speaker recommends the book ""Don't Make Me Think"" by Steve Krug, ""The Design of Everyday Things"" by Don Norman, and ""Thinking, Fast and Slow"" by Daniel Kahneman for further reading on the topic.This transcript is too short and lacks context to be condensed for experts. Please provide a longer transcript or specify the topic."
6tB2QAoVZPg,00:00:00,Practical Performance,"A rapid 10x growth in our customer base was wonderful for our company but caused stress on our systems and engineers. Mongo is on fire! Redis is on fire! The network is saturated! These are but a few of the scalability problems we encountered.\n\nTime again, how could we have avoided the pain? Can we embed performance-centric practices in our daily routines?\n\nPerformance is often a misinterpreted and unloved responsibility of the modern software engineer. Terms like “premature optimisation” can discourage us to consider the performance implications of the software we write. Additionally, many higher-level abstractions and tools we use have a less visible performance cost. I won’t mention time pressure nor agile!\n\nIn this session, we review performance principles and practices, and how they relate to common (and very real and experienced!) performance issues. I wrap it up by suggesting some simple means to embed performance practices in the daily routine. \n\nThe hope is to be blissfully unaware that a performance issue has been avoided through good practices!\n\n--\nI'm an experienced architect, manager, and developer with a passion for developing quality software solutions and teams. I'm particularly interested in high throughput, cost-effective and scalable distributed systems - sometimes it's a challenge to find the intersection!",Sam Price,"Sam Price, a software architect at Family Zone Cyber Safety, discusses the importance of embedding performance-centric practices in daily routines to avoid scalability issues. He acknowledges that performance is often misunderstood and undervalued by software engineers, and that higher-level abstractions and tools can have hidden performance costs. Price shares his experiences with scaling systems and suggests simple means to incorporate performance practices into daily routines. He emphasizes the importance of providing customers with compelling experiences, reducing operating costs, and encouraging software engineers to prioritize practical performance practices.The speaker discusses the importance of performance practices in software engineering and how it can lead to cost savings. They emphasize the need for good software design, including the use of modern technologies and processors, understanding customer needs, and knowledge of programming languages and third-party technologies. The speaker suggests narrowing the scope of understanding and factoring in time for planning and learning. They also introduce two principles: craftsmanship and less is more. The former emphasizes well-designed software systems, while the latter suggests that a system that does less can be more performant than one that does more. The speaker provides an example of a team that experienced a lapse in craftsmanship due to not reading the manual of an HTTP library.The speaker discusses two principles for high-performance systems: simplicity and ""less is more."" They explain that a system that does less is often more efficient than a system that does more, and that complexity can be a hindrance to performance. The speaker provides examples of this principle, such as the use of simple code and the replacement of a complex monolith with a simpler microservice. They also provide a table that illustrates the time it takes for a computer to perform various tasks, such as reading from memory or sending data over a network. The speaker then gives an example of how they leveraged the ""less is more"" principle to improve the performance of a native library that filtered network traffic. By replacing a TreeMap with a HashMap, they were able to reduce the time it took to get a decision from the cache. The speaker explains that this is because TreeMap is based on a red-black tree, which runs in log time, while HashMap is based on a hash table, which runs in constant time.The video discusses the differences between tree maps and hash maps, with the former being based on a red-black tree and the latter on a hash table. The speaker explains that red-black trees run in log-in time, while hash tables run in constant time. The video also touches on common performance issues in software engineering, such as missing or misconfigured indexes in databases, misuse of relational databases as document databases, and the use of traditional object-relational mappings (ORMs) that generate opaque SQL statements. The speaker also highlights the importance of network optimization and avoiding unnecessary network calls.The video discusses the importance of optimizing network performance in web applications. The speaker emphasizes the need to minimize network calls and reduce large payloads, which can slow down performance, especially when traversing the public internet. The speaker shares a war story about a recent experience with rapid growth in a classroom product, which highlighted the importance of optimizing network performance. The product relied on an ingestion API to receive screenshot data from laptops, which was stored in Redis and published as an event. However, when the product experienced rapid growth, the event service and Redis both failed, causing significant disruptions to remote learning sessions. The speaker emphasizes the need to anticipate and address potential performance bottlenecks in web applications.The speaker discusses a problem they faced with their event service, which caused issues with remote learning sessions. They replaced the service, but then Redis caught on fire, revealing another bottleneck. They implemented a dynamic throttle to resolve the customer issue and investigated the cause of the problem. They found that their data service was slow and needed replacing, but Redis was at 100% CPU usage due to the use of the ""keys"" command. They discovered that a single user could have multiple windows, resulting in multiple cache keys. They dug deeper into the data service and found that they were using the ""keys"" command to retrieve all cache keys for a user, which was inefficient. They resolved the issue by changing their cache key to include the window ID and modifying their data service to retrieve screenshots for each window separately.to define the level of performance that a service should provide to its users. This helps to set expectations and measure the success of the service. Additionally, documenting the performance characteristics of external dependencies, such as Redis, can help to understand how they will impact the overall performance of the system.

Another important principle is load testing. Proper load testing can help to identify performance bottlenecks and ensure that the system can handle expected levels of traffic. It is important to test not only under normal conditions, but also under stress and failure scenarios.

Observability is also crucial for identifying and resolving performance issues. This includes monitoring metrics such as CPU usage, memory usage, and response times, as well as logging and tracing to understand the flow of requests through the system.

Finally, simplicity is key. Keeping systems and services simple can help to reduce complexity and improve performance. This includes minimizing dependencies, reducing the number of moving parts, and avoiding unnecessary complexity in code and architecture.focus on improving the performance of our systems. This can be achieved by documenting service level objectives (SLOs) which are contracts between the software team and the customer. SLOs should be defined for all features and should be widely known and documented. Database index usage should also be documented to aid in long-term maintenance and education for newer developers. Additionally, software engineers should document any performance implications of their code and log errors to prevent customer issues. Observability is also important, as it allows software engineers to monitor logs, metrics, and traces to identify and improve system performance.Observability is crucial for software engineers to have a reasonable idea of what's going on with their software and systems. By frequently looking at logs, metrics, and traces, engineers can become familiar with usage patterns and identify any anomalies proactively. Good observability can also improve mean time to resolve during outages and convert unknowns to knowns in complex systems. However, the tools and methods for observability depend on the thing being observed, its criticality, and budget. The observability triangle includes application performance monitoring, measuring boundaries, and rudimentary metrics and monitoring. APMs provide insight into services and where time is being spent, while heap and stack dumps are useful for measuring boundaries. Finally, rudimentary metrics and monitoring over critical paths and endpoints are the simplest and cheapest form of observability.In this video, the speaker shares two examples of how monitoring tools can help identify and resolve performance issues in applications. The first example is from their previous job at an e-commerce company where their service was responsible for showing prices on websites and mobile apps. They noticed a slowdown and increased requests per second, and New Relic's APM tool helped them identify a bottleneck in their code related to the Java 6 currency class. They were able to resolve the issue in under an hour and get the fix out to production quickly. 

The second example is from their current job at Family Zone, where they introduced a new database technology called CockroachDB. They ran some load tests and query plans before going into production and discovered a performance issue related to a foreign key not having an index. They were able to add the index and resolve the issue before it became a production problem. 

The speaker emphasizes the importance of considering growth and scale when writing code, logging SQL, and running query plans. They also highlight the value of spending time with new technologies, reading manuals, and doing due diligence to avoid potential production issues.The speaker shared a story about a team who encountered a performance issue with a query plan. They were able to resolve it by adding an index and reducing the estimated row count to one. The speaker emphasized the importance of doing due diligence and reading manuals when working with new technology. This issue could have become a production problem if not addressed, as the system was going to be used by 3 million students. The speaker concluded by summarizing the principles and practices that can help software engineers derive good practices."
MUuJS8Ff3z0,00:00:00,Standing on the Shoulders of Giants - the Next Great Generation in Tech needs you!,"Every year, hundreds of early-career hires join our Tech industry. They come from all around Australia, bringing their aspirations and anxieties, their talent and potential, hopeful and excited ​for the journey ahead.\n \nIn this defining moment of growth and transformation, they need those who came before to help them see and find their place to be. Pushing them to explore new terrain, develop technical skills, build community and embrace being innovative leaders in their company and beyond. \n\nThis session is for a First time Mentor, a Difference Maker or a Tech Leader. You will hear practical tips and real-life examples from the speaker. Come along and learn to be a great giant to raise up the Next Great Generation in Tech!\n\nNo experience necessary\n20 mins\nCore/Non Technical Skills\nJia is a thriving endurance athlete, Tech Optimiser, a STEM Advocate, a TEDx Speaker, a multi-awards winner of Women in Technology Western Australia 2019, NASA Space App Challenge, Energy Hack, Transport Hack WA, and UWA Innovation Challenge. Her superpower is learning new technology and smashing Microsoft certificates. In the world of fast changes, she strives to be 1 percent better technically every day by cultivating her abilities through persistence and effort.",Jia Keatnuxsuo,"Jia Keatnuxsuo is a speaker who discusses the importance of experienced professionals in the tech industry mentoring and guiding early-career hires. She emphasizes the need for these mentors to help new hires find their place in the industry, develop technical skills, build community, and become innovative leaders. Jia shares her own experiences as an early-career hire and the impact that her mentors had on her success. She provides practical tips and real-life examples for those interested in becoming mentors or difference makers in the tech industry. Jia is an associate Cloud solution architect at Microsoft and is also involved in community work, teaching digital skills to disadvantaged students.The speaker reflects on their journey as a technical worker, starting from graduation with basic skills and entering the corporate jungle. They faced challenges such as being asked to compromise their values and experiencing self-doubt. The pandemic further complicated their journey, but they eventually changed careers and encountered trolls in new terrain. Throughout their journey, they were supported by mentors and advocates, including a Kung Fu instructor, blue robot cats, and giants like Jason Yao. Jason challenged the speaker to list 100 jobs in technology and create a resume for the year 2050, which helped them clarify their goals. The speaker emphasizes the importance of mentors and advocates in providing practical training, wisdom, and confidence-building.The speaker shares three stories about their mentors in the tech industry. The first mentor challenged the speaker to think critically about their career goals and helped them break free from traditional thinking. The second mentor helped the speaker land their first job in tech and taught them the importance of evaluating their employer. The third mentor believed in the speaker's abilities and gave them the opportunity to run a workshop, which helped the speaker realize their potential to make an impact early in their career. The speaker encourages leaders to challenge their juniors' beliefs, leverage their networks to help juniors land opportunities, and believe in their juniors' abilities.is an expert in cloud solutions and he took me under his wing and taught me everything he knew about the technical side of things. He was patient with me and helped me understand complex concepts. He also gave me opportunities to work on projects and gain hands-on experience. Thanks to him, I was able to make the career transition successfully. What we can learn from Jonathan is that experts should be willing to mentor and guide junior colleagues who are eager to learn and grow in their careers.Jonathan Wade, the director of Microsoft Azure in Australia New Zealand, believed in diversity of thoughts and created the Associate Cloud Solution Architect program to give people with different backgrounds and experiences a chance to become solution architects. This program helped the speaker change her career from account management to solution architecture within a year. Michael and Morgan also played a key role in supporting the speaker's career growth and fighting for fair compensation based on impact rather than years of experience. Daniella set up the structure for the Associate Cloud Solution Architect program, making it easier for future associates to follow. Finally, Rivash helped the speaker learn technical concepts by spending hours teaching her.In this YouTube transcript, the speaker discusses the importance of providing proper support and mentorship for junior employees in the technology industry. She shares personal experiences of working with mentors who helped her develop technical skills and gain confidence in her abilities. The speaker emphasizes the need for managers and sponsors to create a supportive environment for junior employees to learn and grow, rather than setting them up for failure. She encourages the audience to look for potential in junior employees and invest in their growth.The speaker advises the audience to look for potential in others and to help juniors in their career growth. They suggest writing down the name of a junior person and offering to help them slay the dragon in the corporate jungle. The speaker emphasizes the importance of finding the right person to connect with and building relationships. They credit their success to the giants who helped them along the way and express readiness to take on new challenges. The transcript ends with a reminder about afternoon tea and the lock note."
LKoeAflDXaE,00:00:00,How to Manage Your Ducks,"Ever feel like everything is a struggle? Like you're constantly being overwhelmed by life? While we can endure it to pull through, this isn't really sustainable.\n\nWe've all been there, and I'm no different, but thankfully I've learnt a few lessons of things you can do and steps you can take to not only reduce the stress factors you have on you, or sometimes eliminate them altogether.\n\nJoin me to learn how to set (and stick to) your boundaries, identify if your worry is doing you good or harming you and most importantly, how to manage your ducks.\n\nLet me share my experiences with you and what I've learnt to help make more sustainable choices with your life.\n\nNo experience necessary\n20 mins\nCore/Non Technical Skills\nAmy wears many hats as a freelance developer, business owner and conference addict. She regularly shares her knowledge with her peers and the next generation of developers by mentoring, coaching, teaching and feeding into the tech community in many ways.\n\nAmy can be found volunteering her time with Fenders, ACS, SheCodes (formerly Perth Web Girls) and MusesJS (formerly NodeGirls). She also works as an evangelist for YOW! Conferences, is a Twilio Champion, Microsoft MVP and has been nominated for the WiTWA awards for the last 2 years.\n\nIn her spare time Amy shares her knowledge and experience on her blogs and speaking at conferences. She has previously given keynotes at multiple events as well as speaking at several international conferences in the US and Europe.",Amy Kapernick,"Amy Kapernick, a freelance developer, business owner, and conference addict, shares her experiences and lessons on how to manage stress factors and make more sustainable choices in life. In her talk entitled ""How to Manage Your Ducks,"" Amy discusses setting and sticking to boundaries, identifying if worry is doing good or harm, and most importantly, managing your ducks. She emphasizes the importance of mental health and acknowledges the traditional custodians of the land, the Wajac people of the Nunga nation. Amy also thanks the sponsors of the event and admits that she is still learning just as much as the rest of us.Amy, a front-end developer and conference addict, shares her experiences with burnout and the mistakes she's made in managing her mental health. Despite being busy and overloaded, she has learned to take breaks and seek help when needed. Burnout is a common issue in the industry, and Amy experienced it after taking on too much at once. She didn't recognize it at the time and didn't take a break, which led to a longer recovery period. Later, while working at a digital agency, she recognized the symptoms of burnout and sought help from a psychologist. She took a week off work and felt better than she had in months, despite being made redundant shortly after. Amy distinguishes between good worry and bad worry, and believes that worry can be useful if it leads to action. Overall, she emphasizes the importance of taking care of one's mental health and learning from past mistakes.The speaker discusses the concept of good worry and bad worry, and how to differentiate between the two. Good worry is useful and can be acted upon, while bad worry is not useful and can lead to anxiety. The speaker shares personal experiences of dealing with worry and how to combat it. They also discuss the importance of prioritizing self-care and taking breaks to recharge. The speaker recommends time boxing personal time as a way to prioritize self-care and avoid feeling unproductive.The speaker discusses the importance of time boxing personal time and setting boundaries in order to maintain productivity and self-care. They suggest finding activities that help recharge energy and scheduling them in, even if it's just a few minutes before bed. The speaker also emphasizes the importance of boundaries in the employer-employee relationship, comparing it to a personal relationship. They implemented boundaries with clients and found that most respected them, but some did not and were no longer clients. The speaker also mentions a helpful flowchart for decision-making.The speaker discusses their experience with setting boundaries and making choices in their work as they expanded their business. They share a flowchart created by a friend to help them make decisions about potential clients. The speaker also mentions a book they read about choosing what to care about and allocating their ""ducks"" (a metaphor for energy and attention) effectively. They encourage the audience to consider their own sustainability and whether they are prioritizing themselves and their boundaries. The speaker emphasizes the importance of managing one's ""ducks"" and allocating them effectively to avoid depletion."
BiP_ybxkY7A,00:00:00,The Cat In The Box,"In 1935, Erwin Schrodinger put a (hypothetical!) cat in a box. With a vile poison and some quantum magic, we were forced to the conclusion that the cat was both alive and dead at the same time. Over 80 years later, it is either one impressive cat or it is surely dead. I will resurrect Schrodinger's cat and discuss the implications of and on the famous thought experiment from the perspective of the recently developed fields of quantum information and computation, but not before showing you how we can share such seemingly complex concepts even to children!\n\nKeynote\nChris Ferrie is an Associate Professor at the University of Technology Sydney and the Centre for Quantum Software and Information. His research interests include quantum learning and control. He obtained his Ph.D. in Applied Mathematics from the Institute for Quantum Computing and University of Waterloo (Canada) in 2012. Chris’s passion for communicating science has led from the most esoteric topics of mathematical physics to more recently writing children’s books, such as Quantum Physics for Babies, and a whole collection of other titles that make science accessible even for the youngest children.",Chris Ferrie,"Chris Ferrie, an Associate Professor at the University of Technology Sydney and the Centre for Quantum Software and Information, discusses the famous thought experiment of Schrodinger's cat from the perspective of the recently developed fields of quantum information and computation. He also writes children's books on science topics, such as Quantum Physics for Babies. In his keynote speech, he reads a story called The Cat In The Box, which explores the concept of quantum theory and entanglement.The video discusses Schrodinger's famous thought experiment involving a cat in a box to illustrate the concept of quantum superposition and the measurement problem in quantum mechanics. The cat, which can talk, explains that when an atom is measured, it collapses into a definite state, and the probability of the outcome can be calculated using quantum probability. The cat also explains the concept of entanglement, where two particles become connected in a curious state. The video concludes with the cat agreeing to stay in the box to wait for the atom to change its state.The video discusses the famous Schrodinger's cat thought experiment, where a cat is placed in a box with a radioactive atom that may or may not decay and release poison, leading to the cat's death. Schrodinger proposed that until the box is opened, the cat is both alive and dead, according to the principles of quantum mechanics. The video explains that Schrodinger's equation is still used today to explain the behavior of the microscopic world, and that scientists are working on building a new kind of computing technology based on quantum mechanics. The video also emphasizes the importance of repetition and data in scientific research.discuss the contributions of Schrodinger, who invented the Schrodinger equation, which is still used in quantum physics to explain the behavior of the microscopic world. Schrodinger was frustrated with quantum theory and left to become an Irish botanist, but his book ""What is Life"" became influential to people like Francis Crick, who discovered DNA. In quantum physics, we think of atoms as having a ladder of energy levels, with electrons moving between ground and excited states. When an electron moves from an excited state to a ground state, energy is given off, and when it moves from a ground state to an excited state, energy is absorbed. The amount of energy involved is always the same, and this is where the word ""quantum"" comes from. We can think of atoms as encoding a bit of information in their energy levels, and in quantum physics, we use a PSI function to represent this information. In the middle of the ladder, we have a superposition, where the atom is in both the ground and excited state at the same time. This is the secret to quantum physics, and it allows us to build a new kind of computing technology.The speaker discusses the concept of superposition in quantum physics, where a particle can exist in both states of 0 and 1 simultaneously. This creates a new mathematical object, a vector, that can be combined in various ways to create richer information than conventional bits. However, when observed, the particle will only be seen in one state or the other, determined by the rules of probability in quantum mechanics. The speaker also mentions quantum entanglement, where correlated events can be put in superposition. The PSI function, which describes arbitrary states of quantum information, can be viewed as either a one-to-one correspondence with reality or just information. In the 80s, the idea of a quantum Turing machine was invented, which could efficiently simulate any physical process in the universe. The quantum Church-Turing thesis suggests that a universal quantum computer could efficiently simulate any physical process in the universe, but it is still unknown if there is a gap between classical and quantum computing.The speaker discusses the quantum Church-Turing thesis, which suggests that a universal quantum computer could efficiently simulate any physical process in the universe. There is a question of whether a quantum computer is more powerful than a classical computer, and the speaker mentions Peter Shor's algorithm, which could crack RSA encryption. Commercially available quantum computers currently have a small number of qubits, but there is a thriving open source community in quantum development. The speaker recommends starting with the non-profit Unitary Fund to get involved in the community. There is a question about how many qubits are needed to make RSA encryption completely useless, but the answer depends on the fragility of qubits.The quantum computing community is welcoming to those outside of the traditional field. The number of qubits needed to render RSA encryption useless is estimated to be in the millions, but this could be reduced as qubits become less error-prone. The US government has already moved to post-quantum cryptography to protect secrets that need to be kept for 30 years. Google claimed to have achieved quantum supremacy a few years ago, but this is difficult to prove and others have since improved upon existing ways to simulate quantum computers. As the number of qubits increases, the complexity grows exponentially, and eventually, it will be impossible to simulate with conventional technology. However, we are not yet at the point where quantum computers can solve real-world problems, and it will require thousands to millions of qubits. It is unclear whether quantum computers can handle memory leakages, as this is still an area of research.The speaker discusses the current state of quantum computing and its potential applications. They mention that while quantum computers may be better than classical computers at certain problems, such as simulating chemical interactions, they may not be better at everything. The speaker also notes that quantum computers will likely be cloud-based initially and may require extreme environments to operate. They suggest that the most promising application of quantum computing is simulating other quantum systems, which could revolutionize drug and material design. The speaker also addresses a question about the importance of studying physics for quantum computing and notes that while it may be helpful, it is not necessarily a prerequisite.Dr. Michael Biercuk, a quantum physicist, explains that a background in physics is not necessarily a prerequisite for studying quantum computing. At the University of Technology Sydney, students can major in quantum computation with a Bachelor of Computer Science, and Dr. Biercuk teaches an introduction to quantum computation course that does not require any prior knowledge of physics. He also discusses the unresolved questions in quantum mechanics and the need to reconcile it with Einstein's theory of general relativity. Dr. Biercuk also talks about his creative process in writing science books for children, including his book ""Quantum Computing for Babies.""The speaker discusses their approach to teaching physics, which involves simplifying complex concepts and using diagrams. They also mention how scientists build upon previous theories to make improvements. The topic of quantum ethics is briefly touched upon, with the speaker noting that there is not much focus on it currently. They also discuss potential career paths in the quantum industry, noting that there are opportunities for web designers and developers who may not have extensive knowledge of quantum computing.Chris discusses the requirements for working at a quantum startup company. He mentions that web designers are needed to create a website for the company, but developers with little knowledge of quantum computing can learn on the job. There are two pathways for degree programs: the honors higher education pathway for research scientists and the technology pathway for computer scientists. Those in the technology pathway will already be well-versed in the language and nuances of quantum computing. Chris also mentions that some people who work at quantum startups may not fully understand the technology they are working with. He recommends watching the TV series ""Devs"" to get a better understanding of what a quantum startup company is like."
4S2tT8tqc-w,00:00:00,"Web Accessibility: Responsibilities, Laws and Policies","Learn the approach followed in Australia related to the requirements for digital accessibility.  It certainly won't be boring or technical, but will provide you with the knowledge you need to address the requirements and persuade those within your organisation that this is not just a 'good thing to do', but the 'smart thing to do', the 'right thing to do' and is 'good for business' at the same time!\n\nIn this session, we will explore the Australian context of web accessibility including the new Australian Standard for procurement of ICT products (AS 301549), the W3C's new release of Web Accessibility Laws and Policies which show the Australian setting, the procedures followed by the Australian Human Rights Commission in administering the Disability Discrimination Act and other related materials.",Dr Vivienne Conway,"Dr. Vivienne Conway, the director of web key IT, discusses web accessibility in Australia in this session. She covers the new Australian Standard for procurement of ICT products, the W3C's new release of Web Accessibility Laws and Policies, and the procedures followed by the Australian Human Rights Commission in administering the Disability Discrimination Act. Dr. Conway challenges the audience to change their thinking about disabilities and to understand the importance of digital accessibility. She emphasizes that addressing accessibility is not just the right thing to do morally, but it is also the smart thing to do for business. The three main reasons people address accessibility are that it is the right thing to do, the smart thing to do, and it is the law. However, Dr. Conway suggests that skipping these reasons could be detrimental to a company's success.The disability sector is becoming more aware of their rights to equal access and litigation for violation of accessibility is increasing. In Australia, it is law and companies can be sued for non-compliance. The Web Content Accessibility Guidelines (WCAG) are federal government requirements that were adopted as an ISO standard. Compliance with WCAG 2.0 Level AA is necessary to avoid risk. The guidelines cover not only external-facing websites but also intranets, extranets, supplier connections, and documents that require an internet connection to access. It is important for developers to understand the requirements and how to implement them.Australia has international regulations that require every individual and organization with digital material based in Australia to be compliant with accessibility guidelines. This includes websites, extra nets, supplier connections, and documents that require an internet connection to download. The Australian Human Rights Commission administers the Disability Discrimination Act, which covers accessibility violations. If a customer has a problem accessing a website, they can make a complaint to the Australian Human Rights Commission, who will mediate the situation. If the issue is not resolved, the customer can sue the organization civilly with the assistance of the commission. It is important to note that no individual or organization is exempt from these regulations. The commission advises seeking expert advice to ensure compliance.The speaker emphasizes the importance of website accessibility and compliance with laws and regulations. They suggest getting a baseline audit of a website before making changes and testing with people with disabilities, including seniors. They also mention the trend of embedding accessibility requirements in an organization's disability access and inclusion plan, which is often addressed in government departments. The Australian government has recently adopted the European standard of 301 549 for accessibility, which organizations can embed in their tendering documents. The speaker warns that failure to address accessibility complaints can lead to legal and financial consequences.The Australian government has adopted the European standard for digital accessibility, known as AS 301 549, to ensure that digital materials are accessible to people with disabilities. This standard can be embedded in tendering documents by organizations, including individuals and companies, to require compliance with accessibility guidelines. Failure to comply with the standard can result in the loss of government tenders. The 2011 census showed that 20% of the population registered as having a disability that affected their education, mobility, or employment, but this is likely an underestimate due to social stigma and unreported low-level disabilities. It is important for developers to understand and comply with accessibility guidelines to ensure equal access for all.Accessibility is a crucial aspect of website design, with around 50% of the population requiring some form of accessibility consideration. It is important to design for everyone, not just those without disabilities. Accessible websites are preferred by 100% of users when compared to inaccessible ones. Best practice coding is essential for accessibility, as it ensures that labels are properly coded and visible to all users. Sir Tim Berners-Lee famously said that the power of the web is in its universality, and it should be accessible by everyone regardless of disability. Accessibility benefits not only people with disabilities, but also older users, people with mobile phones, and those living in areas with lower bandwidth. It is important to consider the needs of all users, including those who speak English as a second language. Overall, accessibility is crucial for creating a website that is usable and accessible to everyone.discussing their accessibility expertise and we were able to ask the right questions and select the best candidate. This shows that having accessibility knowledge and expertise can open up new business opportunities and partnerships. Additionally, incorporating accessibility principles into your design can improve user experience, increase user loyalty, and boost your search engine optimization. It also demonstrates corporate social responsibility and can attract positive publicity. Overall, digital accessibility should be considered as important as physical accessibility and can bring significant benefits to both users and website owners.The speaker was asked to be on a tender panel for a local government group to help select a successful tenderer based on accessibility. The final three were asked for examples of websites they had created that met accessibility standards, but none of them even met the minimum level. The speaker emphasizes the importance of accessibility for businesses, as it can lead to loss of website traffic, litigation, and loss of respect from customers. She gives an example of a bank website with a rotating keypad that was inaccessible for people with disabilities. The speaker stresses the importance of testing products with people with disabilities to ensure accessibility. She shows examples of inaccessible products, including a wheelchair wrap that is impractical.a good example of clear and consistent labeling of buttons and links. This is important for screen reader users who rely on clear and concise information to navigate a website. Additionally, the website has utilized alt text for images, which is crucial for users who are visually impaired and rely on screen readers to understand the content of a webpage. The website also has a high contrast mode option, which is helpful for users with low vision. Overall, the Disability Services Commission has done an excellent job of implementing accessibility features on their website, and serves as a great example for other websites to follow.The video discusses the importance of web accessibility for individuals with disabilities, particularly those who are blind or have low vision. The speaker emphasizes the need for sufficient color contrast, clear focus indicators, and proper identification of language for screen readers. The video also highlights the legal implications of inaccessible third-party content and the importance of providing warnings for events such as opening new windows or downloading documents. The speaker cites examples of companies being held liable for inaccessible websites and emphasizes the need for developers to prioritize accessibility in their designs.The speaker discusses the importance of accessibility in web development. They highlight common issues such as fixed text sizes, poor color contrast, and lack of alternative text for images. They emphasize the need for developers to create inclusive websites that cater to people with disabilities, and suggest that having evidence of accessibility capabilities can set developers apart in the industry. The speaker also warns against using automated tools and encourages a can-do attitude towards accessibility.The speaker advises against using automated tools and relying on third-party content when designing digital products. They emphasize the importance of designing for accessibility and using personas and expert checking to ensure compliance. The speaker encourages embracing the challenge of accessibility and removing obstacles to unlock the web."
