WEBVTT

00:00:05.028 --> 00:00:11.340
Caption: Wow full room popular talk last stop for

00:00:08.519 --> 00:00:13.229
Caption: lunch as well I&#39;m so delighted to have

00:00:11.340 --> 00:00:16.919
Caption: had a hear from particular software the

00:00:13.229 --> 00:00:18.868
Caption: creators of in service boss before I

00:00:16.919 --> 00:00:21.149
Caption: hand you over I&#39;ll let you just mention

00:00:18.868 --> 00:00:23.039
Caption: two things there&#39;s time allowing we will

00:00:21.149 --> 00:00:24.960
Caption: have Q&amp;A at the end of this session but

00:00:23.040 --> 00:00:26.460
Caption: as we&#39;re rolling in to lunch I&#39;m sure

00:00:24.959 --> 00:00:28.348
Caption: hopefully it&#39;s not asking too much of

00:00:26.459 --> 00:00:30.929
Caption: Hattie to field any questions after that

00:00:28.349 --> 00:00:34.260
Caption: as well and also for all of our speakers

00:00:30.930 --> 00:00:35.520
Caption: feedback is incredibly important I would

00:00:34.259 --> 00:00:37.529
Caption: encourage everyone for all the sessions

00:00:35.520 --> 00:00:40.020
Caption: that you go to today go to DDD Perth

00:00:37.529 --> 00:00:42.659
Caption: size and fever for the sessions that you

00:00:40.020 --> 00:00:44.310
Caption: attend so without further adieu for me

00:00:42.659 --> 00:01:01.799
Caption: here&#39;s how do you talk about micro

00:00:44.310 --> 00:01:05.549
Caption: services UI composition some challenges

00:01:01.799 --> 00:01:08.809
Caption: and some solutions just a quick show of

00:01:05.549 --> 00:01:15.119
Caption: hands who has done micro services before

00:01:08.809 --> 00:01:17.069
Caption: ok so before we get into the actual talk

00:01:15.119 --> 00:01:20.458
Caption: I&#39;d like to thank our sponsors make this

00:01:17.069 --> 00:01:22.609
Caption: happen so far the quality of the

00:01:20.458 --> 00:01:28.559
Caption: presentations had been through the roof

00:01:22.609 --> 00:01:34.799
Caption: really great now who has seen this page

00:01:28.559 --> 00:01:36.778
Caption: before people the interesting thing

00:01:34.799 --> 00:01:39.240
Caption: about this page is if you&#39;ve had online

00:01:36.778 --> 00:01:40.708
Caption: shopping experience before is that the

00:01:39.239 --> 00:01:43.769
Caption: question I asked that does this page

00:01:40.708 --> 00:01:46.019
Caption: ever exist you&#39;ve seen this before so it

00:01:43.769 --> 00:01:50.129
Caption: does exist but what I mean is that is

00:01:46.019 --> 00:01:52.138
Caption: there a notion of a HTML page sitting

00:01:50.129 --> 00:01:55.019
Caption: somewhere on a disk or maybe if you&#39;re a

00:01:52.138 --> 00:01:57.569
Caption: developer is there a concept of an

00:01:55.019 --> 00:01:59.428
Caption: aggregate truth like a product table of

00:01:57.569 --> 00:02:07.469
Caption: some sort behind the space serving the

00:01:59.429 --> 00:02:09.869
Caption: Sun if you have a little bit more in

00:02:07.469 --> 00:02:13.110
Caption: depth look into the construct of this

00:02:09.869 --> 00:02:15.339
Caption: page you can see there are areas that

00:02:13.110 --> 00:02:20.378
Caption: are closely related to each other and

00:02:15.339 --> 00:02:23.819
Caption: some things that are not as much we

00:02:20.378 --> 00:02:28.779
Caption: could identify that in a few key areas

00:02:23.819 --> 00:02:31.119
Caption: but the interesting thing is that in

00:02:28.779 --> 00:02:33.729
Caption: order for that page to get rendered we

00:02:31.119 --> 00:02:35.259
Caption: need bits of bits and pieces of

00:02:33.729 --> 00:02:38.738
Caption: information coming together and

00:02:35.259 --> 00:02:40.809
Caption: representing to represent it to us as a

00:02:38.738 --> 00:02:41.970
Caption: web page so we could have that shopping

00:02:40.809 --> 00:02:45.479
Caption: expertness

00:02:41.970 --> 00:02:52.328
Caption: know where that data is coming from

00:02:45.479 --> 00:02:55.199
Caption: today know having a look at that page

00:02:52.328 --> 00:02:58.238
Caption: you could identify a few key areas

00:02:55.199 --> 00:03:01.268
Caption: obviously first one is sales which

00:02:58.238 --> 00:03:04.509
Caption: manages price and currency conversions

00:03:01.268 --> 00:03:10.298
Caption: and things like that there is the

00:03:04.509 --> 00:03:12.279
Caption: inventory which does how many stock on

00:03:10.298 --> 00:03:15.039
Caption: the items and having that in the very

00:03:12.279 --> 00:03:18.250
Caption: house and there are availability the

00:03:15.039 --> 00:03:22.719
Caption: next one is shutting a shipping if you

00:03:18.250 --> 00:03:25.000
Caption: have gone but try to shop in Amazon in

00:03:22.720 --> 00:03:27.009
Caption: the US you might see there are rules

00:03:25.000 --> 00:03:28.600
Caption: that tells you that you&#39;re not allowed

00:03:27.009 --> 00:03:29.919
Caption: to ship this stuff to Australia and

00:03:28.600 --> 00:03:33.880
Caption: something like that those belong to a

00:03:29.919 --> 00:03:36.029
Caption: shipping service there is the marketing

00:03:33.880 --> 00:03:40.000
Caption: aspect there&#39;s the product name the

00:03:36.029 --> 00:03:43.559
Caption: images description and things like that

00:03:40.000 --> 00:03:47.708
Caption: and last but not least there&#39;s the

00:03:43.559 --> 00:03:53.768
Caption: ratings and reviews and customer and

00:03:47.708 --> 00:03:56.139
Caption: comments so if we say we&#39;re going to

00:03:53.768 --> 00:03:57.848
Caption: design this system as a micro service

00:03:56.139 --> 00:04:01.060
Caption: those are for your kind of your system

00:03:57.848 --> 00:04:04.328
Caption: system services or micro services for

00:04:01.059 --> 00:04:07.029
Caption: lack of a better term but in order to

00:04:04.328 --> 00:04:08.589
Caption: answer where the data should be how big

00:04:07.029 --> 00:04:11.649
Caption: should be flown in order to have that

00:04:08.589 --> 00:04:18.488
Caption: pager in there we need to understand

00:04:11.649 --> 00:04:21.149
Caption: what a micro service is so micro

00:04:18.489 --> 00:04:23.770
Caption: services have the few characteristics

00:04:21.149 --> 00:04:26.889
Caption: first and foremost it&#39;s an architectural

00:04:23.769 --> 00:04:28.319
Caption: style just like back in the day

00:04:26.890 --> 00:04:31.710
Caption: three-tier architecture

00:04:28.320 --> 00:04:34.050
Caption: thing marker services is an

00:04:31.709 --> 00:04:36.500
Caption: architectural style think of it as that

00:04:34.049 --> 00:04:39.809
Caption: but has a few characteristics as well

00:04:36.500 --> 00:04:42.230
Caption: first and foremost is that it needs to

00:04:39.809 --> 00:04:48.809
Caption: the services needs to be autonomous

00:04:42.230 --> 00:04:50.730
Caption: now autonomy means a few things toggling

00:04:48.809 --> 00:04:53.850
Caption: means that a service on its own should

00:04:50.730 --> 00:04:55.470
Caption: be able to operate so that means that

00:04:53.850 --> 00:05:00.300
Caption: there is no shared state or shared

00:04:55.470 --> 00:05:04.140
Caption: database between the services another

00:05:00.299 --> 00:05:06.479
Caption: mean each autonomy is that marker

00:05:04.140 --> 00:05:07.980
Caption: service is something logical it&#39;s not

00:05:06.480 --> 00:05:09.720
Caption: something physical it&#39;s not a physical

00:05:07.980 --> 00:05:14.070
Caption: component that you deploy among your

00:05:09.720 --> 00:05:16.649
Caption: server on the cloud it&#39;s a logical

00:05:14.070 --> 00:05:19.440
Caption: phenomenon where it has everything

00:05:16.649 --> 00:05:21.329
Caption: that&#39;s between the front end all the way

00:05:19.440 --> 00:05:24.269
Caption: to the Bandit back end it all belongs to

00:05:21.329 --> 00:05:26.879
Caption: that service now what what this means is

00:05:24.269 --> 00:05:31.799
Caption: that think of it as a vertical layer or

00:05:26.880 --> 00:05:34.260
Caption: vertical slice everything from that HTML

00:05:31.799 --> 00:05:37.500
Caption: page all the way to the database on the

00:05:34.260 --> 00:05:40.110
Caption: backend as well as all the server-side

00:05:37.500 --> 00:05:42.959
Caption: components they all fit in that vertical

00:05:40.109 --> 00:05:49.589
Caption: slice which makes that makes a service

00:05:42.959 --> 00:05:52.859
Caption: or a micro service another aspect to

00:05:49.589 --> 00:05:54.929
Caption: that is how the team is structured to

00:05:52.859 --> 00:05:57.779
Caption: create that marker services we get to

00:05:54.929 --> 00:05:59.970
Caption: that in a bit but it means that the

00:05:57.779 --> 00:06:03.000
Caption: teams need to be cross-functional team

00:05:59.970 --> 00:06:05.459
Caption: we get to that in the next slide the

00:06:03.000 --> 00:06:07.140
Caption: other characteristic is about micro

00:06:05.459 --> 00:06:11.100
Caption: services is that it needs to be around

00:06:07.140 --> 00:06:13.650
Caption: the business capability so something

00:06:11.100 --> 00:06:15.390
Caption: like our than authentication you might

00:06:13.649 --> 00:06:19.979
Caption: have code base is something called

00:06:15.390 --> 00:06:22.970
Caption: authentication service that&#39;s not really

00:06:19.980 --> 00:06:27.089
Caption: a business capability unless you&#39;re into

00:06:22.970 --> 00:06:29.820
Caption: authentication business so it is very

00:06:27.089 --> 00:06:31.559
Caption: important for the services to be around

00:06:29.820 --> 00:06:33.300
Caption: the business capabilities needs to be

00:06:31.559 --> 00:06:37.320
Caption: some sort of an alignment coming from

00:06:33.299 --> 00:06:39.229
Caption: the business and that shakes and forms

00:06:37.320 --> 00:06:44.149
Caption: and the boundaries of democracy

00:06:39.230 --> 00:06:47.900
Caption: and the last but not least is kind of

00:06:44.149 --> 00:06:51.889
Caption: unfortunate name of Marco services that

00:06:47.899 --> 00:06:55.880
Caption: implies certain size don&#39;t meet you now

00:06:51.890 --> 00:07:04.820
Caption: understand how big or small they need to

00:06:55.880 --> 00:07:06.830
Caption: be to be a micro service right so how

00:07:04.820 --> 00:07:08.480
Caption: large and small should they be is that

00:07:06.829 --> 00:07:13.939
Caption: the answer is that the size is

00:07:08.480 --> 00:07:17.059
Caption: irrelevant you think that before that

00:07:13.940 --> 00:07:19.390
Caption: comes from the concept of pizza teams

00:07:17.059 --> 00:07:27.700
Caption: you might have heard from agile before

00:07:19.390 --> 00:07:31.370
Caption: and that is coming from Martin Fowler

00:07:27.700 --> 00:07:33.290
Caption: saying that the size of a marker service

00:07:31.369 --> 00:07:35.209
Caption: is not so much important as the talk to

00:07:33.290 --> 00:07:38.029
Caption: the team that&#39;s writing that or owning

00:07:35.209 --> 00:07:40.220
Caption: that as we said the team needs to be

00:07:38.029 --> 00:07:42.290
Caption: cross functioning they need to be able

00:07:40.220 --> 00:07:44.899
Caption: to manage all the aspects of that

00:07:42.290 --> 00:07:47.839
Caption: vertical slice from the UI all the way

00:07:44.899 --> 00:07:49.729
Caption: to the back end so it means that the

00:07:47.839 --> 00:07:51.679
Caption: team needs to be certain size it&#39;s

00:07:49.730 --> 00:07:54.320
Caption: recommended somewhere between one or two

00:07:51.679 --> 00:08:00.529
Caption: Pizza size teams to manage a macro

00:07:54.320 --> 00:08:04.880
Caption: service now the longer answer is that

00:08:00.529 --> 00:08:06.769
Caption: the size isn&#39;t really that important if

00:08:04.880 --> 00:08:09.050
Caption: you have done services any kind of

00:08:06.769 --> 00:08:10.729
Caption: services using Java you know that it&#39;s

00:08:09.049 --> 00:08:12.589
Caption: kind of a verbose language you need to

00:08:10.730 --> 00:08:15.680
Caption: write quite a few lines of code to get

00:08:12.589 --> 00:08:18.470
Caption: the service up and running and something

00:08:15.679 --> 00:08:20.929
Caption: like go or Russ the you don&#39;t need that

00:08:18.470 --> 00:08:23.690
Caption: many lines to get a service up so the

00:08:20.929 --> 00:08:26.600
Caption: fact that you rely on the language it

00:08:23.690 --> 00:08:28.610
Caption: makes the whole number of lines of code

00:08:26.600 --> 00:08:31.179
Caption: to make that marker service kind of

00:08:28.609 --> 00:08:31.179
Caption: irrelevant

00:08:33.729 --> 00:08:41.148
Caption: now we&#39;re gonna have a look at how we

00:08:39.258 --> 00:08:43.940
Caption: gathered that data that we saw on the

00:08:41.148 --> 00:08:45.679
Caption: first page how we compose that page for

00:08:43.940 --> 00:08:48.729
Caption: the for the clients sitting like and

00:08:45.679 --> 00:08:52.219
Caption: behind the browser and it usually comes

00:08:48.729 --> 00:08:55.458
Caption: into two forms where usually it&#39;s like

00:08:52.219 --> 00:08:57.289
Caption: pulling the data so the browser or user

00:08:55.458 --> 00:08:59.929
Caption: of those and the fetches information

00:08:57.289 --> 00:09:01.099
Caption: from the services or it&#39;s usually the

00:08:59.929 --> 00:09:04.059
Caption: other way around for some of the

00:09:01.099 --> 00:09:07.099
Caption: services like notifications and push and

00:09:04.059 --> 00:09:09.768
Caption: things like that so it&#39;s usually one of

00:09:07.099 --> 00:09:13.388
Caption: one of one or the other gonna focus a

00:09:09.768 --> 00:09:17.018
Caption: little bit more on pulling side of it so

00:09:13.388 --> 00:09:20.599
Caption: we&#39;ll see a few patterns if you will I

00:09:17.018 --> 00:09:25.938
Caption: call this one a pool approach so usually

00:09:20.599 --> 00:09:27.859
Caption: have your browser application and if you

00:09:25.939 --> 00:09:30.290
Caption: have designed your system as we saw you

00:09:27.859 --> 00:09:33.409
Caption: end up with a bunch of marker services

00:09:30.289 --> 00:09:36.938
Caption: for lack of a better term and the way it

00:09:33.409 --> 00:09:39.528
Caption: works is that you open a web page

00:09:36.939 --> 00:09:43.220
Caption: request needs to go and catch all the

00:09:39.528 --> 00:09:46.059
Caption: information but because you have you

00:09:43.219 --> 00:09:50.119
Caption: know you&#39;re packing services divided

00:09:46.059 --> 00:09:51.768
Caption: there needs to be some sort of quite a

00:09:50.119 --> 00:09:53.359
Caption: few issues going all the way to the

00:09:51.768 --> 00:09:55.369
Caption: backend fetching all the information

00:09:53.359 --> 00:09:57.409
Caption: bringing them back up to the client and

00:09:55.369 --> 00:09:59.688
Caption: managing that whole request and response

00:09:57.409 --> 00:10:03.588
Caption: and rendering that information for a

00:09:59.689 --> 00:10:07.339
Caption: user on a web page now this has a few

00:10:03.588 --> 00:10:11.000
Caption: issues on the back end you have done

00:10:07.338 --> 00:10:13.159
Caption: your homework and you you know you&#39;ve

00:10:11.000 --> 00:10:15.828
Caption: done your system boundaries and service

00:10:13.159 --> 00:10:17.568
Caption: boundaries are kind of decouple so

00:10:15.828 --> 00:10:20.299
Caption: everything looks fine but on the client

00:10:17.568 --> 00:10:22.219
Caption: because of the fact that it&#39;s

00:10:20.299 --> 00:10:25.758
Caption: issuing multiple requests to the backend

00:10:22.219 --> 00:10:28.638
Caption: and it causes a few issues first and

00:10:25.758 --> 00:10:31.958
Caption: foremost is that most majority of the

00:10:28.638 --> 00:10:35.479
Caption: websites are running on HTTP 1.1 and

00:10:31.958 --> 00:10:38.599
Caption: that has a limitation of 48 concurrent

00:10:35.479 --> 00:10:40.250
Caption: requests and that 48 concurrent request

00:10:38.599 --> 00:10:42.289
Caption: is everything that&#39;s images in

00:10:40.250 --> 00:10:44.838
Caption: JavaScript and styles and everything so

00:10:42.289 --> 00:10:45.739
Caption: this by definition is going to slow down

00:10:44.838 --> 00:10:50.059
Caption: your

00:10:45.739 --> 00:10:52.940
Caption: experience or website http/2 might be a

00:10:50.059 --> 00:10:56.739
Caption: solution for that but majority of

00:10:52.940 --> 00:10:56.739
Caption: websites are not running on HTTP to

00:10:58.750 --> 00:11:04.969
Caption: another issue with this approach is that

00:11:02.409 --> 00:11:07.699
Caption: imagine if you are rendering a list or a

00:11:04.969 --> 00:11:09.559
Caption: table or grid learning information are

00:11:07.700 --> 00:11:12.739
Caption: coming from all those back-end services

00:11:09.559 --> 00:11:14.599
Caption: and because all the bits and pieces are

00:11:12.739 --> 00:11:16.429
Caption: in different services you end up in a

00:11:14.599 --> 00:11:18.979
Caption: situation where you have it and plus one

00:11:16.429 --> 00:11:21.039
Caption: issue because you have a list and

00:11:18.979 --> 00:11:28.639
Caption: everything is divided up at the backend

00:11:21.039 --> 00:11:31.159
Caption: so it has that that flaw as well now in

00:11:28.640 --> 00:11:34.660
Caption: order to work around that shortcomings

00:11:31.159 --> 00:11:39.169
Caption: some people come up with this approach

00:11:34.659 --> 00:11:41.179
Caption: say in order to get around that number

00:11:39.169 --> 00:11:43.969
Caption: of concurrent requests limitation let&#39;s

00:11:41.179 --> 00:11:47.419
Caption: put something intermediary in the middle

00:11:43.969 --> 00:11:49.939
Caption: and that intermediary thing goes around

00:11:47.419 --> 00:11:52.099
Caption: and fetches the information and because

00:11:49.940 --> 00:11:55.369
Caption: that&#39;s running in the server space it&#39;s

00:11:52.099 --> 00:11:56.899
Caption: not bound to that limitation so it goes

00:11:55.369 --> 00:11:59.479
Caption: around that get gathers all the

00:11:56.900 --> 00:12:01.730
Caption: information and another good thing about

00:11:59.479 --> 00:12:03.559
Caption: this is that the client doesn&#39;t need to

00:12:01.729 --> 00:12:06.079
Caption: juggle with that request response coming

00:12:03.559 --> 00:12:08.210
Caption: from different sources it puts them in a

00:12:06.080 --> 00:12:11.020
Caption: normalized form in that centric

00:12:08.210 --> 00:12:14.090
Caption: repository and then the coin goes and

00:12:11.020 --> 00:12:19.400
Caption: gets issues requests and gets the data

00:12:14.090 --> 00:12:23.000
Caption: back and remember step now the way this

00:12:19.400 --> 00:12:26.540
Caption: is usually implemented is using batch

00:12:23.000 --> 00:12:28.549
Caption: jobs and you got a bunch of batch jobs

00:12:26.539 --> 00:12:30.109
Caption: running and that thing in the middle and

00:12:28.549 --> 00:12:32.119
Caption: they go and fetch the information put it

00:12:30.109 --> 00:12:37.459
Caption: in the central repository that&#39;s usually

00:12:32.119 --> 00:12:39.739
Caption: yes sort of a cache and the client goes

00:12:37.460 --> 00:12:42.260
Caption: and reads the information there now it

00:12:39.739 --> 00:12:44.989
Caption: solves that concurrency issue number of

00:12:42.260 --> 00:12:49.250
Caption: concurrent requests but what it doesn&#39;t

00:12:44.989 --> 00:12:50.989
Caption: solve or mess up is that it takes away

00:12:49.250 --> 00:12:53.960
Caption: that autonomy that we talked about

00:12:50.989 --> 00:12:55.969
Caption: because as soon as the information it

00:12:53.960 --> 00:12:57.740
Caption: goes out of your service boundaries it&#39;s

00:12:55.969 --> 00:12:58.849
Caption: a store somewhere else you can&#39;t trust

00:12:57.739 --> 00:13:04.399
Caption: its

00:12:58.849 --> 00:13:06.349
Caption: accuracy or it being fresh anyone has

00:13:04.400 --> 00:13:08.960
Caption: done bad jobs they know that they&#39;re

00:13:06.349 --> 00:13:10.729
Caption: prone to fail so whether you go to work

00:13:08.960 --> 00:13:13.130
Caption: the batch of has failed information is

00:13:10.729 --> 00:13:15.769
Caption: stale the clients still reading it

00:13:13.130 --> 00:13:20.630
Caption: so it&#39;s not really trust able other than

00:13:15.770 --> 00:13:24.290
Caption: that there is the issue of cash and cash

00:13:20.630 --> 00:13:26.419
Caption: in validating so as we said you put this

00:13:24.289 --> 00:13:28.130
Caption: information in a normalized form no

00:13:26.419 --> 00:13:30.859
Caption: because the price is coming from one

00:13:28.130 --> 00:13:32.869
Caption: service and the product reviews are

00:13:30.859 --> 00:13:35.059
Caption: coming in the other service you need to

00:13:32.869 --> 00:13:43.179
Caption: be able to invalidate part of that

00:13:35.059 --> 00:13:46.669
Caption: object in the cash which is not easy now

00:13:43.179 --> 00:13:49.279
Caption: there is a similar approach that called

00:13:46.669 --> 00:13:52.909
Caption: this push approach where you still have

00:13:49.280 --> 00:13:55.700
Caption: that thing in the middle but we reverse

00:13:52.909 --> 00:13:58.099
Caption: the order of the flow so we&#39;re not

00:13:55.700 --> 00:14:02.030
Caption: reliant on that batch jobs that are

00:13:58.099 --> 00:14:07.069
Caption: failing so what do we say we go with a

00:14:02.030 --> 00:14:09.380
Caption: message queue so they put in a bunch of

00:14:07.070 --> 00:14:10.940
Caption: cues in our services and those cues are

00:14:09.380 --> 00:14:15.160
Caption: pushing all the information into that

00:14:10.940 --> 00:14:17.750
Caption: centric cache and ultimately client is

00:14:15.159 --> 00:14:20.000
Caption: easy to write because it needs to

00:14:17.750 --> 00:14:21.229
Caption: interface with just one thing doesn&#39;t

00:14:20.000 --> 00:14:24.340
Caption: need to juggle all the requests and

00:14:21.229 --> 00:14:27.529
Caption: responses and it works just like before

00:14:24.340 --> 00:14:29.720
Caption: this doesn&#39;t solve it solves the issue

00:14:27.530 --> 00:14:32.780
Caption: with the bad jobs right but it doesn&#39;t

00:14:29.719 --> 00:14:35.329
Caption: solve is that autonomy again the

00:14:32.780 --> 00:14:37.360
Caption: information is pushed from the boundary

00:14:35.330 --> 00:14:41.500
Caption: of the service into that centric

00:14:37.359 --> 00:14:44.510
Caption: repository but as soon as it leaves that

00:14:41.500 --> 00:14:48.409
Caption: that a boundary of that service it can&#39;t

00:14:44.510 --> 00:14:51.650
Caption: really trust its accuracy or the

00:14:48.409 --> 00:14:53.929
Caption: freshness of the data the fact that

00:14:51.650 --> 00:14:56.210
Caption: we&#39;re using message queues is not that

00:14:53.929 --> 00:14:58.640
Caption: much important because as soon as you

00:14:56.210 --> 00:15:00.110
Caption: have a message going let&#39;s say to update

00:14:58.640 --> 00:15:03.080
Caption: the sales information or the price

00:15:00.109 --> 00:15:04.489
Caption: information it might there might be

00:15:03.080 --> 00:15:07.520
Caption: other updates coming through the

00:15:04.489 --> 00:15:11.179
Caption: pipeline to update the the price further

00:15:07.520 --> 00:15:12.710
Caption: so in can&#39;t really trusted accuracy and

00:15:11.179 --> 00:15:19.130
Caption: it still suffers from that

00:15:12.710 --> 00:15:21.649
Caption: the caching validation issues now the

00:15:19.130 --> 00:15:23.239
Caption: fact that in real-world scenario

00:15:21.648 --> 00:15:25.219
Caption: something looks something like this it

00:15:23.239 --> 00:15:29.270
Caption: makes it more complex and that is

00:15:25.219 --> 00:15:31.069
Caption: usually a cluster of register caches or

00:15:29.270 --> 00:15:33.440
Caption: something like that that you need to

00:15:31.070 --> 00:15:45.140
Caption: juggle and it makes the whole thing even

00:15:33.440 --> 00:15:47.630
Caption: more complex so what we need to what we

00:15:45.140 --> 00:15:51.588
Caption: need as a solution is something that

00:15:47.630 --> 00:15:55.278
Caption: doesn&#39;t compromise the autonomy of our

00:15:51.588 --> 00:15:58.099
Caption: marker services on the backend and still

00:15:55.278 --> 00:16:01.130
Caption: is an easy enough solution for the

00:15:58.099 --> 00:16:05.659
Caption: client to develop and we call this it

00:16:01.130 --> 00:16:07.520
Caption: will model composition so you might ask

00:16:05.659 --> 00:16:10.729
Caption: why do you model isn&#39;t this about the

00:16:07.520 --> 00:16:13.550
Caption: user interface it is but the most

00:16:10.729 --> 00:16:16.000
Caption: complex part of that UI is the data that

00:16:13.549 --> 00:16:20.049
Caption: needs to get to the UI but we&#39;ll show

00:16:16.000 --> 00:16:24.140
Caption: how we need to deal with the UI as well

00:16:20.049 --> 00:16:27.260
Caption: just another thing to note is that this

00:16:24.140 --> 00:16:29.778
Caption: only addresses the issue on the read

00:16:27.260 --> 00:16:31.549
Caption: side of it it&#39;s about how to query in

00:16:29.778 --> 00:16:33.409
Caption: the data and display it it doesn&#39;t

00:16:31.549 --> 00:16:35.510
Caption: involve me taking the state or changing

00:16:33.409 --> 00:16:42.289
Caption: the data on the database so that&#39;s

00:16:35.510 --> 00:16:47.778
Caption: another problem altogether so in order

00:16:42.289 --> 00:16:52.269
Caption: to to have a solution me too exactly

00:16:47.778 --> 00:16:52.270
Caption: design our services on the back end but

00:16:52.390 --> 00:16:58.880
Caption: and also we need to have something

00:16:55.760 --> 00:17:00.979
Caption: running in the middle to be that

00:16:58.880 --> 00:17:05.208
Caption: intermediary thing we call that a

00:17:00.979 --> 00:17:07.250
Caption: composition gateway and from clients

00:17:05.208 --> 00:17:08.958
Caption: perspective it&#39;s all good because we

00:17:07.250 --> 00:17:11.540
Caption: need to interface with only one one

00:17:08.958 --> 00:17:15.290
Caption: thing and that thing running on the

00:17:11.540 --> 00:17:18.290
Caption: server space then once the request comes

00:17:15.290 --> 00:17:20.328
Caption: in issues a multiple concurrent requests

00:17:18.290 --> 00:17:22.729
Caption: to the back-end services and pitches all

00:17:20.328 --> 00:17:25.140
Caption: the information as soon as all the

00:17:22.729 --> 00:17:27.390
Caption: information come back in one by one

00:17:25.140 --> 00:17:29.910
Caption: it puts it back into a kind of a view

00:17:27.390 --> 00:17:32.280
Caption: model a dynamic object for lack of

00:17:29.910 --> 00:17:34.050
Caption: better word and then returns that to the

00:17:32.280 --> 00:17:38.880
Caption: client and the client renders that on

00:17:34.050 --> 00:17:41.489
Caption: the screen as it sees the good thing

00:17:38.880 --> 00:17:43.440
Caption: about this is that that composition case

00:17:41.489 --> 00:17:45.689
Caption: is not an active thing it doesn&#39;t go

00:17:43.439 --> 00:17:50.549
Caption: around and ask for information stored

00:17:45.689 --> 00:17:53.789
Caption: somewhere and that means that we solved

00:17:50.550 --> 00:17:55.470
Caption: the issue of autonomy so this the data

00:17:53.790 --> 00:17:59.280
Caption: is still within the database of each

00:17:55.469 --> 00:18:02.489
Caption: marker service and they own how long

00:17:59.280 --> 00:18:08.790
Caption: it&#39;s going to remain in the cache and

00:18:02.489 --> 00:18:11.010
Caption: things like that if you want to

00:18:08.790 --> 00:18:12.780
Caption: introduce something like some

00:18:11.010 --> 00:18:17.219
Caption: cross-cutting concerns like caching you

00:18:12.780 --> 00:18:20.130
Caption: can do that at the service level so if

00:18:17.219 --> 00:18:22.770
Caption: you remember we said that there needs to

00:18:20.130 --> 00:18:25.589
Caption: be alignment from the business and to

00:18:22.770 --> 00:18:32.070
Caption: cater for the business capability and it

00:18:25.589 --> 00:18:35.099
Caption: makes sense as we see the services

00:18:32.069 --> 00:18:38.759
Caption: remain autonomous so they manage their

00:18:35.099 --> 00:18:40.949
Caption: own state sometimes it makes sense for

00:18:38.760 --> 00:18:43.050
Caption: us for a service to go with the document

00:18:40.949 --> 00:18:47.159
Caption: database sometimes it makes sense to go

00:18:43.050 --> 00:18:48.900
Caption: for relational database and again that

00:18:47.160 --> 00:18:51.090
Caption: comes back to the business capability

00:18:48.900 --> 00:18:52.979
Caption: and alignment with the business you can

00:18:51.089 --> 00:18:56.789
Caption: make that decision on their service

00:18:52.979 --> 00:18:59.489
Caption: basis and you can add cross-cutting

00:18:56.790 --> 00:19:02.670
Caption: concerns like caching where it makes

00:18:59.489 --> 00:19:07.829
Caption: sense at the service level and not want

00:19:02.670 --> 00:19:10.200
Caption: one cache or one rule fit them all and

00:19:07.829 --> 00:19:13.529
Caption: it kind of makes sense because for

00:19:10.199 --> 00:19:16.399
Caption: something like a price service or a

00:19:13.530 --> 00:19:20.940
Caption: sales service the price might change

00:19:16.400 --> 00:19:24.390
Caption: more more regularly maybe on an hourly

00:19:20.939 --> 00:19:26.459
Caption: basis whereas comments and customer

00:19:24.390 --> 00:19:29.070
Caption: ratings is not as much so you could have

00:19:26.459 --> 00:19:31.049
Caption: different rules for each of those

00:19:29.069 --> 00:19:34.250
Caption: services on how much you can gonna cash

00:19:31.050 --> 00:19:37.350
Caption: that and store the data

00:19:34.250 --> 00:19:38.389
Caption: same goes with something like error

00:19:37.349 --> 00:19:41.069
Caption: handling

00:19:38.389 --> 00:19:43.679
Caption: it might make sense for you to be able

00:19:41.069 --> 00:19:48.119
Caption: to do that because again going back to

00:19:43.678 --> 00:19:50.128
Caption: the business you need to decide what the

00:19:48.119 --> 00:19:51.839
Caption: user experience is going to be if your

00:19:50.129 --> 00:19:53.580
Caption: product reviews service is not available

00:19:51.839 --> 00:19:56.038
Caption: that&#39;s not the end of the world you

00:19:53.579 --> 00:19:57.869
Caption: could still have their business whereas

00:19:56.038 --> 00:20:00.268
Caption: if something like a sales service is not

00:19:57.869 --> 00:20:07.048
Caption: available you need to show an error page

00:20:00.269 --> 00:20:10.320
Caption: maybe and this solution means that there

00:20:07.048 --> 00:20:11.729
Caption: is no tight coupling as we saw but in

00:20:10.319 --> 00:20:13.258
Caption: order for services to be able to

00:20:11.729 --> 00:20:16.619
Caption: communicate with each other you need to

00:20:13.259 --> 00:20:19.349
Caption: have some level of understanding and

00:20:16.619 --> 00:20:22.649
Caption: that&#39;s using a unique identifier so when

00:20:19.349 --> 00:20:25.288
Caption: you say go around and fetch information

00:20:22.649 --> 00:20:26.850
Caption: about product ID ten all the services

00:20:25.288 --> 00:20:36.349
Caption: need to understand what that product ID

00:20:26.849 --> 00:20:40.739
Caption: 10 means now for the UI bit once you

00:20:36.349 --> 00:20:43.619
Caption: solve the challenge of the data the UI

00:20:40.739 --> 00:20:44.788
Caption: is kind of easy there is already a

00:20:43.619 --> 00:20:46.889
Caption: standard for it

00:20:44.788 --> 00:20:51.658
Caption: that&#39;s called web components anyone use

00:20:46.889 --> 00:20:54.299
Caption: components before ok so look it up on it

00:20:51.659 --> 00:20:56.250
Caption: it&#39;s a standard it&#39;s going to be

00:20:54.298 --> 00:20:59.008
Caption: supported by all major browsers not the

00:20:56.250 --> 00:21:00.629
Caption: JavaScript framework so you don&#39;t need

00:20:59.009 --> 00:21:03.629
Caption: to be relying on a specific framework

00:21:00.629 --> 00:21:05.519
Caption: for that only see the adoption could go

00:21:03.629 --> 00:21:08.489
Caption: - can I use that comment search for web

00:21:05.519 --> 00:21:10.220
Caption: components shows which major browsers

00:21:08.489 --> 00:21:13.109
Caption: which versions currently support that

00:21:10.219 --> 00:21:17.479
Caption: but essentially gives you a framework to

00:21:13.109 --> 00:21:20.278
Caption: build your application as widgets and

00:21:17.479 --> 00:21:22.859
Caption: it&#39;s the standard as I said I&#39;m sorry

00:21:20.279 --> 00:21:27.740
Caption: so standard as I said gives you

00:21:22.859 --> 00:21:31.558
Caption: encapsulation so your UI widgets are

00:21:27.739 --> 00:21:33.359
Caption: self-sufficient don&#39;t need to fight

00:21:31.558 --> 00:21:36.569
Caption: couple them into each other there is

00:21:33.359 --> 00:21:39.269
Caption: still a way to communicate with other

00:21:36.569 --> 00:21:41.219
Caption: widgets using using events and it is

00:21:39.269 --> 00:21:43.950
Caption: composable so you can create your whole

00:21:41.219 --> 00:21:46.258
Caption: application using widgets or components

00:21:43.949 --> 00:21:48.209
Caption: gives you things like custom elements

00:21:46.259 --> 00:21:50.629
Caption: and shadow DOM and HTML imports and

00:21:48.209 --> 00:21:50.628
Caption: things like that

00:21:52.298 --> 00:21:58.969
Caption: now there is a quick demo to show how

00:21:55.909 --> 00:22:00.559
Caption: this all works in practice but before we

00:21:58.969 --> 00:22:03.729
Caption: get to that I&#39;d like to emphasize this

00:22:00.558 --> 00:22:08.959
Caption: anyone seen this this quote before

00:22:03.729 --> 00:22:11.239
Caption: yeah this is called conveys law this

00:22:08.959 --> 00:22:14.538
Caption: essentially tells you that your

00:22:11.239 --> 00:22:16.069
Caption: organizational boundary and structure is

00:22:14.538 --> 00:22:21.558
Caption: going to shape the way you create the

00:22:16.069 --> 00:22:27.969
Caption: software so he did the research in 1968

00:22:21.558 --> 00:22:30.528
Caption: and gather around 14 and ask him to

00:22:27.969 --> 00:22:35.089
Caption: cooperate mature and work leisure to

00:22:30.529 --> 00:22:37.460
Caption: create a compiler and they all went away

00:22:35.089 --> 00:22:39.979
Caption: and work together and created a compiler

00:22:37.459 --> 00:22:41.418
Caption: that was a four stage compiler not

00:22:39.979 --> 00:22:42.798
Caption: necessarily because the first-stage

00:22:41.418 --> 00:22:44.898
Caption: compiler makes sense

00:22:42.798 --> 00:22:47.959
Caption: but because the way the teams are

00:22:44.899 --> 00:22:52.669
Caption: structured the main and impact on and

00:22:47.959 --> 00:22:55.489
Caption: the outcome so this is very important to

00:22:52.668 --> 00:22:57.798
Caption: know it&#39;s because as I said for you to

00:22:55.489 --> 00:23:01.158
Caption: have the proper marker service you need

00:22:57.798 --> 00:23:04.038
Caption: to be able to structure your teams so

00:23:01.159 --> 00:23:07.149
Caption: that their cross-functional team so that

00:23:04.038 --> 00:23:14.418
Caption: you can manage all that vertical slice

00:23:07.149 --> 00:23:16.789
Caption: within your team teams boundary so I&#39;ll

00:23:14.418 --> 00:23:18.589
Caption: show you a quick demo

00:23:16.788 --> 00:23:22.189
Caption: it shows you some of the stuff that I

00:23:18.589 --> 00:23:24.709
Caption: talked about in practice the I&#39;ll put a

00:23:22.189 --> 00:23:27.349
Caption: link at the end of the presentation to

00:23:24.709 --> 00:23:30.459
Caption: their code repo so they do have a look

00:23:27.349 --> 00:23:30.459
Caption: and see how it all works

00:24:23.790 --> 00:24:33.420
Caption: so that this sample project uses an HP

00:24:28.829 --> 00:24:34.859
Caption: net core and you choose some of the

00:24:33.420 --> 00:24:38.880
Caption: concepts that we talked about in

00:24:34.859 --> 00:24:42.900
Caption: practice and bring an open source the

00:24:38.880 --> 00:24:44.819
Caption: name comes from the movie that was on

00:24:42.900 --> 00:24:46.170
Caption: the slides as well what makes you

00:24:44.819 --> 00:24:50.069
Caption: different makes you stronger so

00:24:46.170 --> 00:24:57.300
Caption: hopefully got something to take away

00:24:50.069 --> 00:24:59.250
Caption: from this so quickly this sample has two

00:24:57.300 --> 00:25:01.290
Caption: modules or two services or two

00:24:59.250 --> 00:25:03.869
Caption: microservices however you want to call

00:25:01.290 --> 00:25:06.600
Caption: that and one is called sales which

00:25:03.869 --> 00:25:08.270
Caption: manages sales information and order and

00:25:06.599 --> 00:25:11.400
Caption: things like that the other is shipping

00:25:08.270 --> 00:25:13.770
Caption: they&#39;re all self-sufficient so the team

00:25:11.400 --> 00:25:18.810
Caption: will be taking care of that and each one

00:25:13.770 --> 00:25:21.359
Caption: has components like it the database and

00:25:18.810 --> 00:25:25.500
Caption: the view model composition we look into

00:25:21.359 --> 00:25:27.750
Caption: and there is also the UI bits and the

00:25:25.500 --> 00:25:30.390
Caption: API host is the actual thing the asking

00:25:27.750 --> 00:25:33.599
Caption: that core with websites or web services

00:25:30.390 --> 00:25:36.329
Caption: that Web API services that will be

00:25:33.599 --> 00:25:38.309
Caption: running there is some sort of

00:25:36.329 --> 00:25:42.839
Caption: communication between among will see how

00:25:38.310 --> 00:25:46.020
Caption: that works and the main website is

00:25:42.839 --> 00:25:49.770
Caption: hosted and this application and that&#39;s

00:25:46.020 --> 00:25:52.859
Caption: just a standard website there is the

00:25:49.770 --> 00:25:55.530
Caption: concept of the date and the gateway that

00:25:52.859 --> 00:25:59.030
Caption: we saw from the slides that&#39;s also just

00:25:55.530 --> 00:26:02.460
Caption: to simplify things it&#39;s hosted here so

00:25:59.030 --> 00:26:10.710
Caption: let me just show you a demo of how this

00:26:02.459 --> 00:26:12.270
Caption: works and then as well so you see that

00:26:10.709 --> 00:26:15.419
Caption: there are two different back-end

00:26:12.270 --> 00:26:20.099
Caption: components running and this is the main

00:26:15.420 --> 00:26:22.850
Caption: website each of these services are just

00:26:20.099 --> 00:26:25.229
Caption: as I said it&#39;s been that core verb API

00:26:22.849 --> 00:26:28.130
Caption: there is no communication between them

00:26:25.229 --> 00:26:33.089
Caption: at this point and there is the

00:26:28.130 --> 00:26:35.130
Caption: simplified web application and I&#39;ll open

00:26:33.089 --> 00:26:35.719
Caption: the developers tool so if you see what&#39;s

00:26:35.130 --> 00:26:39.979
Caption: going on

00:26:35.719 --> 00:26:43.329
Caption: the hood and as soon as I go to my

00:26:39.979 --> 00:26:47.380
Caption: orders page it&#39;s gonna issue just one

00:26:43.329 --> 00:26:47.380
Caption: request to fetch everything

00:26:51.420 --> 00:26:59.730
Caption: if I go to the network tab because I a

00:26:55.709 --> 00:27:03.058
Caption: filter for xhr interesting next web

00:26:59.729 --> 00:27:05.510
Caption: request to fetch the information and if

00:27:03.058 --> 00:27:07.619
Caption: you see there is only one you should be

00:27:05.510 --> 00:27:11.160
Caption: requesting issue this goes to the

00:27:07.619 --> 00:27:13.199
Caption: backend and that composition gateway as

00:27:11.160 --> 00:27:15.479
Caption: I said issues multiple requests to fetch

00:27:13.199 --> 00:27:18.599
Caption: everything and on the front end you see

00:27:15.479 --> 00:27:23.609
Caption: that the result is come from compromised

00:27:18.599 --> 00:27:27.959
Caption: of what the shipping information as well

00:27:23.609 --> 00:27:31.589
Caption: as order information all in one response

00:27:27.959 --> 00:27:33.270
Caption: have a look at that response new but

00:27:31.589 --> 00:27:36.569
Caption: more detailed you see that it has

00:27:33.270 --> 00:27:39.799
Caption: multiple entries it&#39;s a grid and each

00:27:36.569 --> 00:27:44.369
Caption: entry has information from different

00:27:39.798 --> 00:27:47.819
Caption: services on the backend and this is the

00:27:44.369 --> 00:27:49.829
Caption: scenario of a table as I said and this

00:27:47.819 --> 00:27:51.659
Caption: is another another example where you

00:27:49.829 --> 00:27:54.119
Caption: have and identified that you need to

00:27:51.660 --> 00:27:56.040
Caption: talk about and that&#39;s get sent to all

00:27:54.119 --> 00:27:58.410
Caption: that those back-end services and they

00:27:56.040 --> 00:28:06.479
Caption: can provide information for the client

00:27:58.410 --> 00:28:12.450
Caption: to render now quickly going through the

00:28:06.479 --> 00:28:17.548
Caption: code first of all the the UI bits are

00:28:12.449 --> 00:28:19.168
Caption: kind of easy because they are managed by

00:28:17.548 --> 00:28:20.729
Caption: the team working on that service so if

00:28:19.168 --> 00:28:23.189
Caption: you have a look at the constructs of

00:28:20.729 --> 00:28:28.229
Caption: that those widgets that&#39;s kind of simple

00:28:23.189 --> 00:28:31.918
Caption: but you can see it is a lucky great

00:28:28.229 --> 00:28:34.400
Caption: column that renders or goes out and

00:28:31.918 --> 00:28:37.529
Caption: takes out that information from that

00:28:34.400 --> 00:28:40.500
Caption: response and sent from the back in

00:28:37.530 --> 00:28:41.250
Caption: service so then you are kind of BAM not

00:28:40.500 --> 00:28:46.349
Caption: interesting

00:28:41.250 --> 00:28:47.790
Caption: maybe the interesting is the view model

00:28:46.349 --> 00:28:52.678
Caption: composition you won&#39;t have a look at

00:28:47.790 --> 00:28:56.190
Caption: that it&#39;s got a concept of an app in

00:28:52.678 --> 00:28:58.649
Caption: there and if you remember we said that

00:28:56.189 --> 00:29:00.599
Caption: when you issue a request that the

00:28:58.650 --> 00:29:02.760
Caption: composition gave a farz of requests

00:29:00.599 --> 00:29:04.780
Caption: going on to the back-end services and

00:29:02.760 --> 00:29:08.530
Caption: they can chime in if they&#39;re in

00:29:04.780 --> 00:29:10.150
Caption: just that in giving your providing any

00:29:08.530 --> 00:29:13.030
Caption: information for that request and that&#39;s

00:29:10.150 --> 00:29:15.670
Caption: where the magic happens that matches is

00:29:13.030 --> 00:29:19.570
Caption: telling you the one chime in and the

00:29:15.670 --> 00:29:21.130
Caption: append is the actual logic to go out and

00:29:19.569 --> 00:29:23.799
Caption: fetch information this is kind of a

00:29:21.130 --> 00:29:28.479
Caption: simple scenario where you go to your

00:29:23.800 --> 00:29:30.369
Caption: local with Web API and say give me all

00:29:28.479 --> 00:29:33.520
Caption: the orders with the current with the

00:29:30.369 --> 00:29:35.469
Caption: past in ID and then put that all in a

00:29:33.520 --> 00:29:38.140
Caption: dynamic object and then the dynamic

00:29:35.469 --> 00:29:41.799
Caption: object gets returned to the client and

00:29:38.140 --> 00:29:45.609
Caption: same goes for when you want to render

00:29:41.800 --> 00:29:47.590
Caption: the shipping information again same

00:29:45.609 --> 00:29:50.319
Caption: concept as before it&#39;s an offender and

00:29:47.589 --> 00:29:53.799
Caption: you go around and send that to a

00:29:50.319 --> 00:29:55.389
Caption: different service this time and pick up

00:29:53.800 --> 00:29:57.160
Caption: the information from the response and

00:29:55.390 --> 00:30:01.359
Caption: put it in a dynamic view model and then

00:29:57.160 --> 00:30:04.420
Caption: return it to the UI to render and the

00:30:01.359 --> 00:30:08.349
Caption: actual UI is also as I said developed by

00:30:04.420 --> 00:30:10.570
Caption: the same team so because it might cut

00:30:08.349 --> 00:30:12.160
Caption: you off at firstly thinking that if it&#39;s

00:30:10.569 --> 00:30:13.869
Caption: a dynamic object you don&#39;t know what&#39;s

00:30:12.160 --> 00:30:15.910
Caption: in there but because of the fact that

00:30:13.869 --> 00:30:17.349
Caption: the same thing will be rocking the

00:30:15.910 --> 00:30:19.150
Caption: backend component and the front-end

00:30:17.349 --> 00:30:21.729
Caption: component they know what to look for and

00:30:19.150 --> 00:30:25.359
Caption: what it looks like when they want to

00:30:21.729 --> 00:30:28.390
Caption: pick that information the only tricky

00:30:25.359 --> 00:30:30.549
Caption: thing is that where is a scenario where

00:30:28.390 --> 00:30:32.890
Caption: you need to load the information after

00:30:30.550 --> 00:30:37.989
Caption: certain thing is loaded like the example

00:30:32.890 --> 00:30:44.680
Caption: of loading a shipping information for

00:30:37.989 --> 00:30:46.959
Caption: either multiple multiple orders first

00:30:44.680 --> 00:30:49.060
Caption: you need to have those orders loaded

00:30:46.959 --> 00:30:51.699
Caption: before you have those IDs so you can

00:30:49.060 --> 00:30:55.390
Caption: have a lookup in the database to fetch

00:30:51.699 --> 00:30:58.209
Caption: their status and for that there is a

00:30:55.390 --> 00:31:01.420
Caption: concept of published pops up publisher

00:30:58.209 --> 00:31:03.969
Caption: subscriber so you listen to an event

00:31:01.420 --> 00:31:06.880
Caption: called orders loaded and once that

00:31:03.969 --> 00:31:10.179
Caption: happens you go kind of do the same thing

00:31:06.880 --> 00:31:13.329
Caption: but it&#39;s essentially it&#39;s like a promise

00:31:10.180 --> 00:31:15.340
Caption: or if you&#39;ve used that containment

00:31:13.329 --> 00:31:17.599
Caption: terminology before it&#39;s just waiting for

00:31:15.339 --> 00:31:20.058
Caption: an event to fire off and then that

00:31:17.599 --> 00:31:27.410
Caption: those something but there is is kind of

00:31:20.058 --> 00:31:29.630
Caption: the same and the last but not least how

00:31:27.410 --> 00:31:33.799
Caption: to plug it in it&#39;s kind of easy

00:31:29.630 --> 00:31:36.079
Caption: so this is a standard it&#39;s been a core

00:31:33.798 --> 00:31:39.380
Caption: application all you need to do is to

00:31:36.079 --> 00:31:42.380
Caption: plug in this using this method

00:31:39.380 --> 00:31:45.199
Caption: extinction method and that goes around

00:31:42.380 --> 00:31:47.780
Caption: until it&#39;s been a core of an ax plug-in

00:31:45.199 --> 00:31:53.178
Caption: into the get request when there is a get

00:31:47.780 --> 00:31:57.349
Caption: request there is a component that will

00:31:53.178 --> 00:32:00.199
Caption: fire that off to multiple back-end

00:31:57.349 --> 00:32:04.219
Caption: services and this is very you can

00:32:00.199 --> 00:32:06.408
Caption: fine-tune what&#39;s gonna happen if the

00:32:04.219 --> 00:32:08.359
Caption: service is down or crash is not

00:32:06.409 --> 00:32:11.179
Caption: providing response on time and then you

00:32:08.359 --> 00:32:15.520
Caption: can make that decision based on their

00:32:11.178 --> 00:32:15.519
Caption: requirements coming from the business

00:32:18.609 --> 00:32:28.339
Caption: the rest is all in IT ops and that&#39;s

00:32:25.520 --> 00:32:29.869
Caption: kind of the infrastructure code and the

00:32:28.339 --> 00:32:32.168
Caption: way that it&#39;s all put together for the

00:32:29.869 --> 00:32:34.760
Caption: where the clients perspective is that

00:32:32.168 --> 00:32:41.479
Caption: let&#39;s say you have a view and the view

00:32:34.760 --> 00:32:43.640
Caption: is using those components created by the

00:32:41.479 --> 00:32:46.130
Caption: UI developer in that team and then it&#39;s

00:32:43.640 --> 00:32:53.479
Caption: just put together and packaged as a web

00:32:46.130 --> 00:32:57.099
Caption: application all ultimately and just

00:32:53.479 --> 00:32:57.099
Caption: going back to the demo

00:33:01.739 --> 00:33:07.750
Caption: the only thing that makes this all magic

00:33:05.109 --> 00:33:15.609
Caption: work is that the composition gateway is

00:33:07.750 --> 00:33:18.849
Caption: listening on a specific route and and as

00:33:15.609 --> 00:33:20.890
Caption: soon as you hit a specific route that&#39;s

00:33:18.849 --> 00:33:27.309
Caption: going to get activated and far as up

00:33:20.890 --> 00:33:34.270
Caption: requests to to your banking services so

00:33:27.310 --> 00:33:36.520
Caption: a slush compose is where that API is

00:33:34.270 --> 00:33:41.130
Caption: listening and as soon as it gets to

00:33:36.520 --> 00:33:43.630
Caption: incoming requests as far as up the

00:33:41.130 --> 00:33:46.390
Caption: request to fetch information and it goes

00:33:43.630 --> 00:33:48.819
Caption: to the backend services and that&#39;s the

00:33:46.390 --> 00:33:53.109
Caption: extent of it if you&#39;re interested the

00:33:48.819 --> 00:33:56.709
Caption: code is available on github and you

00:33:53.109 --> 00:33:59.819
Caption: could pick it up and see what it looks

00:33:56.709 --> 00:33:59.819
Caption: like in more detail

00:34:19.418 --> 00:34:27.520
Caption: okay so the code is available in that

00:34:23.689 --> 00:34:29.959
Caption: URL if you&#39;re interested in this subject

00:34:27.520 --> 00:34:31.520
Caption: colleague of mine has a blog post about

00:34:29.959 --> 00:34:33.760
Caption: it&#39;s called the secrets of whether you

00:34:31.520 --> 00:34:37.479
Caption: are composition it goes me to detail

00:34:33.760 --> 00:34:40.219
Caption: about the concept and a few strategies

00:34:37.479 --> 00:34:45.560
Caption: there&#39;s also the advanced distributed

00:34:40.219 --> 00:34:47.959
Caption: system design by you did honk that goes

00:34:45.560 --> 00:34:49.339
Caption: into the subject of services I saw a

00:34:47.959 --> 00:34:52.790
Caption: marker services thing you are

00:34:49.339 --> 00:34:56.510
Caption: composition and there is a workshop in

00:34:52.790 --> 00:34:58.669
Caption: NDC Sydney if you plan to attend and

00:34:56.510 --> 00:35:02.510
Caption: that&#39;s also going over the UART

00:34:58.669 --> 00:35:04.859
Caption: composition stuff thank you for being

00:35:02.510 --> 00:35:11.118
Caption: here today

00:35:04.860 --> 00:35:11.119
Caption: [Applause]

