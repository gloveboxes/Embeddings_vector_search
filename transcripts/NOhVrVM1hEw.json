{
  "speaker": "Daniel Sagenschneider",
  "title": "Building a 6 million request per second web server",
  "videoId": "NOhVrVM1hEw",
  "description": "And to be clear this is not a cluster of web servers.  This talk is about a single web server servicing 6 million requests per second.\\n\\nI\u0027m the author of a web server that is ranked in the top 20 of the TechEmpower benchmarks.  These benchmarks performance test various web servers built in any technology.  All the web servers are pitted against each other and the results published yearly.  While some might question the value of performance testing, Microsoft supports these benchmarks after having been called out to improve their IIS performance.\\n\\nThis talk goes into the engineering of how to service 6 million requests per second.  This is definitely a technical presentation, as we deep dive into performant software on multi-core hardware. If you want warm and fuzzy soft skills, I highly recommend going elsewhere.  This is a hard skill technical presentation that will enable even junior developers to obtain an appreciation for the engineering required for high performance applications.\\n\\nWhat you get out of this talk is an appreciation for what high performant software looks like.  It will highlight key bottlenecks you can avoid in your everyday software practices to improve the performance of the systems you build.  It will also debunk much of the thinking about how to write performant software.  I hear so many developers concerned about certain performance aspects of software, missing simple key things that are significantly more important.\\n\\n--\\nAuthor of OfficeFloor: using office patterns to improve software design and founder of OfficeFloor (http://officefloor.net).   My focus has been on improving Software via taking patterns from the Business (rather than the typical forcing \\"
}
