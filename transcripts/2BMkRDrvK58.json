{
  "speaker": "Daniel Sagenschneider",
  "title": "Dependency Injection is only \u2155 of the problem",
  "videoId": "2BMkRDrvK58",
  "description": "Dependency Injection is only \u2155 of the Inversion of Control problem\\n\\nWhat is The OO Matrix?  I can not tell you.  I must show you what it is.  Some may be aware of it\u0027s existence, while others have grown up in it knowing no difference.  This talk offers you the red pill to show you whatis The OO Matrix.\\n\\nPlus, if you think Spring is great, then this talk shows you how it can be better.  If you think Spring has issues, then this talk gives you the missing pieces.\\n\\nDependency Injection is a great concept, but it\u0027s actually only 1/5 of the Inversion of Control (IoC) problem.   By introducing further injection techniques (such as Thread Injection and Continuation Injection), we can create a more complete Inversion of Control.\\n\\nAlso, Functional Programming is on the rise.  Functional programming claims dependency injection is not necessary, as this is achieved through higher order function composition. Therefore, is there still a place for Dependency Injection in the future of programming?   Yes, we actually need to apply IoC to Functional programming.\\n\\nThe result is better cohesion and lower coupling in your code.\\n\\nThis talk will take you through the remaining IoC concepts, so that these enable you to build and maintain your systems easier.\\n\\n\\nAuthor of OfficeFloor: using office patterns to improve software design and founder of OfficeFloor (http://officefloor.net).   My focus has been on improving Software via taking patterns from the Business (rather than the typical forcing \\"
}
