WEBVTT

00:00:00.000 --> 00:00:08.119
Caption: okay so we have had an absolutely

00:00:03.688 --> 00:00:11.848
Caption: fantastic bunch of speakers this morning

00:00:08.119 --> 00:00:13.460
Caption: ready five so probably have some yeah

00:00:11.848 --> 00:00:15.659
Caption: it&#39;s been great

00:00:13.460 --> 00:00:17.250
Caption: welcome welcome this is probably the

00:00:15.659 --> 00:00:27.959
Caption: second biggest turnout again we&#39;ve had

00:00:17.250 --> 00:00:55.889
Caption: all day from mechanical Rock so just a

00:00:27.959 --> 00:00:58.799
Caption: quick there is a mix here somewhere and

00:00:55.889 --> 00:01:09.089
Caption: concisely as I can so that&#39;s not for me

00:00:58.799 --> 00:01:13.919
Caption: please a very very big welcome hello

00:01:09.089 --> 00:01:15.569
Caption: everyone I can sleep through this pop so

00:01:13.919 --> 00:01:26.879
Caption: today we&#39;re going to talk about how are

00:01:15.569 --> 00:01:28.889
Caption: you going to build you know so I think

00:01:26.879 --> 00:01:32.699
Caption: we just want to thank our sponsor

00:01:28.889 --> 00:01:34.169
Caption: without whom none of this is possible so

00:01:32.699 --> 00:01:40.649
Caption: just a bit about myself my name is

00:01:34.169 --> 00:01:43.438
Caption: Williams the main reason I&#39;m here is

00:01:40.650 --> 00:01:50.119
Caption: because my boss said bro you need to be

00:01:43.439 --> 00:01:53.130
Caption: more active in the community I have

00:01:50.119 --> 00:01:54.420
Caption: certification and one vacation yet today

00:01:53.129 --> 00:01:58.430
Caption: in the morning I forgot to take off my

00:01:54.419 --> 00:01:58.430
Caption: glasses when I just

00:01:58.978 --> 00:02:04.209
Caption: so let&#39;s start with a problem so this is

00:02:01.989 --> 00:02:07.449
Caption: an actual picture of our user when using

00:02:04.209 --> 00:02:08.830
Caption: our progressive web apps so one of the

00:02:07.449 --> 00:02:13.000
Caption: most interesting requirement that we

00:02:08.830 --> 00:02:24.850
Caption: have is the main user of our progressive

00:02:13.000 --> 00:02:26.979
Caption: web apps is a technician who so imagine

00:02:24.850 --> 00:02:30.069
Caption: typing a complex password using the

00:02:26.979 --> 00:02:31.809
Caption: particular dog and the device that they

00:02:30.069 --> 00:02:33.279
Caption: used to access the apps will not be

00:02:31.809 --> 00:02:34.419
Caption: brought back to the headquarters for a

00:02:33.279 --> 00:02:37.660
Caption: couple of months

00:02:34.419 --> 00:02:39.940
Caption: so how do you apply update into your

00:02:37.660 --> 00:02:42.699
Caption: application actually that&#39;s the one of

00:02:39.940 --> 00:02:45.369
Caption: the easiest win that we have because

00:02:42.699 --> 00:02:46.750
Caption: progressive web app is for web apps you

00:02:45.369 --> 00:02:49.539
Caption: don&#39;t have to submit editing to the App

00:02:46.750 --> 00:02:50.860
Caption: Store or the Android store whatever if

00:02:49.539 --> 00:02:52.809
Caption: they have a metal connection and they

00:02:50.860 --> 00:02:57.250
Caption: access your web app you always get the

00:02:52.809 --> 00:02:58.630
Caption: latest version right so that so just

00:02:57.250 --> 00:03:00.160
Caption: could be recap because this is not an

00:02:58.630 --> 00:03:02.889
Caption: introduction section progressive web app

00:03:00.160 --> 00:03:05.139
Caption: is a web app that reliable it should

00:03:02.889 --> 00:03:07.328
Caption: work in any network condition it should

00:03:05.139 --> 00:03:09.250
Caption: be fast it should render less than 60

00:03:07.328 --> 00:03:11.289
Caption: frames per second and then it should be

00:03:09.250 --> 00:03:17.169
Caption: engaging that means the real-time

00:03:11.289 --> 00:03:19.089
Caption: notification right so say when people

00:03:17.169 --> 00:03:20.259
Caption: talk about progressive web apps they

00:03:19.089 --> 00:03:21.789
Caption: talk about service worker which is

00:03:20.259 --> 00:03:24.970
Caption: pretty much a proxy on your browser

00:03:21.789 --> 00:03:26.979
Caption: right so one of the thing that we learn

00:03:24.970 --> 00:03:29.979
Caption: is please do not write the service will

00:03:26.979 --> 00:03:32.349
Caption: water yourself so this is typically what

00:03:29.979 --> 00:03:34.238
Caption: you write when you&#39;re writing so you

00:03:32.350 --> 00:03:36.970
Caption: have to define all the assets that you

00:03:34.238 --> 00:03:40.419
Caption: own location right and then you have to

00:03:36.970 --> 00:03:42.850
Caption: actually write the code that do your

00:03:40.419 --> 00:03:44.798
Caption: casing casing strategy whether it&#39;s a

00:03:42.850 --> 00:03:47.590
Caption: network first or a casebook site it

00:03:44.798 --> 00:03:49.988
Caption: really takes a lot of effort to be able

00:03:47.589 --> 00:03:52.988
Caption: to write all this and it is a backpack

00:03:49.988 --> 00:03:54.759
Caption: for system computer guess all the power

00:03:52.988 --> 00:03:56.679
Caption: changes every time we do build so you

00:03:54.759 --> 00:03:59.349
Caption: have to redo it all over again every

00:03:56.679 --> 00:04:01.629
Caption: time you do a deployment so you should

00:03:59.350 --> 00:04:04.359
Caption: miss plugin this one from Google which

00:04:01.630 --> 00:04:06.790
Caption: is a Google box or that&#39;s the one that

00:04:04.358 --> 00:04:08.948
Caption: we use is for Oakland Fagin so all the

00:04:06.789 --> 00:04:09.969
Caption: stuff that you see privately we just

00:04:08.949 --> 00:04:13.930
Caption: live in this

00:04:09.970 --> 00:04:16.570
Caption: and what good about it is you can simply

00:04:13.929 --> 00:04:18.279
Caption: say my response ready is never put what

00:04:16.570 --> 00:04:21.100
Caption: that mean is it always try to scratch

00:04:18.279 --> 00:04:24.940
Caption: the assets from the network before try

00:04:21.100 --> 00:04:26.950
Caption: location possible do not write your

00:04:24.940 --> 00:04:27.369
Caption: submission by yourself if you don&#39;t have

00:04:26.950 --> 00:04:32.950
Caption: to

00:04:27.369 --> 00:04:35.019
Caption: and secondly do not maintain so this is

00:04:32.950 --> 00:04:36.700
Caption: your typical react with Redux

00:04:35.019 --> 00:04:38.889
Caption: replication right when whenever you load

00:04:36.700 --> 00:04:41.920
Caption: up your application it&#39;s a bunch of

00:04:38.890 --> 00:04:44.110
Caption: action and this action do a fetch from a

00:04:41.920 --> 00:04:47.770
Caption: server and if it&#39;s a client it retrieves

00:04:44.109 --> 00:04:50.199
Caption: on the page but it also if it&#39;s online

00:04:47.769 --> 00:04:52.209
Caption: after it gets the start we has to store

00:04:50.200 --> 00:04:55.270
Caption: it in local storage but if it&#39;s apply

00:04:52.209 --> 00:04:58.239
Caption: but it&#39;s quite imagine if you load your

00:04:55.269 --> 00:05:00.759
Caption: app in the offline position where all

00:04:58.239 --> 00:05:02.769
Caption: this stuff has to happen for all the

00:05:00.760 --> 00:05:04.809
Caption: action it&#39;s gonna take a while before

00:05:02.769 --> 00:05:06.369
Caption: your redox flow is populated to your

00:05:04.809 --> 00:05:07.839
Caption: state which means that it takes a while

00:05:06.369 --> 00:05:11.049
Caption: before your application will get

00:05:07.839 --> 00:05:15.220
Caption: rendered again you should use plugin

00:05:11.049 --> 00:05:16.899
Caption: this is one that we so what it but it

00:05:15.220 --> 00:05:19.570
Caption: does is every time your reader

00:05:16.899 --> 00:05:24.699
Caption: straightly updated its sync with the

00:05:19.570 --> 00:05:26.380
Caption: index dB so it&#39;s for the whole of your

00:05:24.700 --> 00:05:28.419
Caption: read up straight index will be which

00:05:26.380 --> 00:05:30.190
Caption: means that when it&#39;s offline it always

00:05:28.419 --> 00:05:31.390
Caption: initialize that&#39;s for for next to be

00:05:30.190 --> 00:05:33.489
Caption: which mean that the application is

00:05:31.390 --> 00:05:38.020
Caption: rendered quickly while trying to do the

00:05:33.489 --> 00:05:40.269
Caption: catching on the back end and in the past

00:05:38.019 --> 00:05:42.489
Caption: one of the boost practice when you using

00:05:40.269 --> 00:05:44.529
Caption: service worker is that you should tell

00:05:42.489 --> 00:05:45.279
Caption: the user when the application is ready

00:05:44.529 --> 00:05:48.100
Caption: to go offline

00:05:45.279 --> 00:05:50.200
Caption: so in this is normally when the service

00:05:48.100 --> 00:05:53.440
Caption: worker is already installed and have

00:05:50.200 --> 00:05:55.330
Caption: fetched for the static assets but if the

00:05:53.440 --> 00:05:58.089
Caption: tablet or computer that you use is

00:05:55.329 --> 00:06:00.879
Caption: running out of space the OS will come to

00:05:58.089 --> 00:06:06.850
Caption: purge some of the page and that could be

00:06:00.880 --> 00:06:09.190
Caption: your and I think Google released a

00:06:06.850 --> 00:06:11.950
Caption: persistent source API what that means

00:06:09.190 --> 00:06:15.910
Caption: that if your application matched one of

00:06:11.950 --> 00:06:18.669
Caption: this condition the con the cache content

00:06:15.910 --> 00:06:20.289
Caption: will be stored persistently and then you

00:06:18.669 --> 00:06:21.149
Caption: can use the API to check whether that&#39;s

00:06:20.289 --> 00:06:23.100
Caption: true

00:06:21.149 --> 00:06:25.139
Caption: and then you display display the banner

00:06:23.100 --> 00:06:29.730
Caption: saying that now your application is

00:06:25.140 --> 00:06:32.310
Caption: ready to perform right do not think fate

00:06:29.730 --> 00:06:37.440
Caption: by yourself what do you mean by it

00:06:32.309 --> 00:06:39.179
Caption: so use a gmail for example right sinking

00:06:37.440 --> 00:06:40.920
Caption: step by yourself mean that when the

00:06:39.179 --> 00:06:44.579
Caption: application is offline when the user

00:06:40.920 --> 00:06:47.010
Caption: click on send email then your JavaScript

00:06:44.579 --> 00:06:48.329
Caption: code check my online or not if it&#39;s

00:06:47.010 --> 00:06:50.610
Caption: offline you display an error message

00:06:48.329 --> 00:06:53.039
Caption: saying to user you are from the offline

00:06:50.609 --> 00:06:55.949
Caption: please come back later and store the

00:06:53.040 --> 00:06:57.960
Caption: email into your local storage but that

00:06:55.950 --> 00:06:59.460
Caption: means that you require a user to go back

00:06:57.959 --> 00:07:02.669
Caption: to your application when they&#39;re online

00:06:59.459 --> 00:07:05.819
Caption: to sending email right again from

00:07:02.670 --> 00:07:08.550
Caption: introduce this API for balancing so the

00:07:05.820 --> 00:07:11.910
Caption: way you do it is once the user clicks

00:07:08.549 --> 00:07:13.919
Caption: and you store the email in your index DB

00:07:11.910 --> 00:07:16.679
Caption: with the state pending and then you fire

00:07:13.920 --> 00:07:19.529
Caption: this single event and your serviceworker

00:07:16.679 --> 00:07:21.989
Caption: will subscribe to this event and then

00:07:19.529 --> 00:07:23.790
Caption: query all the emails from your index

00:07:21.989 --> 00:07:26.699
Caption: will be with the state eco pending and

00:07:23.790 --> 00:07:28.589
Caption: try to send it to the server and if it&#39;s

00:07:26.700 --> 00:07:34.740
Caption: if it&#39;s a client then it will do

00:07:28.589 --> 00:07:36.750
Caption: exponential back-off and if in the

00:07:34.739 --> 00:07:39.690
Caption: meantime the network come back online

00:07:36.750 --> 00:07:41.190
Caption: all the email will be sent so this is a

00:07:39.690 --> 00:07:44.929
Caption: I think it&#39;s a lot better user

00:07:41.190 --> 00:07:44.929
Caption: experience compared to you doing it Mary

00:07:47.000 --> 00:07:54.809
Caption: King MP stand for accelerated mobile

00:07:49.950 --> 00:07:56.820
Caption: pages it&#39;s a subset of HTML which a

00:07:54.809 --> 00:07:58.709
Caption: bunch of prescription to ensure that

00:07:56.820 --> 00:08:01.380
Caption: your application can be rendered quickly

00:07:58.709 --> 00:08:04.559
Caption: to things like it has to force you to

00:08:01.380 --> 00:08:06.570
Caption: specify imagery the source cell so it

00:08:04.559 --> 00:08:08.369
Caption: will not try to download desktop image

00:08:06.570 --> 00:08:11.700
Caption: if the user is pulling it from a mobile

00:08:08.369 --> 00:08:14.729
Caption: so in the past people like to ask the

00:08:11.700 --> 00:08:20.400
Caption: question why should I build my web that

00:08:14.730 --> 00:08:21.290
Caption: I am here pwe right so what do I mean by

00:08:20.399 --> 00:08:25.649
Caption: this

00:08:21.290 --> 00:08:28.369
Caption: so if one of the pattern that people use

00:08:25.649 --> 00:08:32.369
Caption: is they can use MPs the entry point

00:08:28.369 --> 00:08:34.559
Caption: so you have a landing page let&#39;s say

00:08:32.369 --> 00:08:37.260
Caption: it&#39;s a landing but didn&#39;t your home and

00:08:34.559 --> 00:08:42.408
Caption: that is the empty page but in that

00:08:37.260 --> 00:08:42.408
Caption: particular menu that you include this MP

00:08:43.880 --> 00:08:49.919
Caption: what it will do it will load an iframe

00:08:47.028 --> 00:08:52.289
Caption: pointing to your app so app d-d-duel

00:08:49.919 --> 00:08:54.570
Caption: calm and then install the service local

00:08:52.289 --> 00:08:57.599
Caption: application which mean that by the time

00:08:54.570 --> 00:09:00.028
Caption: your user get redirected to the abdomen

00:08:57.599 --> 00:09:02.278
Caption: it will have all the necessary assets

00:09:00.028 --> 00:09:06.659
Caption: and I will render things between it&#39;s my

00:09:02.278 --> 00:09:13.429
Caption: way the other thing that you can do is

00:09:06.659 --> 00:09:19.859
Caption: you can load MP content and so typically

00:09:13.429 --> 00:09:23.099
Caption: if you you fetch the data from a server

00:09:19.859 --> 00:09:25.528
Caption: it return a JSON and then you turn the

00:09:23.099 --> 00:09:27.569
Caption: JSON into HTML and then have the same

00:09:25.528 --> 00:09:31.440
Caption: target rendered it will be a lot easier

00:09:27.570 --> 00:09:33.208
Caption: if I can just query HTML and then put it

00:09:31.440 --> 00:09:34.979
Caption: in a new XML and that get rendered could

00:09:33.208 --> 00:09:38.518
Caption: be and that&#39;s the way you do it using a

00:09:34.979 --> 00:09:42.059
Caption: shadow DOM yep shadow DOM is just a w3c

00:09:38.518 --> 00:09:44.760
Caption: spec that give you n cup slept it don&#39;t

00:09:42.059 --> 00:09:48.320
Caption: offer you a challenge of how component

00:09:44.760 --> 00:09:48.320
Caption: that we suffered with the parent company

00:09:48.828 --> 00:09:55.229
Caption: server-side rendering right so now

00:09:51.659 --> 00:09:57.088
Caption: people saying that hey if I go to the

00:09:55.229 --> 00:10:00.208
Caption: app directly it may takes a while before

00:09:57.088 --> 00:10:08.190
Caption: I see the content so I should actually

00:10:00.208 --> 00:10:10.828
Caption: put up so I think if you launch the dc2

00:10:08.190 --> 00:10:12.869
Caption: instance just to do to render your react

00:10:10.828 --> 00:10:13.380
Caption: app don&#39;t do you think that&#39;s a good

00:10:12.869 --> 00:10:16.289
Caption: idea

00:10:13.380 --> 00:10:19.169
Caption: so what what can you do to avoid this

00:10:16.289 --> 00:10:23.250
Caption: right we should do a server less thing

00:10:19.169 --> 00:10:25.708
Caption: so this is a probably applied to it

00:10:23.250 --> 00:10:26.309
Caption: obvious but edibles allow you to deploy

00:10:25.708 --> 00:10:29.880
Caption: your lambda

00:10:26.309 --> 00:10:31.768
Caption: @vh which means that you can put no in

00:10:29.880 --> 00:10:32.849
Caption: your typical if you&#39;re hosting an SP

00:10:31.768 --> 00:10:36.528
Caption: application in

00:10:32.849 --> 00:10:39.419
Caption: we have a cart front and that serve as a

00:10:36.528 --> 00:10:41.818
Caption: CDN to your extreme which continued in

00:10:39.419 --> 00:10:43.198
Caption: this doctor strainer for example what

00:10:41.818 --> 00:10:46.588
Caption: you can do is you can put a lambda H

00:10:43.198 --> 00:10:50.638
Caption: before that and every time you use and

00:10:46.588 --> 00:10:52.729
Caption: make a request it grab the s3 getting

00:10:50.638 --> 00:10:55.768
Caption: back to land it and you can grab any

00:10:52.729 --> 00:10:58.289
Caption: dynamic content and pre-rendered the

00:10:55.768 --> 00:11:00.388
Caption: index of that HTML before sending

00:10:58.289 --> 00:11:01.739
Caption: sending it back to the user and there is

00:11:00.388 --> 00:11:03.528
Caption: no server that you have to maintain in

00:11:01.739 --> 00:11:07.549
Caption: this case right so that&#39;s just in

00:11:03.528 --> 00:11:10.888
Caption: summary the other thing is pre-rendering

00:11:07.549 --> 00:11:12.958
Caption: in most of the taste you don&#39;t really

00:11:10.888 --> 00:11:14.159
Caption: need to do a lot of offensive ending so

00:11:12.958 --> 00:11:16.289
Caption: what you can do you make the

00:11:14.159 --> 00:11:18.898
Caption: pre-rendering part of your deployment

00:11:16.289 --> 00:11:23.119
Caption: pipeline so after you run your unit test

00:11:18.898 --> 00:11:25.018
Caption: after you build your application you run

00:11:23.119 --> 00:11:27.809
Caption: headless brought to like a puppeteer

00:11:25.018 --> 00:11:30.388
Caption: which boot up your application and then

00:11:27.809 --> 00:11:33.958
Caption: take a snapshot of the initial page and

00:11:30.388 --> 00:11:35.909
Caption: then injected into the index.html and

00:11:33.958 --> 00:11:38.669
Caption: then store that into your pass storage

00:11:35.909 --> 00:11:42.958
Caption: so in this case you don&#39;t really need

00:11:38.669 --> 00:11:45.539
Caption: the server stop rendering at all some of

00:11:42.958 --> 00:11:47.609
Caption: the tools that you can use to do this we

00:11:45.539 --> 00:11:49.169
Caption: possibly we use this one because we&#39;ve

00:11:47.609 --> 00:11:52.739
Caption: worked with and we work really nicely

00:11:49.169 --> 00:11:56.549
Caption: with the web pack shared memory and

00:11:52.739 --> 00:12:01.880
Caption: atomic alright so javascript original is

00:11:56.549 --> 00:12:01.880
Caption: a single single application right but

00:12:02.778 --> 00:12:08.448
Caption: when you have a janky application it&#39;s

00:12:05.099 --> 00:12:10.500
Caption: normally when the browser render a

00:12:08.448 --> 00:12:12.179
Caption: sprint per second is higher than 60

00:12:10.500 --> 00:12:13.169
Caption: frames per second and that normally

00:12:12.179 --> 00:12:15.299
Caption: happen because you have a heavy

00:12:13.169 --> 00:12:17.609
Caption: computation and then they introduce web

00:12:15.299 --> 00:12:19.979
Caption: worker so you can spin up notepad

00:12:17.609 --> 00:12:22.229
Caption: passing some data to the web worker and

00:12:19.979 --> 00:12:26.208
Caption: then whether sending back the data but

00:12:22.229 --> 00:12:29.130
Caption: when you work with like a big object it

00:12:26.208 --> 00:12:30.809
Caption: it has to do a structure of cloning

00:12:29.130 --> 00:12:33.239
Caption: algorithm which means that it has to go

00:12:30.809 --> 00:12:35.189
Caption: to all the properties and make it thrown

00:12:33.239 --> 00:12:38.008
Caption: out of it before you sending the data to

00:12:35.189 --> 00:12:39.899
Caption: web worker and also the other way run so

00:12:38.008 --> 00:12:41.169
Caption: even though you can spin up a thread but

00:12:39.898 --> 00:12:43.599
Caption: the message passing

00:12:41.169 --> 00:12:46.178
Caption: before between the main thread and the

00:12:43.599 --> 00:12:48.638
Caption: worker track is correct empty so last

00:12:46.179 --> 00:12:51.939
Caption: year I think most of the major browsers

00:12:48.638 --> 00:12:55.568
Caption: they they introduced shared array battle

00:12:51.939 --> 00:12:58.540
Caption: so long story short this allow you to

00:12:55.568 --> 00:13:00.758
Caption: create the memory space and pass that to

00:12:58.539 --> 00:13:02.768
Caption: your web worker and now your main thread

00:13:00.758 --> 00:13:05.048
Caption: and the web worker share the same memory

00:13:02.768 --> 00:13:07.289
Caption: space so you no longer pass in the the

00:13:05.049 --> 00:13:19.720
Caption: pure object it&#39;s just a memory address

00:13:07.289 --> 00:13:26.378
Caption: so what this has anything to do with so

00:13:19.719 --> 00:13:30.928
Caption: I recommend he stopped by my Beanstalk

00:13:26.379 --> 00:13:35.309
Caption: which is one of the meander and she

00:13:30.929 --> 00:13:42.509
Caption: discussion with the team that will react

00:13:35.309 --> 00:13:45.999
Caption: so I think we introduced to react fiber

00:13:42.508 --> 00:13:49.388
Caption: version 16 well and what if that&#39;s give

00:13:45.999 --> 00:13:51.549
Caption: you it gives you a new reconciliation

00:13:49.388 --> 00:13:53.618
Caption: engine so if you think about react

00:13:51.549 --> 00:13:56.169
Caption: there&#39;s a true logical part that&#39;s the

00:13:53.619 --> 00:13:58.749
Caption: Rope reconciliation part which is just a

00:13:56.169 --> 00:14:00.910
Caption: deep engine for the state so if we have

00:13:58.749 --> 00:14:03.160
Caption: a new state comfortably the whole clip

00:14:00.909 --> 00:14:04.599
Caption: and then get the bittern and then send

00:14:03.159 --> 00:14:07.359
Caption: it into the rendering engine

00:14:04.599 --> 00:14:09.729
Caption: so what Lincoln said there there&#39;s a

00:14:07.359 --> 00:14:13.328
Caption: number of a proposal specification for

00:14:09.729 --> 00:14:16.238
Caption: assembly that allow sharing of memory

00:14:13.328 --> 00:14:18.669
Caption: between web assembly threads and the

00:14:16.239 --> 00:14:20.739
Caption: JavaScript tracks so what that means is

00:14:18.669 --> 00:14:23.160
Caption: you can write your reconsideration

00:14:20.739 --> 00:14:26.139
Caption: engine in webassembly

00:14:23.159 --> 00:14:28.568
Caption: but the rendering engine in chemistry in

00:14:26.138 --> 00:14:30.458
Caption: reactor so you have all of the benefit

00:14:28.568 --> 00:14:32.198
Caption: of the native code when you comparing

00:14:30.458 --> 00:14:34.178
Caption: all the state and when you&#39;re doing the

00:14:32.198 --> 00:14:37.558
Caption: heavy computation but the rendering is

00:14:34.179 --> 00:14:37.559
Caption: still being done by young state

00:14:38.489 --> 00:14:41.049
Caption: education

00:14:39.609 --> 00:14:42.819
Caption: all right I think in the in the

00:14:41.049 --> 00:14:44.410
Caption: beginning I mentioned that it&#39;s really

00:14:42.818 --> 00:14:47.438
Caption: hard for the technician to be able to

00:14:44.409 --> 00:14:48.719
Caption: type in a context password must be a

00:14:47.439 --> 00:14:52.160
Caption: better way to do this

00:14:48.719 --> 00:14:56.008
Caption: so luckily the pedo Alliance recently

00:14:52.159 --> 00:14:58.198
Caption: work with major major browsers they

00:14:56.008 --> 00:15:00.838
Caption: released this specification called web

00:14:58.198 --> 00:15:03.568
Caption: application of web authentication API

00:15:00.838 --> 00:15:06.659
Caption: then allow you to authenticate either

00:15:03.568 --> 00:15:09.869
Caption: using a USB prop key or using a your

00:15:06.659 --> 00:15:15.648
Caption: fingerprint if your devices have one so

00:15:09.869 --> 00:15:15.648
Caption: just quickly show you how it works so

00:15:15.888 --> 00:15:36.088
Caption: this is the so how does this actually

00:15:31.948 --> 00:15:39.508
Caption: work it has two part the registration

00:15:36.088 --> 00:15:41.938
Caption: and login bit so one thing that is quite

00:15:39.508 --> 00:15:43.859
Caption: important is whenever the user registers

00:15:41.939 --> 00:15:47.250
Caption: to the application it&#39;s for the

00:15:43.859 --> 00:15:49.049
Caption: challenge and then the browser for the

00:15:47.250 --> 00:15:52.258
Caption: challenge and the origin so that&#39;s

00:15:49.049 --> 00:15:53.148
Caption: that&#39;s the domain to the Bakke and what

00:15:52.258 --> 00:15:56.879
Caption: we generally

00:15:53.148 --> 00:15:58.828
Caption: pair of private and public key it will

00:15:56.880 --> 00:16:03.869
Caption: then sign the challenge using the

00:15:58.828 --> 00:16:05.969
Caption: faculty and send back the sign challenge

00:16:03.869 --> 00:16:07.588
Caption: public key and the key handle back to

00:16:05.969 --> 00:16:09.989
Caption: your serving so now the user is

00:16:07.588 --> 00:16:13.438
Caption: registered so what happened when they

00:16:09.989 --> 00:16:16.469
Caption: log in when they log in again the

00:16:13.439 --> 00:16:18.360
Caption: process and the challenge and then sorry

00:16:16.469 --> 00:16:20.818
Caption: the server send the challenge and the

00:16:18.359 --> 00:16:23.159
Caption: browser forward the chat the challenge

00:16:20.818 --> 00:16:25.289
Caption: and the origin to the top team so if

00:16:23.159 --> 00:16:27.539
Caption: your website is being if you&#39;re being

00:16:25.289 --> 00:16:30.568
Caption: pissed and somebody do like a doji

00:16:27.539 --> 00:16:32.549
Caption: website it will send a challenge but

00:16:30.568 --> 00:16:35.789
Caption: because you&#39;re not relying on the user

00:16:32.549 --> 00:16:37.349
Caption: to like a gluten to look at the URL it

00:16:35.789 --> 00:16:40.169
Caption: actually the browser that&#39;s forward the

00:16:37.349 --> 00:16:43.169
Caption: origin to your bhakti the browser sorry

00:16:40.169 --> 00:16:45.208
Caption: the browser will afford that fake you

00:16:43.169 --> 00:16:47.398
Caption: are alright and then that&#39;s not the same

00:16:45.208 --> 00:16:50.729
Caption: well that you saw originally and then

00:16:47.398 --> 00:16:53.338
Caption: authentication so that&#39;s why not only

00:16:50.729 --> 00:16:55.500
Caption: this is handy it is also most secure so

00:16:53.338 --> 00:16:56.219
Caption: after a check that everything is alright

00:16:55.500 --> 00:16:59.219
Caption: again

00:16:56.219 --> 00:17:00.509
Caption: it&#39;s signed the response with the party

00:16:59.219 --> 00:17:02.489
Caption: and for the

00:17:00.510 --> 00:17:04.979
Caption: to the silver and then silver just check

00:17:02.489 --> 00:17:09.000
Caption: whether using the public key whether the

00:17:04.979 --> 00:17:13.500
Caption: challenge is being signed for every okay

00:17:09.000 --> 00:17:16.140
Caption: now that we have our nice pronin what

00:17:13.500 --> 00:17:17.640
Caption: about the backend because I only have 20

00:17:16.140 --> 00:17:19.140
Caption: minutes I&#39;m just going to skip through

00:17:17.640 --> 00:17:21.178
Caption: out the backend but feel free to have a

00:17:19.140 --> 00:17:25.859
Caption: chat with me how how how you gonna build

00:17:21.178 --> 00:17:29.789
Caption: it first of all do not use one type of

00:17:25.859 --> 00:17:31.079
Caption: database or everything right this is I

00:17:29.790 --> 00:17:33.119
Caption: don&#39;t want to say the bodies actually

00:17:31.079 --> 00:17:35.250
Caption: cut 101 but that&#39;s one thing about

00:17:33.119 --> 00:17:37.349
Caption: common sense it&#39;s not that common

00:17:35.250 --> 00:17:40.530
Caption: so if you were to add up this website

00:17:37.349 --> 00:17:43.789
Caption: but they literally tell you this is the

00:17:40.530 --> 00:17:43.790
Caption: different database that they provide

00:17:44.030 --> 00:17:55.080
Caption: Google they build a decision tree if you

00:17:49.130 --> 00:17:57.839
Caption: write so one thing to don&#39;t think that

00:17:55.079 --> 00:18:02.819
Caption: you you do do not use the same database

00:17:57.839 --> 00:18:05.699
Caption: or witness and then server list is not

00:18:02.819 --> 00:18:08.339
Caption: function as a service you can literally

00:18:05.699 --> 00:18:11.178
Caption: build a full functioning system end to

00:18:08.339 --> 00:18:13.739
Caption: end in a soloist way I think this just

00:18:11.178 --> 00:18:15.779
Caption: again this is from Google just telling

00:18:13.739 --> 00:18:17.790
Caption: you that for all of their managed

00:18:15.780 --> 00:18:21.630
Caption: service component you can find a

00:18:17.790 --> 00:18:31.619
Caption: corresponding several service and one of

00:18:21.630 --> 00:18:34.229
Caption: the thing that is really awesome in

00:18:31.619 --> 00:18:36.359
Caption: three or four seconds and you only pay

00:18:34.229 --> 00:18:38.308
Caption: when you do the query right so that&#39;s

00:18:36.359 --> 00:18:40.829
Caption: what that&#39;s what servers not only there

00:18:38.308 --> 00:18:46.979
Caption: is no operation but it can scale down

00:18:40.829 --> 00:18:48.599
Caption: with you if you work in the cloud for

00:18:46.979 --> 00:18:50.729
Caption: long enough you know that everything is

00:18:48.599 --> 00:18:52.289
Caption: the events they write to give you a deal

00:18:50.729 --> 00:18:56.339
Caption: aw for example you have your extra

00:18:52.290 --> 00:18:59.130
Caption: events you have your eventual events

00:18:56.339 --> 00:19:01.199
Caption: your dynamo D then we need dynamo DB

00:18:59.130 --> 00:19:04.109
Caption: eventually everything is in advance and

00:19:01.199 --> 00:19:04.649
Caption: if you do IOT again everything is an

00:19:04.109 --> 00:19:07.530
Caption: event

00:19:04.650 --> 00:19:11.000
Caption: the problem with event is like in Arabic

00:19:07.530 --> 00:19:14.450
Caption: other words have SMS and are kinases

00:19:11.000 --> 00:19:16.099
Caption: like event streaming system we didn&#39;t

00:19:14.449 --> 00:19:18.619
Caption: MMS even those two system doesn&#39;t have

00:19:16.099 --> 00:19:21.469
Caption: the same specification so cloudy event

00:19:18.619 --> 00:19:24.619
Caption: is a part of the project by the top-

00:19:21.469 --> 00:19:26.750
Caption: foundation is try to come up with with

00:19:24.619 --> 00:19:29.658
Caption: the specification of how do you describe

00:19:26.750 --> 00:19:31.699
Caption: the event and that will allow you to

00:19:29.659 --> 00:19:36.020
Caption: build a lot of tools and make things

00:19:31.699 --> 00:19:38.418
Caption: easier and this is I think Brandenburg&#39;s

00:19:36.020 --> 00:19:40.789
Caption: in the coupon this begin meal said that

00:19:38.418 --> 00:19:43.880
Caption: another in order for you to deploy your

00:19:40.788 --> 00:19:46.629
Caption: application to do beneath this we have

00:19:43.880 --> 00:19:50.539
Caption: to learn three languages Java Script

00:19:46.630 --> 00:19:52.428
Caption: that&#39;s your application how do you

00:19:50.538 --> 00:19:54.859
Caption: package your JavaScript and then you

00:19:52.428 --> 00:19:56.750
Caption: have to learn mo how do you include your

00:19:54.859 --> 00:19:58.760
Caption: container in your kubernetes definition

00:19:56.750 --> 00:20:01.428
Caption: right so he said that there must be a

00:19:58.760 --> 00:20:05.058
Caption: better way of doing all of them in one

00:20:01.428 --> 00:20:07.489
Caption: language right so this is the continuous

00:20:05.058 --> 00:20:09.109
Caption: bid right because most of the time we

00:20:07.489 --> 00:20:10.658
Caption: don&#39;t really care about the control we

00:20:09.109 --> 00:20:13.729
Caption: we only care about the convenience and

00:20:10.659 --> 00:20:16.490
Caption: this is what he proposed this is still

00:20:13.729 --> 00:20:19.428
Caption: in beta but it&#39;s allow you to specify

00:20:16.489 --> 00:20:22.548
Caption: your application but using the same code

00:20:19.428 --> 00:20:25.519
Caption: dose or the time how you want that to be

00:20:22.548 --> 00:20:27.529
Caption: deployed so this will prevent issues

00:20:25.520 --> 00:20:30.200
Caption: things like you expose your local

00:20:27.530 --> 00:20:32.450
Caption: container in 480 but in your community

00:20:30.199 --> 00:20:34.788
Caption: communities technician we open port 8080

00:20:32.449 --> 00:20:37.038
Caption: to example which because everything in

00:20:34.788 --> 00:20:38.959
Caption: one line caught you can unit test your

00:20:37.038 --> 00:20:41.769
Caption: application just no longer interest

00:20:38.959 --> 00:20:45.439
Caption: after s code infrastructure or eise code

00:20:41.770 --> 00:20:47.150
Caption: and the other thing is self illumi the I

00:20:45.439 --> 00:20:49.250
Caption: think what they do is really smart if

00:20:47.150 --> 00:20:50.839
Caption: you have a look at the open source

00:20:49.250 --> 00:20:54.168
Caption: project it&#39;s just using a bunch of

00:20:50.839 --> 00:20:57.288
Caption: telephone provider which is a goal class

00:20:54.168 --> 00:20:59.479
Caption: will go into pest to describe cloud

00:20:57.288 --> 00:21:01.879
Caption: resources and it used that to actually

00:20:59.479 --> 00:21:04.428
Caption: build a robot of SDK and programming

00:21:01.880 --> 00:21:09.548
Caption: language to type save your instructor

00:21:04.428 --> 00:21:11.779
Caption: first code so we&#39;re ready to build

00:21:09.548 --> 00:21:14.569
Caption: native progressive web app server

00:21:11.780 --> 00:21:17.539
Caption: loosely so this is your typical the page

00:21:14.569 --> 00:21:20.209
Caption: right here at your landing page written

00:21:17.538 --> 00:21:22.158
Caption: in MV it&#39;s going to install your package

00:21:20.209 --> 00:21:23.779
Caption: in the backend when you go to your

00:21:22.159 --> 00:21:25.130
Caption: application everything will be displayed

00:21:23.780 --> 00:21:27.500
Caption: straight away because everything has

00:21:25.130 --> 00:21:29.540
Caption: been caged and user only need the

00:21:27.500 --> 00:21:32.569
Caption: fingerprint or the USB key to login and

00:21:29.540 --> 00:21:34.280
Caption: you have dynamic your dynamic content

00:21:32.569 --> 00:21:36.949
Caption: storing DynamoDB your static content

00:21:34.280 --> 00:21:38.540
Caption: from history and every time a user do a

00:21:36.949 --> 00:21:40.609
Caption: changes in the remedy is gonna string a

00:21:38.540 --> 00:21:42.440
Caption: bunch of events which lambda is gonna

00:21:40.609 --> 00:21:44.209
Caption: forward to even get way that&#39;s going to

00:21:42.439 --> 00:21:45.919
Caption: forward to Google Cloud function it&#39;s

00:21:44.209 --> 00:21:47.809
Caption: going to store even in bigquery so your

00:21:45.920 --> 00:21:53.260
Caption: hipster data scientists can analyze it

00:21:47.810 --> 00:21:53.260
Caption: using a different provider thank you

00:21:53.770 --> 00:21:57.420
Caption: [Applause]

